<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='weather_data+ (Multiple Connections)' inline='true' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='weather_data' name='excel-direct.1ov0foy0fb2fo713vw3ln0ror18p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/github/tableau/world-weather-ppi-dashboard/dane do tableau/weather_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='mapped_city' name='excel-direct.0gpe1hi1kl4hok1c7zj7q0kdo56n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/github/tableau/world-weather-ppi-dashboard/dane do tableau/mapped_city.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='global cost of living' name='excel-direct.16ixxtn0o6z9i31gcgx9v1bibrod'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/github/tableau/world-weather-ppi-dashboard/dane do tableau/global cost of living.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.1ov0foy0fb2fo713vw3ln0ror18p' name='weather_data' table='[weather_data$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='2'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='City ID' ordinal='1' />
              <column datatype='real' name='Temperature (C*)' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0gpe1hi1kl4hok1c7zj7q0kdo56n' name='mapped_City' table='[mapped_City$]' type='table'>
            <columns gridOrigin='A1:K1001:no:A1:K1001:0' header='yes' outcome='2'>
              <column datatype='string' name='City ID' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='string' name='city_ascii' ordinal='2' />
              <column datatype='real' name='lat' ordinal='3' />
              <column datatype='real' name='lng' ordinal='4' />
              <column datatype='string' name='country' ordinal='5' />
              <column datatype='string' name='iso2' ordinal='6' />
              <column datatype='string' name='iso3' ordinal='7' />
              <column datatype='string' name='admin_name' ordinal='8' />
              <column datatype='string' name='capital' ordinal='9' />
              <column datatype='integer' name='population' ordinal='10' />
            </columns>
          </relation>
          <relation connection='excel-direct.16ixxtn0o6z9i31gcgx9v1bibrod' name='cost-of-living_v2' table='[&apos;cost-of-living_v2$&apos;]' type='table'>
            <columns gridOrigin='A1:BF4957:no:A1:BF4957:0' header='yes' outcome='6'>
              <column datatype='string' name='city' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='real' name='x1' ordinal='2' />
              <column datatype='real' name='x2' ordinal='3' />
              <column datatype='real' name='x3' ordinal='4' />
              <column datatype='real' name='x4' ordinal='5' />
              <column datatype='real' name='x5' ordinal='6' />
              <column datatype='real' name='x6' ordinal='7' />
              <column datatype='real' name='x7' ordinal='8' />
              <column datatype='real' name='x8' ordinal='9' />
              <column datatype='real' name='x9' ordinal='10' />
              <column datatype='real' name='x10' ordinal='11' />
              <column datatype='real' name='x11' ordinal='12' />
              <column datatype='real' name='x12' ordinal='13' />
              <column datatype='real' name='x13' ordinal='14' />
              <column datatype='real' name='x14' ordinal='15' />
              <column datatype='real' name='x15' ordinal='16' />
              <column datatype='real' name='x16' ordinal='17' />
              <column datatype='real' name='x17' ordinal='18' />
              <column datatype='real' name='x18' ordinal='19' />
              <column datatype='real' name='x19' ordinal='20' />
              <column datatype='real' name='x20' ordinal='21' />
              <column datatype='real' name='x21' ordinal='22' />
              <column datatype='real' name='x22' ordinal='23' />
              <column datatype='real' name='x23' ordinal='24' />
              <column datatype='real' name='x24' ordinal='25' />
              <column datatype='real' name='x25' ordinal='26' />
              <column datatype='real' name='x26' ordinal='27' />
              <column datatype='real' name='x27' ordinal='28' />
              <column datatype='real' name='x28' ordinal='29' />
              <column datatype='real' name='x29' ordinal='30' />
              <column datatype='real' name='x30' ordinal='31' />
              <column datatype='real' name='x31' ordinal='32' />
              <column datatype='real' name='x32' ordinal='33' />
              <column datatype='real' name='x33' ordinal='34' />
              <column datatype='real' name='x34' ordinal='35' />
              <column datatype='real' name='x35' ordinal='36' />
              <column datatype='real' name='x36' ordinal='37' />
              <column datatype='real' name='x37' ordinal='38' />
              <column datatype='real' name='x38' ordinal='39' />
              <column datatype='real' name='x39' ordinal='40' />
              <column datatype='real' name='x40' ordinal='41' />
              <column datatype='real' name='x41' ordinal='42' />
              <column datatype='real' name='x42' ordinal='43' />
              <column datatype='real' name='x43' ordinal='44' />
              <column datatype='real' name='x44' ordinal='45' />
              <column datatype='real' name='x45' ordinal='46' />
              <column datatype='real' name='x46' ordinal='47' />
              <column datatype='real' name='x47' ordinal='48' />
              <column datatype='real' name='x48' ordinal='49' />
              <column datatype='real' name='x49' ordinal='50' />
              <column datatype='real' name='x50' ordinal='51' />
              <column datatype='real' name='x51' ordinal='52' />
              <column datatype='real' name='x52' ordinal='53' />
              <column datatype='real' name='x53' ordinal='54' />
              <column datatype='real' name='x54' ordinal='55' />
              <column datatype='real' name='x55' ordinal='56' />
              <column datatype='integer' name='data_quality' ordinal='57' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[1 Pair of Jeans (Levis 501 Or Similar) (USD)]' value='[cost-of-living_v2].[1 Pair of Jeans (Levis 501 Or Similar) (USD)]' />
          <map key='[1 Pair of Men Leather Business Shoes (USD)]' value='[cost-of-living_v2].[1 Pair of Men Leather Business Shoes (USD)]' />
          <map key='[1 Pair of Nike Running Shoes (Mid-Range) (USD)]' value='[cost-of-living_v2].[1 Pair of Nike Running Shoes (Mid-Range) (USD)]' />
          <map key='[1 Summer Dress in a Chain Store (Zara, H&amp;M, …) (USD)]' value='[cost-of-living_v2].[1 Summer Dress in a Chain Store (Zara, H&amp;M, …) (USD)]' />
          <map key='[1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)]' value='[cost-of-living_v2].[1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)]' />
          <map key='[Apartment (1 bedroom) Outside of Centre (USD)]' value='[cost-of-living_v2].[Apartment (1 bedroom) Outside of Centre (USD)]' />
          <map key='[Apartment (1 bedroom) in City Centre (USD)]' value='[cost-of-living_v2].[Apartment (1 bedroom) in City Centre (USD)]' />
          <map key='[Apartment (3 bedrooms) Outside of Centre (USD)]' value='[cost-of-living_v2].[Apartment (3 bedrooms) Outside of Centre (USD)]' />
          <map key='[Apartment (3 bedrooms) in City Centre (USD)]' value='[cost-of-living_v2].[Apartment (3 bedrooms) in City Centre (USD)]' />
          <map key='[Apples (1kg) (USD)]' value='[cost-of-living_v2].[Apples (1kg) (USD)]' />
          <map key='[Average Monthly Net Salary (After Tax) (USD)]' value='[cost-of-living_v2].[Average Monthly Net Salary (After Tax) (USD)]' />
          <map key='[Banana (1kg) (USD)]' value='[cost-of-living_v2].[Banana (1kg) (USD)]' />
          <map key='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' value='[cost-of-living_v2].[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' />
          <map key='[Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)]' value='[cost-of-living_v2].[Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)]' />
          <map key='[Bottle of Wine (Mid-Range, at the market) (USD)]' value='[cost-of-living_v2].[Bottle of Wine (Mid-Range, at the market) (USD)]' />
          <map key='[Cappuccino (regular, in restaurants) (USD)]' value='[cost-of-living_v2].[Cappuccino (regular, in restaurants) (USD)]' />
          <map key='[Chicken Fillets (1kg) (USD)]' value='[cost-of-living_v2].[Chicken Fillets (1kg) (USD)]' />
          <map key='[Cigarettes 20 Pack (Marlboro) (USD)]' value='[cost-of-living_v2].[Cigarettes 20 Pack (Marlboro) (USD)]' />
          <map key='[Cinema, International Release, 1 Seat (USD)]' value='[cost-of-living_v2].[Cinema, International Release, 1 Seat (USD)]' />
          <map key='[City ID (mapped!City)]' value='[mapped_City].[City ID]' />
          <map key='[City ID]' value='[weather_data].[City ID]' />
          <map key='[Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)]' value='[cost-of-living_v2].[Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)]' />
          <map key='[Date]' value='[weather_data].[Date]' />
          <map key='[Domestic Beer (0.5 liter bottle, at the market) (USD)]' value='[cost-of-living_v2].[Domestic Beer (0.5 liter bottle, at the market) (USD)]' />
          <map key='[Domestic Beer (0.5 liter draught, in restaurants) (USD)]' value='[cost-of-living_v2].[Domestic Beer (0.5 liter draught, in restaurants) (USD)]' />
          <map key='[Eggs (regular) (12) (USD)]' value='[cost-of-living_v2].[Eggs (regular) (12) (USD)]' />
          <map key='[Fitness Club, Monthly Fee for 1 Adult (USD)]' value='[cost-of-living_v2].[Fitness Club, Monthly Fee for 1 Adult (USD)]' />
          <map key='[Gasoline (1 liter) (USD)]' value='[cost-of-living_v2].[Gasoline (1 liter) (USD)]' />
          <map key='[Imported Beer (0.33 liter bottle, at the market) (USD)]' value='[cost-of-living_v2].[Imported Beer (0.33 liter bottle, at the market) (USD)]' />
          <map key='[Imported Beer (0.33 liter bottle, in restaurants) (USD)]' value='[cost-of-living_v2].[Imported Beer (0.33 liter bottle, in restaurants) (USD)]' />
          <map key='[International Primary School, Yearly for 1 Child (USD)]' value='[cost-of-living_v2].[International Primary School, Yearly for 1 Child (USD)]' />
          <map key='[Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)]' value='[cost-of-living_v2].[Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)]' />
          <map key='[Lettuce (1 head) (USD)]' value='[cost-of-living_v2].[Lettuce (1 head) (USD)]' />
          <map key='[Loaf of Fresh White Bread (500g) (USD)]' value='[cost-of-living_v2].[Loaf of Fresh White Bread (500g) (USD)]' />
          <map key='[Local Cheese (1kg) (USD)]' value='[cost-of-living_v2].[Local Cheese (1kg) (USD)]' />
          <map key='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' value='[cost-of-living_v2].[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
          <map key='[Meal for 2 People, Mid-range Restaurant, Three-course (USD)]' value='[cost-of-living_v2].[Meal for 2 People, Mid-range Restaurant, Three-course (USD)]' />
          <map key='[Meal, Inexpensive Restaurant (USD)]' value='[cost-of-living_v2].[Meal, Inexpensive Restaurant (USD)]' />
          <map key='[Milk (regular), (1 liter) (USD)]' value='[cost-of-living_v2].[Milk (regular), (1 liter) (USD)]' />
          <map key='[Monthly Pass (Regular Price) (USD)]' value='[cost-of-living_v2].[Monthly Pass (Regular Price) (USD)]' />
          <map key='[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate]' value='[cost-of-living_v2].[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate]' />
          <map key='[One-way Ticket (Local Transport) (USD)]' value='[cost-of-living_v2].[One-way Ticket (Local Transport) (USD)]' />
          <map key='[Onion (1kg) (USD)]' value='[cost-of-living_v2].[Onion (1kg) (USD)]' />
          <map key='[Oranges (1kg) (USD)]' value='[cost-of-living_v2].[Oranges (1kg) (USD)]' />
          <map key='[Potato (1kg) (USD)]' value='[cost-of-living_v2].[Potato (1kg) (USD)]' />
          <map key='[Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)]' value='[cost-of-living_v2].[Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)]' />
          <map key='[Price per Square Meter to Buy Apartment Outside of Centre (USD)]' value='[cost-of-living_v2].[Price per Square Meter to Buy Apartment Outside of Centre (USD)]' />
          <map key='[Price per Square Meter to Buy Apartment in City Centre (USD)]' value='[cost-of-living_v2].[Price per Square Meter to Buy Apartment in City Centre (USD)]' />
          <map key='[Rice (white), (1kg) (USD)]' value='[cost-of-living_v2].[Rice (white), (1kg) (USD)]' />
          <map key='[Taxi 1hour Waiting (Normal Tariff) (USD)]' value='[cost-of-living_v2].[Taxi 1hour Waiting (Normal Tariff) (USD)]' />
          <map key='[Taxi 1km (Normal Tariff) (USD)]' value='[cost-of-living_v2].[Taxi 1km (Normal Tariff) (USD)]' />
          <map key='[Taxi Start (Normal Tariff) (USD)]' value='[cost-of-living_v2].[Taxi Start (Normal Tariff) (USD)]' />
          <map key='[Temperature (C*)]' value='[weather_data].[Temperature (C*)]' />
          <map key='[Tennis Court Rent (1 Hour on Weekend) (USD)]' value='[cost-of-living_v2].[Tennis Court Rent (1 Hour on Weekend) (USD)]' />
          <map key='[Tomato (1kg) (USD)]' value='[cost-of-living_v2].[Tomato (1kg) (USD)]' />
          <map key='[Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)]' value='[cost-of-living_v2].[Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)]' />
          <map key='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' value='[cost-of-living_v2].[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' />
          <map key='[Water (0.33 liter bottle, in restaurants) (USD)]' value='[cost-of-living_v2].[Water (0.33 liter bottle, in restaurants) (USD)]' />
          <map key='[Water (1.5 liter bottle, at the market) (USD)]' value='[cost-of-living_v2].[Water (1.5 liter bottle, at the market) (USD)]' />
          <map key='[admin_name]' value='[mapped_City].[admin_name]' />
          <map key='[capital]' value='[mapped_City].[capital]' />
          <map key='[city (cost-of-living!v2)]' value='[cost-of-living_v2].[city]' />
          <map key='[city]' value='[mapped_City].[city]' />
          <map key='[city_ascii]' value='[mapped_City].[city_ascii]' />
          <map key='[country (cost-of-living!v2)]' value='[cost-of-living_v2].[country]' />
          <map key='[country]' value='[mapped_City].[country]' />
          <map key='[data_quality]' value='[cost-of-living_v2].[data_quality]' />
          <map key='[iso2]' value='[mapped_City].[iso2]' />
          <map key='[iso3]' value='[mapped_City].[iso3]' />
          <map key='[lat]' value='[mapped_City].[lat]' />
          <map key='[lng]' value='[mapped_City].[lng]' />
          <map key='[population]' value='[mapped_City].[population]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[weather_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K1001:no:A1:K1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BF4957:no:A1:BF4957:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[weather_data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City ID]</local-name>
            <parent-name>[weather_data]</parent-name>
            <remote-alias>City ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature (C*)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature (C*)]</local-name>
            <parent-name>[weather_data]</parent-name>
            <remote-alias>Temperature (C*)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City ID (mapped!City)]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>City ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_ascii</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_ascii]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>city_ascii</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso2]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>iso2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso3]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>iso3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>admin_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[admin_name]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>admin_name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>capital</remote-name>
            <remote-type>130</remote-type>
            <local-name>[capital]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>capital</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city (cost-of-living!v2)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (cost-of-living!v2)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meal, Inexpensive Restaurant (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Meal, Inexpensive Restaurant (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Meal, Inexpensive Restaurant (USD)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meal for 2 People, Mid-range Restaurant, Three-course (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Meal for 2 People, Mid-range Restaurant, Three-course (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Meal for 2 People, Mid-range Restaurant, Three-course (USD)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>McMeal at McDonalds (or Equivalent Combo Meal) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>McMeal at McDonalds (or Equivalent Combo Meal) (USD)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic Beer (0.5 liter draught, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic Beer (0.5 liter draught, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Domestic Beer (0.5 liter draught, in restaurants) (USD)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imported Beer (0.33 liter bottle, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imported Beer (0.33 liter bottle, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Imported Beer (0.33 liter bottle, in restaurants) (USD)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cappuccino (regular, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cappuccino (regular, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Cappuccino (regular, in restaurants) (USD)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Water (0.33 liter bottle, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Water (0.33 liter bottle, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Water (0.33 liter bottle, in restaurants) (USD)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Milk (regular), (1 liter) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Milk (regular), (1 liter) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Milk (regular), (1 liter) (USD)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loaf of Fresh White Bread (500g) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Loaf of Fresh White Bread (500g) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Loaf of Fresh White Bread (500g) (USD)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rice (white), (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rice (white), (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Rice (white), (1kg) (USD)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Eggs (regular) (12) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Eggs (regular) (12) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Eggs (regular) (12) (USD)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Cheese (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local Cheese (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Local Cheese (1kg) (USD)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chicken Fillets (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Chicken Fillets (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Chicken Fillets (1kg) (USD)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apples (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apples (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apples (1kg) (USD)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banana (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Banana (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Banana (1kg) (USD)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oranges (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oranges (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Oranges (1kg) (USD)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tomato (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tomato (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Tomato (1kg) (USD)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Potato (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Potato (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Potato (1kg) (USD)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Onion (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Onion (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Onion (1kg) (USD)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lettuce (1 head) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lettuce (1 head) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Lettuce (1 head) (USD)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Water (1.5 liter bottle, at the market) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Water (1.5 liter bottle, at the market) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Water (1.5 liter bottle, at the market) (USD)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bottle of Wine (Mid-Range, at the market) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bottle of Wine (Mid-Range, at the market) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Bottle of Wine (Mid-Range, at the market) (USD)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic Beer (0.5 liter bottle, at the market) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic Beer (0.5 liter bottle, at the market) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Domestic Beer (0.5 liter bottle, at the market) (USD)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imported Beer (0.33 liter bottle, at the market) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imported Beer (0.33 liter bottle, at the market) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Imported Beer (0.33 liter bottle, at the market) (USD)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cigarettes 20 Pack (Marlboro) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cigarettes 20 Pack (Marlboro) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Cigarettes 20 Pack (Marlboro) (USD)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One-way Ticket (Local Transport) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[One-way Ticket (Local Transport) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>One-way Ticket (Local Transport) (USD)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly Pass (Regular Price) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Monthly Pass (Regular Price) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Monthly Pass (Regular Price) (USD)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Taxi Start (Normal Tariff) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Taxi Start (Normal Tariff) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Taxi Start (Normal Tariff) (USD)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Taxi 1km (Normal Tariff) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Taxi 1km (Normal Tariff) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Taxi 1km (Normal Tariff) (USD)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Taxi 1hour Waiting (Normal Tariff) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Taxi 1hour Waiting (Normal Tariff) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Taxi 1hour Waiting (Normal Tariff) (USD)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gasoline (1 liter) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gasoline (1 liter) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Gasoline (1 liter) (USD)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fitness Club, Monthly Fee for 1 Adult (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fitness Club, Monthly Fee for 1 Adult (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Fitness Club, Monthly Fee for 1 Adult (USD)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tennis Court Rent (1 Hour on Weekend) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tennis Court Rent (1 Hour on Weekend) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Tennis Court Rent (1 Hour on Weekend) (USD)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cinema, International Release, 1 Seat (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cinema, International Release, 1 Seat (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Cinema, International Release, 1 Seat (USD)</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Primary School, Yearly for 1 Child (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[International Primary School, Yearly for 1 Child (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>International Primary School, Yearly for 1 Child (USD)</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Pair of Jeans (Levis 501 Or Similar) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Pair of Jeans (Levis 501 Or Similar) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 Pair of Jeans (Levis 501 Or Similar) (USD)</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Summer Dress in a Chain Store (Zara, H&amp;M, …) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Summer Dress in a Chain Store (Zara, H&amp;M, …) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 Summer Dress in a Chain Store (Zara, H&amp;M, …) (USD)</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Pair of Nike Running Shoes (Mid-Range) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Pair of Nike Running Shoes (Mid-Range) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 Pair of Nike Running Shoes (Mid-Range) (USD)</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Pair of Men Leather Business Shoes (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Pair of Men Leather Business Shoes (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 Pair of Men Leather Business Shoes (USD)</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment (1 bedroom) in City Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment (1 bedroom) in City Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apartment (1 bedroom) in City Centre (USD)</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment (1 bedroom) Outside of Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment (1 bedroom) Outside of Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apartment (1 bedroom) Outside of Centre (USD)</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment (3 bedrooms) in City Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment (3 bedrooms) in City Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apartment (3 bedrooms) in City Centre (USD)</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment (3 bedrooms) Outside of Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment (3 bedrooms) Outside of Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apartment (3 bedrooms) Outside of Centre (USD)</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price per Square Meter to Buy Apartment in City Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price per Square Meter to Buy Apartment in City Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Price per Square Meter to Buy Apartment in City Centre (USD)</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price per Square Meter to Buy Apartment Outside of Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price per Square Meter to Buy Apartment Outside of Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Price per Square Meter to Buy Apartment Outside of Centre (USD)</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Monthly Net Salary (After Tax) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Monthly Net Salary (After Tax) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Average Monthly Net Salary (After Tax) (USD)</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_quality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[data_quality]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>data_quality</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' hidden='true' name='[1 Pair of Jeans (Levis 501 Or Similar) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[1 Pair of Men Leather Business Shoes (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[1 Pair of Nike Running Shoes (Mid-Range) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[1 Summer Dress in a Chain Store (Zara, H&amp;M, …) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]&quot;' value='Average Monthly Net Salary' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]&quot;' value='Global Average' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]&quot;' value='Gasoline Cost (1L)' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]&quot;' value='Population' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;' value='City Centre Price' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]&quot;' value='Volkswagen Golf 1.4 ' />
        </aliases>
      </column>
      <column datatype='real' hidden='true' name='[Apartment (1 bedroom) Outside of Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apartment (1 bedroom) in City Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apartment (3 bedrooms) Outside of Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apartment (3 bedrooms) in City Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apples (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Banana (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Bottle of Wine (Mid-Range, at the market) (USD)]' role='measure' type='quantitative' />
      <column caption='Chosen Date' datatype='date' name='[Calculation_1667176289102503936]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='min([Date])' />
      </column>
      <column caption='Time to Earn 60m² Apartment Net' datatype='real' name='[Calculation_313563126171381760]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='60*[Calculation_388153994950119424]/12' />
      </column>
      <column caption='Avg. Square Meter Globally' datatype='real' default-format='C1033%' name='[Calculation_313563126179033089]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED : AVG([Price per Square Meter to Buy Apartment in City Centre (USD)])}' />
      </column>
      <column caption='City&amp;Country' datatype='string' name='[Calculation_313563126192717826]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[city (cost-of-living!v2)] + &quot;, &quot; + [country (cost-of-living!v2)]' />
      </column>
      <column caption='City&amp;Country_weather' datatype='string' name='[Calculation_313563126193152003]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[city] + &quot;, &quot; + [country]' />
      </column>
      <column caption='City Center m² / Monthly Income)/' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_388153994950119424]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Average Monthly Net Salary (After Tax) (USD)] &gt; 0 THEN&#13;&#10;    [Price per Square Meter to Buy Apartment in City Centre (USD)] / [Average Monthly Net Salary (After Tax) (USD)]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
      </column>
      <column caption='Estimated Monthly Rent (City Center)' datatype='real' hidden='true' name='[Calculation_388153994955808770]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Price per Square Meter to Buy Apartment in City Centre (USD)]*[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate])/12' />
      </column>
      <column caption='McMeals for Monthly Net Income' datatype='real' name='[Calculation_388153994957811715]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Average Monthly Net Salary (After Tax) (USD)]/[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
      </column>
      <column datatype='real' hidden='true' name='[Cappuccino (regular, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Chicken Fillets (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Cigarettes 20 Pack (Marlboro) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Cinema, International Release, 1 Seat (USD)]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[City ID (mapped!City)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[City ID]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='real' hidden='true' name='[Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Domestic Beer (0.5 liter bottle, at the market) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Domestic Beer (0.5 liter draught, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Eggs (regular) (12) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Fitness Club, Monthly Fee for 1 Adult (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Gasoline (1 liter) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Imported Beer (0.33 liter bottle, at the market) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Imported Beer (0.33 liter bottle, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[International Primary School, Yearly for 1 Child (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Lettuce (1 head) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Loaf of Fresh White Bread (500g) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Local Cheese (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Meal for 2 People, Mid-range Restaurant, Three-course (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Meal, Inexpensive Restaurant (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Milk (regular), (1 liter) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Monthly Pass (Regular Price) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[One-way Ticket (Local Transport) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Onion (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Oranges (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Potato (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Price per Square Meter to Buy Apartment Outside of Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Rice (white), (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Taxi 1hour Waiting (Normal Tariff) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Taxi 1km (Normal Tariff) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Taxi Start (Normal Tariff) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Temperature (C*)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Tennis Court Rent (1 Hour on Weekend) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Tomato (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Water (0.33 liter bottle, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Water (1.5 liter bottle, at the market) (USD)]' role='measure' type='quantitative' />
      <column caption='cost_of_living' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]' role='measure' type='quantitative' />
      <column caption='mapped_City' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[mapped!City_B1DA842372674938AE1D0951180381F5]' role='measure' type='quantitative' />
      <column caption='weather_data' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[weather!data_78E86BE0619549388DFACE3ACF90BCC6]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[admin_name]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[capital]' role='dimension' type='nominal' />
      <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[city_ascii]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[data_quality]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[iso2]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[iso3]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' hidden='true' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='real' hidden='true' name='[lng]' role='measure' type='quantitative' />
      <column datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='Sum' name='[sum:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' derivation='Sum' name='[sum:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_313563126171381760]' derivation='Sum' name='[sum:Calculation_313563126171381760:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_313563126179033089]' derivation='Sum' name='[sum:Calculation_313563126179033089:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_388153994950119424]' derivation='Sum' name='[sum:Calculation_388153994950119424:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_388153994957811715]' derivation='Sum' name='[sum:Calculation_388153994957811715:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Chicken Fillets (1kg) (USD)]' derivation='Sum' name='[sum:Chicken Fillets (1kg) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gasoline (1 liter) (USD)]' derivation='Sum' name='[sum:Gasoline (1 liter) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' derivation='Sum' name='[sum:McMeal at McDonalds (or Equivalent Combo Meal) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Meal, Inexpensive Restaurant (USD)]' derivation='Sum' name='[sum:Meal, Inexpensive Restaurant (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='Sum' name='[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temperature (C*)]' derivation='Sum' name='[sum:Temperature (C*):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' derivation='Sum' name='[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <group caption='Action (city (cost-of-living!v2))' hidden='true' name='[Action (city (cost-of-living!v2))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (cost-of-living!v2)]' />
        </groupfilter>
      </group>
      <group caption='Action (city (cost-of-living!v2),country (cost-of-living!v2))' hidden='true' name='[Action (city (cost-of-living!v2),country (cost-of-living!v2))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (cost-of-living!v2)]' />
          <groupfilter function='level-members' level='[country (cost-of-living!v2)]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/MATEUSZ/AppData/Local/Temp/TableauTemp/#TableauTemp_15me73c1ry6eia1g4tub5028mpz4.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/22/2025 08:05:46 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='weather!data_78E86BE0619549388DFACE3ACF90BCC6' table='[Extract].[weather!data_78E86BE0619549388DFACE3ACF90BCC6]' type='table' />
            <relation name='mapped!City_B1DA842372674938AE1D0951180381F5' table='[Extract].[mapped!City_B1DA842372674938AE1D0951180381F5]' type='table' />
            <relation name='cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4' table='[Extract].[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]' type='table' />
          </relation>
          <cols>
            <map key='[Average Monthly Net Salary (After Tax) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Average Monthly Net Salary (After Tax) (USD)]' />
            <map key='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' />
            <map key='[Chicken Fillets (1kg) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Chicken Fillets (1kg) (USD)]' />
            <map key='[City ID (mapped!City)]' value='[mapped!City_B1DA842372674938AE1D0951180381F5].[City ID]' />
            <map key='[City ID]' value='[weather!data_78E86BE0619549388DFACE3ACF90BCC6].[City ID]' />
            <map key='[Date]' value='[weather!data_78E86BE0619549388DFACE3ACF90BCC6].[Date]' />
            <map key='[Gasoline (1 liter) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Gasoline (1 liter) (USD)]' />
            <map key='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
            <map key='[Meal, Inexpensive Restaurant (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Meal, Inexpensive Restaurant (USD)]' />
            <map key='[Price per Square Meter to Buy Apartment in City Centre (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Price per Square Meter to Buy Apartment in City Centre (USD)]' />
            <map key='[Temperature (C*)]' value='[weather!data_78E86BE0619549388DFACE3ACF90BCC6].[Temperature (C*)]' />
            <map key='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' />
            <map key='[city (cost-of-living!v2)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[city]' />
            <map key='[city]' value='[mapped!City_B1DA842372674938AE1D0951180381F5].[city]' />
            <map key='[country (cost-of-living!v2)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[country]' />
            <map key='[country]' value='[mapped!City_B1DA842372674938AE1D0951180381F5].[country]' />
            <map key='[population]' value='[mapped!City_B1DA842372674938AE1D0951180381F5].[population]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>weather_data</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1348</approx-count>
              <contains-null>true</contains-null>
              <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City ID]</local-name>
              <parent-name>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</parent-name>
              <remote-alias>City ID</remote-alias>
              <ordinal>1</ordinal>
              <family>weather_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1426</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temperature (C*)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Temperature (C*)]</local-name>
              <parent-name>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</parent-name>
              <remote-alias>Temperature (C*)</remote-alias>
              <ordinal>2</ordinal>
              <family>weather_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18818</approx-count>
              <contains-null>true</contains-null>
              <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City ID (mapped!City)]</local-name>
              <parent-name>[mapped!City_B1DA842372674938AE1D0951180381F5]</parent-name>
              <remote-alias>City ID</remote-alias>
              <ordinal>3</ordinal>
              <family>mapped_City</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1000</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[mapped!City_B1DA842372674938AE1D0951180381F5]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>4</ordinal>
              <family>mapped_City</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>990</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[mapped!City_B1DA842372674938AE1D0951180381F5]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>5</ordinal>
              <family>mapped_City</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[mapped!City_B1DA842372674938AE1D0951180381F5]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>6</ordinal>
              <family>mapped_City</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>900</approx-count>
              <contains-null>true</contains-null>
              <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city (cost-of-living!v2)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>7</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4636</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country (cost-of-living!v2)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>8</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>188</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Meal, Inexpensive Restaurant (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Meal, Inexpensive Restaurant (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Meal, Inexpensive Restaurant (USD)</remote-alias>
              <ordinal>9</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>667</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>McMeal at McDonalds (or Equivalent Combo Meal) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>McMeal at McDonalds (or Equivalent Combo Meal) (USD)</remote-alias>
              <ordinal>10</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>616</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Chicken Fillets (1kg) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Chicken Fillets (1kg) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Chicken Fillets (1kg) (USD)</remote-alias>
              <ordinal>11</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>954</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gasoline (1 liter) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Gasoline (1 liter) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Gasoline (1 liter) (USD)</remote-alias>
              <ordinal>12</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)</remote-alias>
              <ordinal>13</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1031</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)</remote-alias>
              <ordinal>14</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1756</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price per Square Meter to Buy Apartment in City Centre (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Price per Square Meter to Buy Apartment in City Centre (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Price per Square Meter to Buy Apartment in City Centre (USD)</remote-alias>
              <ordinal>15</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1229</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Monthly Net Salary (After Tax) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Monthly Net Salary (After Tax) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Average Monthly Net Salary (After Tax) (USD)</remote-alias>
              <ordinal>16</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1705</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126171381760:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Meal, Inexpensive Restaurant (USD):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:McMeal at McDonalds (or Equivalent Combo Meal) (USD):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Chicken Fillets (1kg) (USD):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Poland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='city (cost-of-living!v2)' />
        <field-sort-custom-order field='country (cost-of-living!v2)' />
        <field-sort-custom-order field='Calculation_313563126192717826' />
        <field-sort-custom-order field='Meal, Inexpensive Restaurant (USD)' />
        <field-sort-custom-order field='Meal for 2 People, Mid-range Restaurant, Three-course (USD)' />
        <field-sort-custom-order field='McMeal at McDonalds (or Equivalent Combo Meal) (USD)' />
        <field-sort-custom-order field='Domestic Beer (0.5 liter draught, in restaurants) (USD)' />
        <field-sort-custom-order field='Imported Beer (0.33 liter bottle, in restaurants) (USD)' />
        <field-sort-custom-order field='Cappuccino (regular, in restaurants) (USD)' />
        <field-sort-custom-order field='Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)' />
        <field-sort-custom-order field='Water (0.33 liter bottle, in restaurants) (USD)' />
        <field-sort-custom-order field='Milk (regular), (1 liter) (USD)' />
        <field-sort-custom-order field='Loaf of Fresh White Bread (500g) (USD)' />
        <field-sort-custom-order field='Rice (white), (1kg) (USD)' />
        <field-sort-custom-order field='Eggs (regular) (12) (USD)' />
        <field-sort-custom-order field='Local Cheese (1kg) (USD)' />
        <field-sort-custom-order field='Chicken Fillets (1kg) (USD)' />
        <field-sort-custom-order field='Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)' />
        <field-sort-custom-order field='Apples (1kg) (USD)' />
        <field-sort-custom-order field='Banana (1kg) (USD)' />
        <field-sort-custom-order field='Oranges (1kg) (USD)' />
        <field-sort-custom-order field='Tomato (1kg) (USD)' />
        <field-sort-custom-order field='Potato (1kg) (USD)' />
        <field-sort-custom-order field='Onion (1kg) (USD)' />
        <field-sort-custom-order field='Lettuce (1 head) (USD)' />
        <field-sort-custom-order field='Water (1.5 liter bottle, at the market) (USD)' />
        <field-sort-custom-order field='Bottle of Wine (Mid-Range, at the market) (USD)' />
        <field-sort-custom-order field='Domestic Beer (0.5 liter bottle, at the market) (USD)' />
        <field-sort-custom-order field='Imported Beer (0.33 liter bottle, at the market) (USD)' />
        <field-sort-custom-order field='Cigarettes 20 Pack (Marlboro) (USD)' />
        <field-sort-custom-order field='One-way Ticket (Local Transport) (USD)' />
        <field-sort-custom-order field='Monthly Pass (Regular Price) (USD)' />
        <field-sort-custom-order field='Taxi Start (Normal Tariff) (USD)' />
        <field-sort-custom-order field='Taxi 1km (Normal Tariff) (USD)' />
        <field-sort-custom-order field='Taxi 1hour Waiting (Normal Tariff) (USD)' />
        <field-sort-custom-order field='Gasoline (1 liter) (USD)' />
        <field-sort-custom-order field='Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)' />
        <field-sort-custom-order field='Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)' />
        <field-sort-custom-order field='Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)' />
        <field-sort-custom-order field='1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)' />
        <field-sort-custom-order field='Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)' />
        <field-sort-custom-order field='Fitness Club, Monthly Fee for 1 Adult (USD)' />
        <field-sort-custom-order field='Tennis Court Rent (1 Hour on Weekend) (USD)' />
        <field-sort-custom-order field='Cinema, International Release, 1 Seat (USD)' />
        <field-sort-custom-order field='Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)' />
        <field-sort-custom-order field='International Primary School, Yearly for 1 Child (USD)' />
        <field-sort-custom-order field='1 Pair of Jeans (Levis 501 Or Similar) (USD)' />
        <field-sort-custom-order field='1 Summer Dress in a Chain Store (Zara, H&amp;M, …) (USD)' />
        <field-sort-custom-order field='1 Pair of Nike Running Shoes (Mid-Range) (USD)' />
        <field-sort-custom-order field='1 Pair of Men Leather Business Shoes (USD)' />
        <field-sort-custom-order field='Apartment (1 bedroom) in City Centre (USD)' />
        <field-sort-custom-order field='Apartment (1 bedroom) Outside of Centre (USD)' />
        <field-sort-custom-order field='Apartment (3 bedrooms) in City Centre (USD)' />
        <field-sort-custom-order field='Apartment (3 bedrooms) Outside of Centre (USD)' />
        <field-sort-custom-order field='Price per Square Meter to Buy Apartment in City Centre (USD)' />
        <field-sort-custom-order field='Price per Square Meter to Buy Apartment Outside of Centre (USD)' />
        <field-sort-custom-order field='Average Monthly Net Salary (After Tax) (USD)' />
        <field-sort-custom-order field='Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate' />
        <field-sort-custom-order field='data_quality' />
        <field-sort-custom-order field='Calculation_313563126171381760' />
        <field-sort-custom-order field='Calculation_388153994950119424' />
        <field-sort-custom-order field='Calculation_388153994955808770' />
        <field-sort-custom-order field='Calculation_388153994957811715' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='cost_of_living' id='cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4'>
            <properties context=''>
              <relation connection='excel-direct.16ixxtn0o6z9i31gcgx9v1bibrod' name='cost-of-living_v2' table='[&apos;cost-of-living_v2$&apos;]' type='table'>
                <columns gridOrigin='A1:BF4957:no:A1:BF4957:0' header='yes' outcome='6'>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='real' name='x1' ordinal='2' />
                  <column datatype='real' name='x2' ordinal='3' />
                  <column datatype='real' name='x3' ordinal='4' />
                  <column datatype='real' name='x4' ordinal='5' />
                  <column datatype='real' name='x5' ordinal='6' />
                  <column datatype='real' name='x6' ordinal='7' />
                  <column datatype='real' name='x7' ordinal='8' />
                  <column datatype='real' name='x8' ordinal='9' />
                  <column datatype='real' name='x9' ordinal='10' />
                  <column datatype='real' name='x10' ordinal='11' />
                  <column datatype='real' name='x11' ordinal='12' />
                  <column datatype='real' name='x12' ordinal='13' />
                  <column datatype='real' name='x13' ordinal='14' />
                  <column datatype='real' name='x14' ordinal='15' />
                  <column datatype='real' name='x15' ordinal='16' />
                  <column datatype='real' name='x16' ordinal='17' />
                  <column datatype='real' name='x17' ordinal='18' />
                  <column datatype='real' name='x18' ordinal='19' />
                  <column datatype='real' name='x19' ordinal='20' />
                  <column datatype='real' name='x20' ordinal='21' />
                  <column datatype='real' name='x21' ordinal='22' />
                  <column datatype='real' name='x22' ordinal='23' />
                  <column datatype='real' name='x23' ordinal='24' />
                  <column datatype='real' name='x24' ordinal='25' />
                  <column datatype='real' name='x25' ordinal='26' />
                  <column datatype='real' name='x26' ordinal='27' />
                  <column datatype='real' name='x27' ordinal='28' />
                  <column datatype='real' name='x28' ordinal='29' />
                  <column datatype='real' name='x29' ordinal='30' />
                  <column datatype='real' name='x30' ordinal='31' />
                  <column datatype='real' name='x31' ordinal='32' />
                  <column datatype='real' name='x32' ordinal='33' />
                  <column datatype='real' name='x33' ordinal='34' />
                  <column datatype='real' name='x34' ordinal='35' />
                  <column datatype='real' name='x35' ordinal='36' />
                  <column datatype='real' name='x36' ordinal='37' />
                  <column datatype='real' name='x37' ordinal='38' />
                  <column datatype='real' name='x38' ordinal='39' />
                  <column datatype='real' name='x39' ordinal='40' />
                  <column datatype='real' name='x40' ordinal='41' />
                  <column datatype='real' name='x41' ordinal='42' />
                  <column datatype='real' name='x42' ordinal='43' />
                  <column datatype='real' name='x43' ordinal='44' />
                  <column datatype='real' name='x44' ordinal='45' />
                  <column datatype='real' name='x45' ordinal='46' />
                  <column datatype='real' name='x46' ordinal='47' />
                  <column datatype='real' name='x47' ordinal='48' />
                  <column datatype='real' name='x48' ordinal='49' />
                  <column datatype='real' name='x49' ordinal='50' />
                  <column datatype='real' name='x50' ordinal='51' />
                  <column datatype='real' name='x51' ordinal='52' />
                  <column datatype='real' name='x52' ordinal='53' />
                  <column datatype='real' name='x53' ordinal='54' />
                  <column datatype='real' name='x54' ordinal='55' />
                  <column datatype='real' name='x55' ordinal='56' />
                  <column datatype='integer' name='data_quality' ordinal='57' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4' table='[Extract].[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]' type='table' />
            </properties>
          </object>
          <object caption='mapped_City' id='mapped!City_B1DA842372674938AE1D0951180381F5'>
            <properties context=''>
              <relation connection='excel-direct.0gpe1hi1kl4hok1c7zj7q0kdo56n' name='mapped_City' table='[mapped_City$]' type='table'>
                <columns gridOrigin='A1:K1001:no:A1:K1001:0' header='yes' outcome='2'>
                  <column datatype='string' name='City ID' ordinal='0' />
                  <column datatype='string' name='city' ordinal='1' />
                  <column datatype='string' name='city_ascii' ordinal='2' />
                  <column datatype='real' name='lat' ordinal='3' />
                  <column datatype='real' name='lng' ordinal='4' />
                  <column datatype='string' name='country' ordinal='5' />
                  <column datatype='string' name='iso2' ordinal='6' />
                  <column datatype='string' name='iso3' ordinal='7' />
                  <column datatype='string' name='admin_name' ordinal='8' />
                  <column datatype='string' name='capital' ordinal='9' />
                  <column datatype='integer' name='population' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='mapped!City_B1DA842372674938AE1D0951180381F5' table='[Extract].[mapped!City_B1DA842372674938AE1D0951180381F5]' type='table' />
            </properties>
          </object>
          <object caption='weather_data' id='weather!data_78E86BE0619549388DFACE3ACF90BCC6'>
            <properties context=''>
              <relation connection='excel-direct.1ov0foy0fb2fo713vw3ln0ror18p' name='weather_data' table='[weather_data$]' type='table'>
                <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='2'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='City ID' ordinal='1' />
                  <column datatype='real' name='Temperature (C*)' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='weather!data_78E86BE0619549388DFACE3ACF90BCC6' table='[Extract].[weather!data_78E86BE0619549388DFACE3ACF90BCC6]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[city]' />
              <expression op='[city (cost-of-living!v2)]' />
            </expression>
            <first-end-point object-id='mapped!City_B1DA842372674938AE1D0951180381F5' />
            <second-end-point object-id='cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[City ID]' />
              <expression op='[City ID (mapped!City)]' />
            </expression>
            <first-end-point object-id='weather!data_78E86BE0619549388DFACE3ACF90BCC6' />
            <second-end-point object-id='mapped!City_B1DA842372674938AE1D0951180381F5' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Map to KPI Board' name='[Action1_9D4CF5713080478AA4FAED77D9E976FA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <link caption='Map to KPI Board' delimiter=',' escape='\' expression='tsl:Dashboard%202?%5Bfederated.0ozwx0m1oqiyhn15e4as60gmjqda%5D.%5Bcity%20%28cost-of-living%21v2%29%5D~s0=&lt;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[city]~na&gt;&amp;%5Bfederated.0ozwx0m1oqiyhn15e4as60gmjqda%5D.%5Bcountry%20%28cost-of-living%21v2%29%5D~s0=&lt;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[country]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='on-empty' value='none' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <datasources>
      <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
    </datasources>
    <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
      <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Country Income Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
            <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='Avg' name='[avg:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='None' name='[none:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]' field-type='quantitative' max='73912832.43549262' min='22997053.199394934' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]' field-type='quantitative' max='15984692.880349193' min='-11745995.418729182' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-boundaries offset' value='true' />
            <format attr='enabled' id='admin-2-boundaries-dispute' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' />
              <text column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' />
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' />
              <geometry column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{83C9CC5B-2976-40A0-A17F-82F398C69FEE}' />
    </worksheet>
    <worksheet name='KPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b'>&lt;Sheet Name&gt; for &lt;</run>
            <run bold='true' fontcolor='#1b1b1b'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[city (cost-of-living!v2)]</run>
            <run bold='true' fontcolor='#1b1b1b'>&gt;, &lt;</run>
            <run bold='true' fontcolor='#1b1b1b'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</run>
            <run bold='true' fontcolor='#1b1b1b'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
            <column caption='Time to Earn 60m² Apartment Net' datatype='real' name='[Calculation_313563126171381760]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='60*[Calculation_388153994950119424]/12' />
            </column>
            <column caption='City&amp;Country' datatype='string' name='[Calculation_313563126192717826]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[city (cost-of-living!v2)] + &quot;, &quot; + [country (cost-of-living!v2)]' />
            </column>
            <column caption='City Center m² / Monthly Income)/' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_388153994950119424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Average Monthly Net Salary (After Tax) (USD)] &gt; 0 THEN&#13;&#10;    [Price per Square Meter to Buy Apartment in City Centre (USD)] / [Average Monthly Net Salary (After Tax) (USD)]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
            </column>
            <column caption='McMeals for Monthly Net Income' datatype='real' name='[Calculation_388153994957811715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Average Monthly Net Salary (After Tax) (USD)]/[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
            </column>
            <column datatype='real' name='[Gasoline (1 liter) (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' role='measure' type='quantitative' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_313563126192717826]' derivation='None' name='[none:Calculation_313563126192717826:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='None' name='[none:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='None' name='[none:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='Sum' name='[sum:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_313563126171381760]' derivation='Sum' name='[sum:Calculation_313563126171381760:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388153994957811715]' derivation='Sum' name='[sum:Calculation_388153994957811715:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gasoline (1 liter) (USD)]' derivation='Sum' name='[sum:Gasoline (1 liter) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='Sum' name='[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' derivation='Sum' name='[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126171381760:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126171381760:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9D4CF5713080478AA4FAED77D9E976FA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[city (cost-of-living!v2)]' member='&quot;Thiruvananthapuram&quot;' />
              <groupfilter function='member' level='[country (cost-of-living!v2)]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:city (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' value='179' />
            <format attr='width' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='147' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='left' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]' value='C1033%' />
            <format attr='font-size' value='15' />
            <format attr='font-family' value='Tableau Medium' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126171381760:qk]' value='n0.00&quot; years&quot;;-0.00&quot; years&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' value='328' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='center' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='false' />
            <format attr='display' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' value='false' />
            <format attr='vertical-align' scope='cols' value='center' />
            <format attr='vertical-align' scope='rows' value='center' />
            <format attr='text-align' value='left' />
            <format attr='font-size' scope='rows' value='14' />
            <format attr='font-weight' scope='rows' value='normal' />
            <format attr='font-family' scope='rows' value='Tableau Light' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]' />
              <text column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Monthly McBudget:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'>~</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]> Meals]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</cols>
      </table>
      <simple-id uuid='{8A4983C5-382A-4C2D-8FD8-94DF0DA77F2B}' />
    </worksheet>
    <worksheet name='Scatter Plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
            <column caption='City Center m² / Monthly Income)/' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_388153994950119424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Average Monthly Net Salary (After Tax) (USD)] &gt; 0 THEN&#13;&#10;    [Price per Square Meter to Buy Apartment in City Centre (USD)] / [Average Monthly Net Salary (After Tax) (USD)]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='Attribute' name='[attr:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='Attribute' name='[attr:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='None' name='[none:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='None' name='[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='None' name='[none:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='None' name='[none:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_388153994950119424]' derivation='Sum' name='[sum:Calculation_388153994950119424:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:city (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:country (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Average Monthly Net Salary (After Tax) (USD):qk]' value='C1033%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='5.5683418079999996' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#333333' />
            <format attr='band-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#000000' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#5555554b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' />
              <size column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:city (cost-of-living!v2):nk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country (cost-of-living!v2):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Average Monthly Net Salary:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Average Monthly Net Salary (After Tax) (USD):qk]> ]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Price per Square Meter to Buy Apartment in City Centre:	</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]> ]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:city (cost-of-living!v2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country (cost-of-living!v2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>City Center m² / Monthly Income:	</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='1.4172928333282471' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Average Monthly Net Salary (After Tax) (USD):qk]</cols>
      </table>
      <simple-id uuid='{70E89193-1CFA-49C4-808B-A8C55147A1CA}' />
    </worksheet>
    <worksheet name='Square Meter Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column caption='Avg. Square Meter Globally' datatype='real' default-format='C1033%' name='[Calculation_313563126179033089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED : AVG([Price per Square Meter to Buy Apartment in City Centre (USD)])}' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='Attribute' name='[attr:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='None' name='[none:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_313563126179033089]' derivation='Sum' name='[sum:Calculation_313563126179033089:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='Sum' name='[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9D4CF5713080478AA4FAED77D9E976FA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[city (cost-of-living!v2)]' member='&quot;Thiruvananthapuram&quot;' />
              <groupfilter function='member' level='[country (cost-of-living!v2)]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:city (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' scope='rows' value='m² Price ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' value='C1045%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='#1b1b1b' />
            <format attr='font-weight' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='bold' />
            <format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' value='#333333' />
            <format attr='text-orientation' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' value='C1033%' />
            <format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country (cost-of-living!v2):nk]' />
            </encodings>
            <reference-line axis-column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline0' label-type='automatic' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country (cost-of-living!v2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>City Centre m² Price :&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Global m² Average:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]</rows>
        <cols>([federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk] / [federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{EF214CCB-2255-4724-A79E-7D45DB3FB394}' />
    </worksheet>
    <worksheet name='Static Weather Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; for &lt;</run>
            <run bold='true'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' role='measure' type='quantitative' />
            <column caption='Chosen Date' datatype='date' name='[Calculation_1667176289102503936]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='min([Date])' />
            </column>
            <column caption='City&amp;Country' datatype='string' name='[Calculation_313563126192717826]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[city (cost-of-living!v2)] + &quot;, &quot; + [country (cost-of-living!v2)]' />
            </column>
            <column caption='City Center m² / Monthly Income)/' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_388153994950119424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Average Monthly Net Salary (After Tax) (USD)] &gt; 0 THEN&#13;&#10;    [Price per Square Meter to Buy Apartment in City Centre (USD)] / [Average Monthly Net Salary (After Tax) (USD)]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
            </column>
            <column caption='McMeals for Monthly Net Income' datatype='real' name='[Calculation_388153994957811715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Average Monthly Net Salary (After Tax) (USD)]/[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
            </column>
            <column datatype='real' name='[Chicken Fillets (1kg) (USD)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Meal, Inexpensive Restaurant (USD)]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Temperature (C*)]' role='measure' type='quantitative' />
            <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='Avg' name='[avg:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' derivation='Avg' name='[avg:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Chicken Fillets (1kg) (USD)]' derivation='Avg' name='[avg:Chicken Fillets (1kg) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Meal, Inexpensive Restaurant (USD)]' derivation='Avg' name='[avg:Meal, Inexpensive Restaurant (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='Avg' name='[avg:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temperature (C*)]' derivation='Avg' name='[avg:Temperature (C*):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_313563126192717826]' derivation='None' name='[none:Calculation_313563126192717826:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_388153994950119424]' derivation='Sum' name='[sum:Calculation_388153994950119424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388153994957811715]' derivation='Sum' name='[sum:Calculation_388153994957811715:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1667176289102503936]' derivation='User' name='[usr:Calculation_1667176289102503936:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-01#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]' field-type='quantitative' max='12099981.098689493' min='1047262.4280733224' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]' field-type='quantitative' max='5972462.6864866763' min='-3512402.8655824121' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-street-low' value='false' />
            <format attr='enabled' id='tunnel-street_limited-low' value='false' />
            <format attr='enabled' id='tunnel-track-case' value='false' />
            <format attr='enabled' id='tunnel-service-link-case' value='false' />
            <format attr='enabled' id='tunnel-street_limited-case' value='false' />
            <format attr='enabled' id='tunnel-street-case' value='false' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='tunnel-primary-case' value='false' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='false' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='false' />
            <format attr='enabled' id='tunnel-trunk-case' value='false' />
            <format attr='enabled' id='tunnel-motorway-case' value='false' />
            <format attr='enabled' id='tunnel-construction' value='false' />
            <format attr='enabled' id='tunnel-path' value='false' />
            <format attr='enabled' id='tunnel-cycleway-piste' value='false' />
            <format attr='enabled' id='tunnel-steps' value='false' />
            <format attr='enabled' id='tunnel-trunk_link' value='false' />
            <format attr='enabled' id='tunnel-motorway_link' value='false' />
            <format attr='enabled' id='tunnel-pedestrian' value='false' />
            <format attr='enabled' id='tunnel-track' value='false' />
            <format attr='enabled' id='tunnel-service-link' value='false' />
            <format attr='enabled' id='tunnel-street_limited' value='false' />
            <format attr='enabled' id='tunnel-street' value='false' />
            <format attr='enabled' id='tunnel-secondary-tertiary' value='false' />
            <format attr='enabled' id='tunnel-primary' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='tunnel-trunk' value='false' />
            <format attr='enabled' id='tunnel-motorway' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-white' value='false' />
            <format attr='enabled' id='ferry' value='false' />
            <format attr='enabled' id='ferry-auto' value='false' />
            <format attr='enabled' id='road-path-bg' value='false' />
            <format attr='enabled' id='road-piste-bg' value='false' />
            <format attr='enabled' id='road-sidewalk-corridor-bg' value='false' />
            <format attr='enabled' id='road-steps-bg' value='false' />
            <format attr='enabled' id='road-pedestrian-case' value='false' />
            <format attr='enabled' id='road-street-low' value='false' />
            <format attr='enabled' id='road-street_limited-low' value='false' />
            <format attr='enabled' id='road-track-case' value='false' />
            <format attr='enabled' id='road-service-link-case' value='false' />
            <format attr='enabled' id='road-street_limited-case' value='false' />
            <format attr='enabled' id='road-street-case' value='false' />
            <format attr='enabled' id='road-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='road-primary-case' value='false' />
            <format attr='enabled' id='road-motorway_link-case' value='false' />
            <format attr='enabled' id='road-trunk_link-case' value='false' />
            <format attr='enabled' id='road-trunk-case' value='false' />
            <format attr='enabled' id='road-motorway-case' value='false' />
            <format attr='enabled' id='road-construction' value='false' />
            <format attr='enabled' id='road-sidewalk-corridor' value='false' />
            <format attr='enabled' id='road-path-smooth' value='false' />
            <format attr='enabled' id='road-path-rough' value='false' />
            <format attr='enabled' id='road-cycleway-piste' value='false' />
            <format attr='enabled' id='road-steps' value='false' />
            <format attr='enabled' id='road-trunk_link' value='false' />
            <format attr='enabled' id='road-motorway_link' value='false' />
            <format attr='enabled' id='road-pedestrian' value='false' />
            <format attr='enabled' id='road-pedestrian-polygon-fill' value='false' />
            <format attr='enabled' id='road-pedestrian-polygon-pattern' value='false' />
            <format attr='enabled' id='road-polygon' value='false' />
            <format attr='enabled' id='road-track' value='false' />
            <format attr='enabled' id='road-service-link' value='false' />
            <format attr='enabled' id='road-street_limited' value='false' />
            <format attr='enabled' id='road-street' value='false' />
            <format attr='enabled' id='road-secondary-tertiary' value='false' />
            <format attr='enabled' id='road-primary' value='false' />
            <format attr='enabled' id='road-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='road-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='road-trunk' value='false' />
            <format attr='enabled' id='road-motorway' value='false' />
            <format attr='enabled' id='road-rail' value='false' />
            <format attr='enabled' id='road-rail-tracks' value='false' />
            <format attr='enabled' id='level-crossing' value='false' />
            <format attr='enabled' id='road-oneway-arrows-white' value='false' />
            <format attr='enabled' id='bridge-path-bg' value='false' />
            <format attr='enabled' id='bridge-piste-bg' value='false' />
            <format attr='enabled' id='bridge-steps-bg' value='false' />
            <format attr='enabled' id='bridge-pedestrian-case' value='false' />
            <format attr='enabled' id='bridge-street-low' value='false' />
            <format attr='enabled' id='bridge-street_limited-low' value='false' />
            <format attr='enabled' id='bridge-track-case' value='false' />
            <format attr='enabled' id='bridge-service-link-case' value='false' />
            <format attr='enabled' id='bridge-street_limited-case' value='false' />
            <format attr='enabled' id='bridge-street-case' value='false' />
            <format attr='enabled' id='bridge-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='bridge-primary-case' value='false' />
            <format attr='enabled' id='bridge-trunk_link-case' value='false' />
            <format attr='enabled' id='bridge-motorway_link-case' value='false' />
            <format attr='enabled' id='bridge-trunk-case' value='false' />
            <format attr='enabled' id='bridge-motorway-case' value='false' />
            <format attr='enabled' id='bridge-construction' value='false' />
            <format attr='enabled' id='bridge-path' value='false' />
            <format attr='enabled' id='bridge-cycleway-piste' value='false' />
            <format attr='enabled' id='bridge-steps' value='false' />
            <format attr='enabled' id='bridge-trunk_link' value='false' />
            <format attr='enabled' id='bridge-motorway_link' value='false' />
            <format attr='enabled' id='bridge-pedestrian' value='false' />
            <format attr='enabled' id='bridge-track' value='false' />
            <format attr='enabled' id='bridge-service-link' value='false' />
            <format attr='enabled' id='bridge-street_limited' value='false' />
            <format attr='enabled' id='bridge-street' value='false' />
            <format attr='enabled' id='bridge-secondary-tertiary' value='false' />
            <format attr='enabled' id='bridge-primary' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='bridge-trunk' value='false' />
            <format attr='enabled' id='bridge-motorway' value='false' />
            <format attr='enabled' id='bridge-rail' value='false' />
            <format attr='enabled' id='bridge-rail-tracks' value='false' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='false' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='false' />
            <format attr='enabled' id='bridge-trunk-2-case' value='false' />
            <format attr='enabled' id='bridge-motorway-2-case' value='false' />
            <format attr='enabled' id='bridge-trunk_link-2' value='false' />
            <format attr='enabled' id='bridge-motorway_link-2' value='false' />
            <format attr='enabled' id='bridge-trunk-2' value='false' />
            <format attr='enabled' id='bridge-motorway-2' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-white' value='false' />
            <format attr='enabled' id='road-label-small' value='false' />
            <format attr='enabled' id='road-label-medium' value='false' />
            <format attr='enabled' id='road-label-large' value='false' />
            <format attr='enabled' id='road-shields-black' value='false' />
            <format attr='enabled' id='road-shields-white' value='false' />
            <format attr='enabled' id='motorway-junction' value='false' />
            <format attr='enabled' id='place-residential' value='false' />
            <format attr='enabled' id='place-neighbourhood' value='false' />
            <format attr='enabled' id='place-suburb' value='false' />
            <format attr='enabled' id='rail-label' value='false' />
            <format attr='enabled' id='building-line' value='false' />
            <format attr='enabled' id='building' value='false' />
            <format attr='enabled' id='housenum-label' value='false' />
            <format attr='enabled' id='poi-relevant-scalerank4-l15' value='false' />
            <format attr='enabled' id='poi-relevant-scalerank4-l1' value='false' />
            <format attr='enabled' id='poi-parks_scalerank4' value='false' />
            <format attr='enabled' id='poi-scalerank3' value='false' />
            <format attr='enabled' id='poi-parks-scalerank3' value='false' />
            <format attr='enabled' id='poi-outdoor-features' value='false' />
            <format attr='enabled' id='poi-outdoor-features-2' value='false' />
            <format attr='enabled' id='mountain-peak-label' value='false' />
            <format attr='enabled' id='mountain-peak-label-with-elevation' value='false' />
            <format attr='enabled' id='poi-scalerank2' value='false' />
            <format attr='enabled' id='poi-parks-scalerank2' value='false' />
            <format attr='enabled' id='poi-parks-scalerank1' value='false' />
            <format attr='enabled' id='poi-scalerank1' value='false' />
            <format attr='enabled' id='airport-label' value='false' />
            <format attr='enabled' id='place-hamlet' value='false' />
            <format attr='enabled' id='place-village' value='false' />
            <format attr='enabled' id='place-town' value='false' />
            <format attr='enabled' id='place-city-sm' value='false' />
            <format attr='enabled' id='place-islet-archipelago-aboriginal' value='false' />
            <format attr='enabled' id='place-islet-archipelago-aboriginal-2' value='false' />
            <format attr='enabled' id='place-city-md-s' value='false' />
            <format attr='enabled' id='place-city-md-n' value='false' />
            <format attr='enabled' id='place-city-lg-s' value='false' />
            <format attr='enabled' id='place-city-lg-n' value='false' />
            <format attr='enabled' id='place-island' value='false' />
            <format attr='enabled' id='place-island-2' value='false' />
            <format attr='enabled' id='water-label-sm' value='false' />
            <format attr='enabled' id='water-label' value='false' />
            <format attr='enabled' id='waterway-label' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='false' />
            <format attr='enabled' id='marine-label-sm-pt' value='false' />
            <format attr='enabled' id='marine-label-md-ln' value='false' />
            <format attr='enabled' id='marine-label-md-pt' value='false' />
            <format attr='enabled' id='marine-label-lg-ln' value='false' />
            <format attr='enabled' id='marine-label-lg-pt' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.10999999940395355' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' />
              <size column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]' />
              <text column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Chicken Fillets (1kg) (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Meal, Inexpensive Restaurant (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Temperature (</run>
                <run fontcolor='#757575' fontname='Benton Sans Book'>°</run>
                <run fontcolor='#757575'>C):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]> ]]></run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Benton Sans Book'>°</run>
                <run bold='true' fontcolor='#1b1b1b'>C</run>
                <run fontcolor='#757575'>Æ&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Date:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Population:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]>]]></run>
                <run fontcolor='#757575'>Æ&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Net Salary:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[$ <[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]> ]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666'>Price per m² (City Centre):</run>
                <run fontcolor='#757575'>Æ&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Price per Square Meter to Buy Apartment in City Centre (USD):qk]> ]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Basic Utilities (85 </run>
                <run fontcolor='#666666'> m²)</run>
                <run fontcolor='#757575'> :&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'>$ </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]> ]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Meal (Inexpensive Restaurant):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'>$ </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Meal, Inexpensive Restaurant (USD):qk]> ]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666'>Months to Afford 1 m²  (City Centre):	</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]> Months]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Monthly McBudget:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[~<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]> Meals ]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{69116C8B-1541-44CA-91A7-CE46176F2DD7}' />
    </worksheet>
    <worksheet name='Temperature Line Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; for &lt;</run>
            <run bold='true'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[city (cost-of-living!v2)]</run>
            <run bold='true'>&gt;, &lt;</run>
            <run bold='true'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Temperature (C*)]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='None' name='[none:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='None' name='[none:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Temperature (C*)]' derivation='Sum' name='[sum:Temperature (C*):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9D4CF5713080478AA4FAED77D9E976FA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[city (cost-of-living!v2)]' member='&quot;Thiruvananthapuram&quot;' />
              <groupfilter function='member' level='[country (cost-of-living!v2)]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:city (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='City'>
              <formatted-text>
                <run>City</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enable-tooltips='false' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Temperature (C*):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{9918932D-5A8D-4C49-BAD4-F45ECAA9AFB9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
      </datasources>
      <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='86200' x='800' y='1000'>
              <zone h='98000' id='3' name='Static Weather Map' w='86200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='122' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12200' x='87000' y='1000'>
              <zone h='9375' id='8' mode='slider' name='Static Weather Map' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]' type-v2='filter' w='12200' x='87000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Static Weather Map' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' type-v2='color' w='12200' x='87000' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9375' id='8' mode='slider' name='Static Weather Map' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]' type-v2='filter' w='12200' x='87000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Static Weather Map' w='86200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Static Weather Map' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' type-v2='color' w='12200' x='87000' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EB110BBF-7179-4970-A771-945B48386CA1}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='85100' x='800' y='1000'>
              <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='85100' x='800' y='1000'>
                <zone h='98000' id='5' type-v2='layout-basic' w='85100' x='800' y='1000'>
                  <zone h='39376' id='23' param='vert' type-v2='layout-flow' w='85100' x='800' y='59624'>
                    <zone h='39376' id='24' param='vert' type-v2='layout-flow' w='85100' x='800' y='59624'>
                      <zone h='39376' id='13' name='Temperature Line Chart' w='85100' x='800' y='59624'>
                        <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='58624' id='31' param='vert' type-v2='layout-flow' w='57610' x='800' y='1000'>
                    <zone h='27375' id='3' name='KPI' w='57610' x='800' y='1000'>
                      <layout-cache fixed-size-h='211' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='31249' id='25' is-scaled='1' param='C:/Users/MATEUSZ/Desktop/ezgif-164029b99a342b.png' type-v2='bitmap' w='57610' x='800' y='28375'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='58624' id='32' param='horz' type-v2='layout-flow' w='22544' x='58410' y='1000'>
                    <zone h='58624' id='28' name='Square Meter Comparison' w='22544' x='58410' y='1000'>
                      <layout-cache cell-count-w='2' minheight='290' non-cell-size-w='96' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='58624' id='33' type-v2='empty' w='4946' x='80954' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='133' h='98000' id='14' is-fixed='true' param='vert' type-v2='layout-flow' w='13300' x='85900' y='1000'>
              <zone h='8125' id='17' name='Temperature Line Chart' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' type-v2='color' w='13300' x='85900' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='30' name='Square Meter Comparison' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' type-v2='color' w='13300' x='85900' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='10' type-v2='dashboard-object' w='9000' x='90300' y='96125'>
          <button action='tabdoc:goto-sheet window-id=&quot;{D3A0D495-7357-40A9-BC39-B75F509D06EC}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back</caption>
              <tooltip-text>Go back to the Weather Map</tooltip-text>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#ffffff' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='38' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='211' h='27375' id='3' is-fixed='true' name='KPI' w='57610' x='800' y='1000'>
                  <layout-cache fixed-size-h='211' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58624' id='28' is-fixed='true' name='Square Meter Comparison' w='22544' x='58410' y='1000'>
                  <layout-cache cell-count-w='2' minheight='290' non-cell-size-w='96' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='30' name='Square Meter Comparison' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' type-v2='color' w='13300' x='85900' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='31249' id='25' is-fixed='true' is-scaled='1' param='C:/Users/MATEUSZ/Desktop/ezgif-164029b99a342b.png' type-v2='bitmap' w='57610' x='800' y='28375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39376' id='13' is-fixed='true' name='Temperature Line Chart' w='85100' x='800' y='59624'>
                  <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='17' name='Temperature Line Chart' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' type-v2='color' w='13300' x='85900' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='10' type-v2='dashboard-object' w='9000' x='90300' y='96125'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D3A0D495-7357-40A9-BC39-B75F509D06EC}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back</caption>
                      <tooltip-text>Go back to the Weather Map</tooltip-text>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6B4BC8D1-2637-4031-9670-2A8AFCBDF71E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Static Weather Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='slider' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:qk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{7A368D73-9016-4EFF-8E1A-1E6701FD7827}' />
    </window>
    <window class='worksheet' name='KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F65CE28-34A7-439D-96D6-15CA869E87BE}' />
    </window>
    <window class='worksheet' name='Temperature Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3074F377-BFC3-4867-83B9-AFFF13025E74}' />
    </window>
    <window class='worksheet' name='Square Meter Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F378A2B4-D2D7-4A66-81B2-A8886FD3E8E3}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Static Weather Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Chicken Fillets (1kg) (USD):qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Meal, Inexpensive Restaurant (USD):qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Price per Square Meter to Buy Apartment in City Centre (USD):qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]</field>
                    <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>698.10000000000002</value>
                  <value>28.149999999999999</value>
                  <value>2.5499999999999998</value>
                  <value>1.6000000000000001</value>
                  <value>1147.3699999999999</value>
                  <value>27.359999999999999</value>
                  <value>&quot;Thiruvananthapuram, India&quot;</value>
                  <value>&quot;Thiruvananthapuram&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>1.643561094399083</value>
                  <value>162.34883720930233</value>
                  <value>954000</value>
                  <value>#2020-02-01#</value>
                  <value>8.5</value>
                  <value>76.8997</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{D3A0D495-7357-40A9-BC39-B75F509D06EC}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='KPI' />
        <viewpoint name='Square Meter Comparison'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Temperature Line Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A8E7BFCB-D877-4685-8C74-AB8355BDC618}' />
    </window>
    <window class='worksheet' name='Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93879B93-6660-4619-8CE0-60F50E484EAF}' />
    </window>
    <window class='worksheet' name='Country Income Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79C24B06-EB42-4268-85E5-AD0D8B687972}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country Income Map' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      L8UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      mv8PjU+UnaYeQ1MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='KPI' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATy0lEQVR4nO3da2ybd73A8e/jS3xPHDtJc7HT9JKk3Y7adT1DqAVBGUIgikQZN0FbVVym
      AYO9AN4gqlaahrYhBi+GtKlok9i0TRsXARpbxdoDW7ul69amTdvcL7ZjO4nvceK7n+e82KGH
      0jOdXWt1/9/nlf3Idv9/O18/tuv/Y80wDAMhFGVq9ACEaCQJQChNAhBKkwCE0iyNHsAHkWEY
      PPzww0xNTfHhD3+Y8+fPk8vl+NKXvsTIyAjT09N85CMf4fOf/zx33303hUKBTZs2YRgGo6Oj
      DA4OMj8/T7FYZPPmzezfv59HH32U8+fP86EPfYhYLEY6naa7u5u2tjbOnTtHMBjkO9/5TqOn
      ft2RPcD7QNM0br75ZlZWVuju7iabzbJr1y5eeOGFy9t7e3sBsNlsZLNZmpub2b9/P1u3bsXv
      92Oz2chkMjQ3NwMwNzfHAw88wNjYGE6nk3Q6jdvtZvv27Vfcnnh7JID3ga7rBINBfvCDH3Di
      xAm+973vkc1m6e7upre3l+9///scO3YMXddJJBLcc889DA8P89BDD9Hf38/nPvc5ksnk5e0A
      tVqNeDyOpmnMzs5y7733Xo7hJz/5CS+++GKDZ3190uT/Ad57uq7z+OOPE4vF2L9/PydPniSR
      SHDgwAGeeeYZ4vE4+/fvp7u7m7Nnz/Lcc8+xd+9ejh49SjQa5eabbyYQCHD06FH27t1LMBgk
      FArx1FNPsW/fPnK5HH/84x/58pe/zMWLFxkZGeGLX/wimzZtavTUrzsSgFCavAQSSpMAhNIk
      AKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAo7YoADENnZnKcSGzxLV05lUpd
      cb5QKACQz+ffo+EJ8f76txVhVerY8ZtWCS1mKaZjuFr82E01MssrtPjWYNbq+H0+csvLpNIp
      HE0mwtFF2tZ0cuHMGdZvuhGX3YJeKzE+MUOzrx2LXiSbL9Li76CzrbUxMxXi/3DVS6CF+RDR
      5CrlbILe/s0UV3Jk8qsMDAyQzyZJpdNgGORyOeCN775rGkTCMbqDQXp71pBOpYiE59mwaTOr
      yxlyKwUGBvvJ/9seQ4hGu2pNcGdgLf39a1lNLzA+OgqGgcNSZ3x8HM3iQKvmmZicAIsdDUgs
      JUDTANDqZcLRN14+tbgdjF0axcCE06ahXdNpCfHWvKUFMROTEwz0D1yL8QhxTcmKMKE0+RhU
      KE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITS
      JAChNAlAKE0CEEqTAITSJAChNAlAKE0CUIRhGDz11FP88Ic/pFgsUi6XefDBBymVSgDMzMxw
      +PBhnnjiCYaHh7n77rs5deoUxWKRJ5988vJhLw3DYGRkhH/84x8A/PWvf+WRRx6hXq83bG7v
      hgSgiFwux6uvvsqnP/1pTCYTf/jDH7h06dLlAE6cOMHAwAC7d++mp6eH7373uzzzzDOEQiGG
      h4evCCAUCnHq1CkWFxcZGRnB7/fz0ksvNXJ675gEoIiWlhY+85nP8Nhjj/HKK68wNDSEyWRi
      fn4egF27dtHe3s7BgwfRNI1f/OIXrF+/nsHBQQKBwOXbMZlMfOxjH8NkMrG8vEx3dzfr1q0j
      mUw2amrvylWHRhQfTLlcjqNHj1KtVtE0jT179vC73/0OXdc5evQouq5z8uRJOjs7OX78OFar
      lYWFBY4fP85zzz1HPp/n4x//OIFAgEcffZSTJ0+yY8cOTp8+zcmTJzl48GCjp/iOyJHhFLKy
      skI8Hqe/v//ytlgsRjweZ/v27Q0cWeNIAEJp8h5AKE0CEEqTAITSJAChNAlAKE0CEEqTAITS
      JAChNAlAKE0CEEqTAITSJAChtCsCMAyDybGLjI9NUCwWKJRrzEfmr7qSodcYvXCB8anZN7lZ
      g/lI9E3/0Xopy6unzzEyMkLlfxYS6dUSK8XKO56IEO/EFesB6vk4WnOQwe5myqk5ohUvcxPj
      WOw2sqkMbW4rZn+Q+sIsHRs347ebiYamyBWq2F3NpKJzuFw27N4Ac5MTNDmdjI+cJbhhE7lE
      DAMLm2+6CbNepa2rF3s5zszYBbJVGOjxki05mUuHsDX7oZynWjdoXROkq62lUfeP+IC7Yg+g
      WW3UKsXL5802J8FgkM72dmwWE5kKtDosWO1WSsUyANnsMmaTCQ0Dr7+dwf4+DK2JYCBIh6+F
      Nd1r6e32sbJSwmYzUanogEFkbgZzSxd+ZxObbvgPPE4bhlHH7vHSv66XfH4Zs8WCrteu6R0i
      1HJFAGa7D4+2ytjYBLrNS4vDjNtpYyGRIdjdTLluB6C5cy2VVISxqVk2bNyAATgcTnx+P5rF
      SWuzA6fDzFJ6Gb+/FZPJxrp1AUwWOzarCZPVxZYtN7CmrRWn14/dDCarE5/Xg7vJxORsmA3r
      NwAaToejAXeLUMVbWxBjGITnZuleux6LvG0WHyCyIkwoTZ7PhdIkAKE0CUAoTQIQSpMAhNIk
      AKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQ
      SpMAFFKpVIhG3/yIfSqSX4pXRKFQ4Mc//jGVSoV77rmHhx56iHg8zh133MHWrVs5ffo0Tzzx
      BNu3b2dwcPDyacMwuHjxIoFAgDvvvBOA0dFRbr/9dh5//HEeeOABKpUKhw4dorOzs8GzfPtk
      D6AIk8mE2+0mEAjg9Xr50Y9+RFdXF263G4C//OUveDweMpkMf/7zn/F4PGSzWWZnZ/noRz/K
      mTNn0HWder3Os88+y+7du8lms7hcLjZt2sTLL7/c4Bm+MxKAIgzD4Otf/zo2m43nn3+en/3s
      Z9xxxx1s2LABgLa2Nvbu3UssFsPr9bJ3716i0Sjf/OY3sVgseL1eNE1jcnKSmZkZjh8/zsLC
      ArfddhvpdJpgMNjgGb4zcmAsRZTLZR5++GEWFha46667OHLkCLVajU996lMMDQ1x++2385vf
      /Ibt27ezbds2jhw5wi233ILL5eL5559n3759RKNR1q9fT3t7O6+88gpbtmzhkUceoauri9tu
      uw1N0xo9zbdNAlBIrVajWCzi8Xgub8vn81itVux2ewNH1jgSgFCavAcQSpMAhNIkAKE0CUAo
      TQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKG0qwKolVfJrRT/r8u+bcuZJKXqG78Mv7i4+KaX
      KxQKAKRSqcvb/vX0v2/75+X//foA1XKBqalpStV/+YV5vU4yk30nUxAfcObDhw8f/tcNoVCE
      bD5Hq8tKrqRRymfBqDI5PYvV4SafXmIhuUy1kCUyv4DX7ycWmmE+lqC11c3k+AS6qQmX004o
      NEUuX8LrtnLspdMMrAswNj5Bpa5RXE4SjS1QMzRGzrwOVgdLsRDZ3DJmm5tkYgFd13E5naTT
      GRxOB5eGT2HYW0kvxWlx2xmfnEazNHH+zKsYZjveFg+XLo3S37+RUqlCOhEnGkvgbW0muphE
      L60QicZxNzcTnw+Ty69Qx0K9lMewOrCYrr+v84p354o9gGEYLC1GWYzGqTe5ScbDpDIZpiYm
      MZtMTE1NMjc3z7q1Pei6gVFMMhcOU2ny47KYmJmcpIqZqakpADSzDc2oEo3ECfZ2EwnPs2HT
      ZlaX0+RWCgwM9pNPZ+jqCbI20Ind1cJg/0aSiYU3BlReYSmVIl/SAWhp7yafiKMD0xOTGCYT
      09MzdHYH6Qt2A9DX283Y2Dj5Qgld16msLBHPlADeWNFUyRONJomncgQD3SQX4yymstjM8sev
      oisCKGZiBAb/k4/uuIlIZAmtvorJ5qGtrQ0DCPQE8PpaMQGJRAKTyQQWB+noDJHYIq1tbZg1
      6An0XL7NrlYn8ZU6NjO0eByMXRqlWNHRNI1//slpRoXQ/MJVCyraunuZHB2jp7vt8rb1fV3M
      zMXwt7ehGdDTE8Bs1JiNxABYzi1jtVooruZJJNNomok3vvFtkEgkQNPAMPD5fGiaGbdVR7c4
      34/7VlwH3vV6AMOoMT0xTWa1xH/evJX38nk0n00SS60wuKHvPbzV/2XodcYvjhAY3IK7ST4P
      UJEsiBFKk6c9oTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQA
      oTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTRLowcgro1iscj9999PuVzmrrvuYs2a
      NQAcOXIEr9eLz+fjhRde4NZbb+WTn/xkg0d77UgAitB1nWQySb1ep1wuAzA5OUmxWKRarXLu
      3DkOHjzIoUOHuPXWW/ntb3/LF77wBZ599llKpRKjo6PceeedPP3002SzWfbt28fvf/97tmzZ
      wtDQEL29vXz7299u8CzfPnkJpIhEIsENN9zAnj17mJiYAOD+++9nZmaGv//973zlK1/hl7/8
      Jel0GoC+vj5+/vOf09nZyZkzZ7jllls4e/YsXV1dGIZBNBqlvb2dT3ziEzQ1NbG0tES9Xm/k
      FN8RCUARnZ2dJBIJjh8/Tn9/P4899hhHjhzh0KFDfO1rX2NpaYlCocC3vvUtNE1j586dzMzM
      sGPHDm666SYuXLiAz+fj3LlzVCoVvF4vmzdvplR64xisHo/nqkNbXg/kyHAKisViWCwWOjo6
      3vQyx44do1Qq8dnPfvYajuzakwCE0uQlkFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkS
      gFCaBCCUJgEIpV03AeiVIhdHhskWao0eivgAMR8+fPjwP8+s5NK8fvIVUtUKVr2G0eQin14g
      u1JmOb2E1eGhspojmV3F43aSS8d4ZWgYf8cacqkFyroZh72JXHSM4dkUlXIJt93M7FwEd4uX
      cqlIJpMBo040GsPT4sUETI2PkkhncLmcnB8+Rzy+gM/vJbGUoFKrs7S4hMfjIrNcoruzHZMG
      U2MjpPJVfC1OluJxVst1XHYrczMzWOwu6tUKy9k058+cZaVm4LBbSSzEMQxIZnJ43E6ikRBW
      h5tKaZV4NIbdYefFF1+iyemh2e3k1In/wuJuIzofps3nIxaNYLLaOT10kophxudtadwjJ94T
      V+wB3C0++gJBNg4OQmGZkm4QisRYTsVoaV9DeG6a2UgMSylNuljH09JKMLgWczHFquZiKTLH
      vz4/a5pGrVajXi0ycmmSC2dPY3M1Mz4+TmeHl7m5OLpeI5FOUa9VyC7O4+vdzGDASyQcIVe3
      Mx+axe80CCcLmEwG1WodQ69jtjdj0svUq0US2SKldJx8uU5Nr3Pu3AhToxeoaTbWrOlkw4Y+
      wrMzNLf6mA5FKeayhOemcbZ2EJ6bZXJsnPZ2H+F4kp5gkJ41bQC0dvSQWZjHAJLRWTRXK/Ph
      EG2d3WzsC17Dh0m8X/7fl0Ce5mYcrmZcdhuaBqnFGIuZPJquo2lm6vUqV32jWtNYt3GQdb09
      zIUiBIJBzBq0dnTS4rLjbm6hyWZDQ0czmXA3t9IX7GKlYrCaXmIxvUqLy4rH46al1UeT1YLJ
      6mBwYAB7k5mVVJzM8iqruTSp1Sp2u526rpOcD9Hc3oO9yYLD42VNmxeTplOu1DE12fE47fha
      W7GYTNSqZWZnpqnpGk5PC3ZbEybNQK/V0XX9nxOhL9DOXGQRvVYlNDNDuWZgNuqUa/pV95W4
      /ly1HqBcKGBxOtFLBWhyUC0XMWkmbDYbxVIRo1pmKVugr7cHzTBYWojiaGmnmEtgcbbia3FR
      K60yHZrHancR6PASTy7T7m8FDJxOJ4VCAYfDRqlUw+GwUS7kiSWX6evtIZtcpGZy4HNbqZls
      GLUKTWaNimHB3mQG3ljgbXc4QK+zks9w4eI0gzfeSKvbTig8j6+9HYtJw+l0oterhCNx2jva
      cDnslMpVDL2OzWEnFg7h8XdiNRk47DZKlSpGtUSuWKerw0+hUMDpdJJMJvH7/cTnw9ib/bQ4
      rUTiCfp6A414zMR76LpfEGPoNUqVOg67rdFDEdeh6z4AId6N6+ZjUCHeDxKAUJoEIJQmAQil
      SQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoE
      IJQmAQilSQAKmZqa4k9/+hO6rhOJRDhz5gyGYVCpVAiHw5cvV61WGRoaIplMAhAKhahWq1ed
      BpidneX8+fMYhsHs7CyTk5PXdlLvkqXRAxDXRi6X41e/+hVr164llUrxt7/9jXQ6TTab5cKF
      CywvL/PTn/4UgJdffpl8Ps+TTz7JgQMHuO+++3jwwQeJRCLcd999/PrXv8bv95PJZLj33nvp
      7OxkcnKSs2fPYjKZ+OpXv8oNN9zQ4Bm/NbIHUITb7Wbjxo2Xn6F37NhBLpdj27ZtfOMb38Bm
      +9/jKu3cuZNIJMKuXbvYtm0bO3fuBLjiNIDNZsNms7G0tERvby+JRIJsNsvo6Oi1ndy7IHsA
      ReTzeex2O263m6GhIZ5++mkOHDhAsVjktddeY3p6mmg0SqFQ4NixYxiGQU9PDzMzM0xOTvL6
      669fDuj1119n8+bNlMtlmpqa6OvrI5VKsWfPHk6cOMG2bdsaPd23TA6MpQjDMHjttdcIhULs
      3r2bU6dOYRgGAwMDzMzMUKvVcDgchMNhtm7dSiwWw+Vy4ff7CYfD2Gw2Ojo6iEQi2O12enp6
      8Pl8JBIJ8vk8N954I8PDw7S1tdHb29vo6b5lEoBQmrwHEEqTAITSJAChNAlAKO2/Aa57RK18
      ERWgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAY10lEQVR4nO3daXAbZ57f8W8DjRsgSJDgAd6XeOu2JcuijpFtzY5nPJ5s7UztTqp2K6m8
      yFGVV6m8y7u8SFKVt0nVpirJi6SSydoTj2eyHluyrFuWdfCmSIo3wfsCCPDA1XlBWRYFzBjQ
      ECBF/D9VrSIBNJ4HIv5o9NO/flqJxWIaQmQpFUCn0+11P4TYE3vyzm9vb097G263+7Vvw2w2
      Y7fb09qG1WrFarWmtQ2Hw4HZbE5rG06nE6PRmPJ68tEvspoUgMhqUgAiq6mpPLi0uoGzx2vp
      HJojR78F5nwWJ58wOhfgh5cv0N3ZQ2tdGU+mVimyK3z9uIeTZy6wOj1MZdMROm5+zlIglK7X
      IkTKUioAi8mMqhrweIqxEyZkcBKYH6WksZT+Gw/46S/O8bsHY7QUWVmKaCh6FSW0Qumxd1l8
      /BH1TQ00m3Npa2tD09I7+mo0GgmF0lts6W5Dr9ejKAqRSCStbQBEo9G0taGqKrFYjFgstu/a
      SKkAwtEIOTlORqa9GPUhlgNhnK4SIuvrtL13lgedIxwvL2Rs2ke+DXKdDuwFFfjHu6k+/i6d
      d68wOtMNwK1bt1LqaKrcbjcLCwuvdRtmsxlVVQkEAmlr49sRoPX19bS14XA4CIfDbG5upq0N
      p9PJxsZG6h9Izw6EJb2YLeYdv6tmq2bSJb8+oLW3t6f0+FdZ3G73a9+G2WzW7HZ7WtuwWq2a
      1WpNaxsOh0Mzm81pbcPpdGpGozHl9VLaAgBsbuys4sjmOunbQAuRXjIKJLKaFIDIalIAIqtJ
      AYisJgUgspoUgMhqUgAiq0kBiKwmBSCyWmpp0JoGzh6rpevpHDn6EFFzPj7vAE+n1/jhD8/T
      09lLa10pT6Z8FNkV7j3q5uSZC/hmRqlsbKPj1hcsrm2l67UIkbKUCsBsNKEajJSUFOPQRZhZ
      nKOgsIxgTpT+6w/44Ns0aKFlRxrUc/QSC48/oq7xEE2SBk2apEHT30ZKBRCJRnE4HIxMeTHo
      w1hzy1ibn8EeC9H67lnudwxzrLyQMa+PgmdpUFt+OWtjnVQdf4fOO1cZm5U0aLIkDZq8zKVB
      zaYdv+vNFs0oadC0LJIGTX7JXBp0c+d3+OjmBunbeAqRXjIKJLKaFIDIalIAIqtJAYisJgUg
      spoUgMhqUgAiq0kBiKwmBSCyWkpHgm15RZw5VsvUYgiHboO1qImtFS8j3gWOHz9Kb98QzXWl
      jMz6KbQpDI15qWloxTczQmldE086HxKSw8ZiH0mpABobGsmxG+n/8h6nTp2ktbqJm58P4T50
      mJh/i3/0V5e592SO9nwX/qjC0MQcJQUOapp/TnDsDieONaNa8iUNmiRJg6a/jZQKYHFpkcvn
      36ViYJ7xgS4wODh+7AR9c36amlvxzq3QUFHE/KyffIeGKy8HV3EFgdV5qhuP0vXNLXoe9AGS
      Bk2GpEGTl7E0aK7LuTNNZ3dp+XZDSs8hadDkFkmDJr9kLA26uuzb8XsksMxSqk8ixD4ho0Ai
      q0kBiKwmBSCymhSAyGpSACKrSQGIrCYFILKaFIDIalIAIquldCTY7irmzLFaJhe2yNFvsrih
      4JsZZtG/xYmTx+jtHdyRBh0cnaK2se27NGjHQ7aiWrpeixApU2KxmKbTJbchOH7qHNVFZj76
      9CqnT59Er9OhA54sbuCJhDhzsZm7fbOUGWP4owo3bn/NmbdOYilsJDh6C0U1Pk+DdnV1pfWF
      SRo0+TZA0qBJWVpe4vL5d6gYmGOsr5OTl36K3zuKzaDQfKSNqZllGiuKmJv14/o2DVpUSWB1
      jpqm43Tev0mvpEGTJmnQ5GUuDZr3UhrUlqe5bJIGTcciadDkl8ylQVdeSoMGV1hO9UmE2Cdk
      FEhkNSkAkdWkAERWkwIQWU0KQGQ1KQCR1aQARFaTAhBZTQpAZLWUCkCnGigv96BTDVjMJixW
      GyajAQCrzYqi6LBazOhVA+Znt5vMFvQ6BavVhrL7/RfiT5JSFOL02UtU5ivMbxhYGO2jtuU0
      j27/nlXVxaUjjRjMEUIYCC4HsZg0PvnsGpcu/xmhEORawgz3dzLsXcVqtZKTk5Ou1wRwINow
      mUzo9XqSTeu+CovFgqZpqGrKqZik2Ww2wuEwRqMxrW2oqko4HE5pvZRe9dBgP+2//JDgyAzF
      ra2MLy9xuLWZ+xM+5mfmaGgpYcDrJ0cLE9wEg0FlfW0F1eFheX4Co8lMVVUVJSUlVFVVpdTR
      VFksFpxO52vdhqqqKIqS8h81FQaDAU3T0hq5NhqNRKPRtEauTSYTkUgk5TZSOh/AnuemuaaY
      3qfTuKw6MOeyublFji4AljzGxrxUlhYwu7JOrhnWNkLYnPkEFqdxl1YwMTJMVIP29nZu3rz5
      Kq8zaRKHTk62x6FT2gIEVha4/3D7Dx70AWz/vP3vdiZ0ZHwKgHX/9jpra9t/vMDwcEodEyIT
      ZBRIZDUpAJHVpABEVpMCEFlNCkBkNSkAkdWkAERWkwIQWU0KQGS1FNOgRiory9CrRmxWM2ar
      DVW//RQOhwNF0WO3WdEbjFjM28Eny7PH2B0OSYOKfSelKMSpsxepdCkstpqYH+2jtK6FjQUv
      j71rXGytx2zT2Ijq2VwNYjLBbz67xoV33iUc0ZNj3GBsoJfRWT8Oh4O8vLx0vSZguyDTGfDK
      RBvfpkENBkPa2jCbzc/bSher1UokEsFisaStDbvdjslkSm8adHhogHO//JDgUy+HW1vxLq2h
      6fSYrWaWF5aoyy9iejaAXQuzsQUGo4HN4Bp6WxH+5UlUoxGPx0N+fj4ejyeljqbKarWm9T88
      E22oqopOp0vrBLzfFlc6E6dGo5FYLJb2D4tXSYOmNDeozZmvnTjWollz8rTSonyt0FOu5bk9
      Wo0nT6uqrtb0qkmrKvdoFkeeVlyQq9ntNq3QU67ZTAatoqpa0yvbzyNzgya3yNygyS8ZmRs0
      6Fvi4ePt68Jvpz23f1554d+xyWkANta21wkEgtvrjo2m0pQQGSGjQCKrSQGIrCYFILKaFIDI
      alIAIqtJAYisFjcM6qk6xIm2BjRNY9E7xr3HPXvRLyEyIm4LEFwP4cpz4rSqdPQM7EWfhMiY
      uAIoqTmEYWuTgtpDONJ4eFyI/SDuK9D89Di3V/Sct6msJljBZrcRfHZ0V4jXXYIohI7zZw7z
      6MkEBuDFbcCRN87SVJHD+HyY4NIYnqpWBrvuML1h4INLZ5if8+IuyGdy2ke+DX539Sbvvf9T
      AstLeMqK6br7JYOTi5l6bUJ8r7gCiG4EWVyLUFvq5tFL93m9k5w9eYm+iX4qyypY3tygoszD
      uh86rt/jnQ9OcbVjknqLxso6KDodvoUJrJ7DjHb+Pa6iYtqrmmhra0PTtLS+MKPRmNYUZSba
      0Ov1KIqS1hSlXq8HSOu8naqqEovFiMVi+66NuAJQnp21kpNfgBF48b/eaDQxNzPNeiDIRHAR
      nb2Q9bUouVvLFLXU8b9/fYOW+lIejvsptEFujp31sAHv3d9S2dBK99c38W9uP+OtW7de9bUm
      ReYGTY7MDRr3RDmsB4OsBYKcfPMoN+53PL9vemyQvxsbfOHRQ89/ejKyPSfojcU5AGae3b6y
      cg+AqdlrKXVMiEyIK4DxoR7Gh3rQKQqxNH9NEWKvJTwS/Fb7P+Cf/4u/wZHp3giRYQlPiAmF
      /PiXNWSwU2SCqtNR6XSxHg4xG/CTye8dCQtAbzYQXN/ECKRvt0UIsBmM/JPjbzPuWybHZGY9
      HOLv+h5nrAgSFICFd8+dZmlpCn2GOiGy1zs1jfx+uJ/+xVkA/ubIKYrtOcwE/BlpP0EBbHD9
      xl0c1jDpnVRECHAYTaxufjcEu7a1icWQvovpvSzhTnAokt4DSEJ868bEU/686Sgeh5NmdzHl
      zjwmfMsZaz9hAai6POrrK8lcHYpsNeFb4TeD3Vysqqcuz83fPrpDJI1HjF8W9xXIYHPiWxpB
      r5wkfccGhfjOhG+F/9H9YE/ajtsCFFW3UmLZYHxxHXOCFewOWwa6JURmxG0BpnpuYzzUTPjL
      z+OOAxx9s53GcgfjCxHWl8YoqmnFPzVI54SPn1x6i4X5adwFrmdpUIXfXrnB5R9/yNrSEqVl
      RXTdu8bARHrzOUKkIuFxgJhi4PzFS1y78hne+e/OCpianODsiXfom+inqqKK+YVJ9CYbziID
      nTfuc+knb/BlxxR1lhgrwWdp0PlxLJ7DjHR9hquwiPbKRkmDJknSoOlvI2EBFBcUMjYxhsOS
      Cy+cFmMwGpmeniS4tsZYYJ6oycV6wEdubI3Cxjr+18fXaakr5cHYd2nQQEjP5J1PqWhopef+
      TdY2t/+jJQ36/SQNmrxdvFK8hXPnTjE7Ocg3t+7tuGdmfIiPx4fiVwGejHgBuLk0D8Dss9tX
      Vu4D4J37KqWOCZEJcTvBis7A40ffEIlG5YIW4sCLK4DKI8eY7rjJ1OoW6bssgxD7Q1wBjHff
      o+TYBZTVGdb2okdCZFBcAWiRLZaXA1hzc0nfRXOE2B8SRiH0quRARXZIMApkxWZRsdksshMs
      DrwEBbBO96NHhBTIXCRJiL2R4CuQhX/8T/8Zf/HBZdkCiAMv4QkxDx50YNJLFlQcfAl3gmcX
      l7BbLQnPy5QdZHGQJMwClRU1cepMKZ9/9FteTFZUN7TxZms5H3/2Ne2HqwkZ8pge6WJ8KcSP
      Lp9j6MkA9ZUlDHl9FNoUbnz9iDMX3sU3O0FFfQOdt68wvSxzTYj9I2EB+DYWCG+42Xrp9mgk
      gtli5fy5MziJsqIZyMlxUJSXQ/eX93j/F+f43YMxWnL1LEU0FL2ecGCOgqYzTD/+iIraGmpb
      ciUNmiRJg6a/jYQF4LIbuHLtTtwokKLTYTAY6O1+wKHyYjb0FlSLC0fQR8MPTvPVnV7ayosZ
      nvbjtkGu04HRUczywD3KD1+k8/YVvEvbyUZJg34/SYMmbxfToODzr5Gfa4vbQRgf6uW/jQ0Q
      CUeYmRoDQKca0EXDDDzZvppMb2/fjnVuX/s9AN19O28XYj9IGIe+eOFtFhcmE84LFAnv3BzH
      ImE5XiBeWwmHQX/3yac86e+QWeHEgZdwGNRSWM2//3f/BnumeyNEhiUsANPmFoGoHAcWB1/C
      AlgL+xns7keuESkOuoQFoAAxg53WusoMd0eIzIorgLySWloOlePJtdLzdHwv+iRExsSNAgVX
      5xmdnMVoVCQNKg68uAIIbaxx59YN+jotMgwqDryE+wCV9W388pd/xdmTR+Puc+TI4Kg4OBJP
      jRjexDs3w8OHnTtuP376PA2lNn5/d4B3jlTjMzhZmxrk8YSPD35wmqWlWVwuF95pHy4bfPrF
      dX74k58RWF7BU1pA172veDI+n5EXJkQyEl8kLxwCRQcvJTYnxkd5+8Rlzre7cFkUJgcG0But
      5LhVum4/4OKfneCrrilqzNr23KCKjtX5CawlrYx0fUGe2017RYOkQZMkadD0txFXAGUtp/nZ
      +ZMY9FtxWSC9amBifJRPfnuFooJCXJ4K1gN+8gjgqqnhf350jea6Uu6PPJsb1GnHv6ExfusT
      Kg610PXgDsEtmRs0WQcxDarqdNS68giGQkz5d2/mqV1Lg2rhTUKRMFvhcNwOwtzkMJ9MDm//
      vDjP3OILX2dGpgG4880iAN/es7KyfeGDmYWbKXVMHDyqTse/PH2KSZ+ffKuFKb+fTwcG97ZP
      L9/gHezg09AGJ5pKZWY4sasaCwoYXVnl4/5+FOBfn32bz4aeEs7gJZFelnAUqKG+noKySuRa
      MGI3rYdD5Fm2rztk0OvR63TE0rwv+H0S7AQbqakqJ8qmHAgTu2p0ZZWTnhD/6u0zGPV6Ph0Y
      JLr/CiDCzetfsrgwK1+BxK7SgF/19mJW9URiWkavBvmHJCiAGG5PDXazgn/FJxfLFrtuM5K+
      IddUJdwHmFtcpqamKvGdQhwgCd/jHnc1Z86flgtliwMvQQGYOFTvort/QnaCxYGXYB8gzMDT
      CWwsy5XixYGXYAsQQ9HsvPeT97AkWEE1JIwPCfFains3F9cc4Y0jhTx+2BM3AlTTeJg3Wsro
      HJql0KZDM7nwPu1kYjnMjy6fY3hwkNqKEp5OreK2K1y/+5C3L76Hf26K8rr6HTPDCbEfxBXA
      ovcpHQNVHG0siXtwaCuE1WpncXGZxrJ6fFETuc4cNvMcdF29+93coE7d87lBQ2uzuBpO4X38
      EeU11dQ0y9ygyZI0aPrbiCuAgtJajtSXMTk1GfdgvapHp1MoKS5mdWWVdb0dxZSLI+jj0MVT
      XL3ZTWtlCU+9vudzgxrsRSz236Gi7QIdt68w82x2aEmDfr+DmAZNl1dNgxKLxTS2D9I9X4rL
      D2lvnmjV9C/dDmiqqt/xu6JXNb0S/7g/trS3t6f0+FdZ3G73a9+G2WzW7HZ7WtuwWq2a1WpN
      axsOh0Mzm81pbcPpdGpGozHl9RLu0R6qPc6HHzTS97CHlz97Ii8dxdOiEfbPcb0/RiG3ogVL
      ngcUiIY2WHr6kGhIxrqyWeJTInUBPv7V/z1QJ8UXNp1lfWmKmc7PAVDNdopazjPXd53olhRB
      tkp4JHh+YZHWo0cSV8dryJxbRGQrSGB+9Pltkc0Ac33XKah7Yw97JvZawgIozsmntKbmwBSA
      zV3J2txI3O3RrXV0BtMe9EjsFwnf48PeIUq77AcmCapFwuj0hr3uhtiHEm4B9HqVaFRD1R2M
      PKh/Zojcipa42y15JWytLe1Bj8Ruqsh18PPWOhoKclNeN+E7vLmhCafbQ32l50/u3H4Q2Qyw
      sTJDYfM5jLY8VLMNZ1kTzrImlkce73X3xJ/AZTHz1ydbeTyzyPtNtdTmp1YEcV+BdEYLT8ee
      8kZbKZ2jU7vW0b3m9w6wsTJLjucQOtXA+pKX2e5rbA8Hi9dVRZ6D/rklhpZWseqgsdDF8NJq
      0uvHFUBl21tcPlbJ5OwCDsC3m73dY+F1H0tPv9nrbohd1D+3zI8aayjMdVJiM/Mfr99Paf24
      Ahh9fINfT+ezsRlK+OY3GAyEw3LpDLE/bEWj/Ifr39BSXsrI/CL+jZevbv3HxY8CxSLUNr9B
      aHWMhw9XdowE1TYd4WRzKZ1DsxTZVSKmPPzTg/RP+Xn/vXaGh4aoqShmeMqH267w1Z0HnP3B
      5RfSoF8wtShpULG7wtEYoyv+VzrXOPHcoCE9p8+8Se9LUYjNzU2stu00aFNFA975Oew5BRTW
      5NH5Yho0R3meBt3yz5B36E2mHn9EWXU11U2SBk2WpEHT30bCAljzrWI2lfDyn1ZVVRRlOw26
      vLiEzuwmsLKAIxSk/uIprtzoomVHGtSOaitkoe8WFa3n6bh9hdmV7diBpEG/n6RBk7erV4q3
      2fV4Z5fjzgkeH+rlv4882fFpoehVlFiEgYEhAAYGtq8YP/Ds/rvXvwCgb4/ngBQikYTHAaKR
      CBFMNCW4SN7Lm0otGiEmI4niNZVwCzAzN4cxtkq3XCRPHHAJtwB1VUf4i7/8GeZM90aIDEu4
      BdhYG+W//mpS5gUSB16CLYAZd1Ud//DH5+VK8eLAS7AFCLEyO81//tvrUgDiwEu4D2Cw2Wk4
      VHdgTogR4g+JK4Dak+epynGhD6/KFkAceHEf8gtjg8w49ehMLgwQdzRYiIMkrgD8i16uXPXu
      RV+EyLiUvuYXeKp4+3gtnYOz5BkjaGYX/tkRRmZWOX/+DD1dfbTUlzHk9VFkV+joG6L1+Cl8
      0yOUN7TS8/VN/JsH5UxjcRCkVACF7kLMJjMrSwt4aivIL6uid3aE4oZmZntH+MXPznG1Y5IT
      VfmsRLZzQjZDBPdbP8bf9/c0tzZisORJGjRJkgZNfxspFUBwPUiJ5yin3jLimxpkfn6Wiso6
      pnwBDp97k/7BaQ5XuJma9pNn08h15uAsrGBtdpjqw+103bvG4GQPIGnQZEgaNHm7mgb9Q8aH
      evkvs2ME1oLPbulFtTowR4L8n57OhOt8/umvU+qQEJmU8lD/d2/+bZH1tbj5Q4V4XRyMiX+E
      eEVSACKrSQGIrCZxH7Hn9DqFvz7bQLnLztW+KW4NzmasbdkCiD13rLKA1fUt/u1vHnKxqRSj
      mrm3pRSA2HNLgU0qCxzUFzvRgGgGTzKXAhB7bnRhjSs9UxyrdPOfrvZmtABkH0DsC91Ty3RP
      LWe8XdkCiKyW0hbAXVq9Iw0aNuTimx5iYiHIxQtn6O7qo7W+jMFnadDHvYO0nTj9LA3aRs/X
      1/Ft7F6wK6+4FmdhDYqisLXuY26sg2g4tclRRXZLLQ6dX4DZZGJ5YZ6S+koMSoScylpC+WG8
      3U/5+YftXHk8yfEKF8tRDUWvYlVDFJx+H1/v/6OpZffSoCG1kEK3C//CMFoshqXUQ13jYaKr
      gyhaVNKgKbQBkgZNyvrGOkXFJbz51hn83iFySg/hn53ErsQ4cv4UvQPe7TTojA+Xle00qLsS
      /8xTao6co/PeNYZ2IQ1qsjoprDzC/a8+3nG7xVGAq6Qe7+BdSYMmKdvToP8fBQsyiiQW3FMA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Square Meter Comparison' width='192'>
      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
      4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Static Weather Map' width='192'>
      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
      b7UFhlt5kUSSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Temperature Line Chart' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
