<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='weather_data+ (Multiple Connections)' inline='true' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='weather_data' name='excel-direct.1ov0foy0fb2fo713vw3ln0ror18p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/github/tableau/world-weather-economic-dashboard/Global Weather &amp; Cost of Living Dashboard/data/used datatables/weather_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='mapped_city' name='excel-direct.0gpe1hi1kl4hok1c7zj7q0kdo56n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/github/tableau/world-weather-economic-dashboard/Global Weather &amp; Cost of Living Dashboard/data/used datatables/mapped_city.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='global cost of living' name='excel-direct.16ixxtn0o6z9i31gcgx9v1bibrod'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/github/tableau/world-weather-economic-dashboard/Global Weather &amp; Cost of Living Dashboard/data/used datatables/global cost of living.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.1ov0foy0fb2fo713vw3ln0ror18p' name='weather_data' table='[weather_data$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='2'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='City ID' ordinal='1' />
              <column datatype='real' name='Temperature (C*)' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0gpe1hi1kl4hok1c7zj7q0kdo56n' name='mapped_City' table='[mapped_City$]' type='table'>
            <columns gridOrigin='A1:K1001:no:A1:K1001:0' header='yes' outcome='2'>
              <column datatype='string' name='City ID' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='string' name='city_ascii' ordinal='2' />
              <column datatype='real' name='lat' ordinal='3' />
              <column datatype='real' name='lng' ordinal='4' />
              <column datatype='string' name='country' ordinal='5' />
              <column datatype='string' name='iso2' ordinal='6' />
              <column datatype='string' name='iso3' ordinal='7' />
              <column datatype='string' name='admin_name' ordinal='8' />
              <column datatype='string' name='capital' ordinal='9' />
              <column datatype='integer' name='population' ordinal='10' />
            </columns>
          </relation>
          <relation connection='excel-direct.16ixxtn0o6z9i31gcgx9v1bibrod' name='cost-of-living_v2' table='[&apos;cost-of-living_v2$&apos;]' type='table'>
            <columns gridOrigin='A1:BF4957:no:A1:BF4957:0' header='yes' outcome='6'>
              <column datatype='string' name='city' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='real' name='Meal, Inexpensive Restaurant (USD)' ordinal='2' />
              <column datatype='real' name='Meal for 2 People, Mid-range Restaurant, Three-course (USD)' ordinal='3' />
              <column datatype='real' name='McMeal at McDonalds (or Equivalent Combo Meal) (USD)' ordinal='4' />
              <column datatype='real' name='Domestic Beer (0.5 liter draught, in restaurants) (USD)' ordinal='5' />
              <column datatype='real' name='Imported Beer (0.33 liter bottle, in restaurants) (USD)' ordinal='6' />
              <column datatype='real' name='Cappuccino (regular, in restaurants) (USD)' ordinal='7' />
              <column datatype='real' name='Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)' ordinal='8' />
              <column datatype='real' name='Water (0.33 liter bottle, in restaurants) (USD)' ordinal='9' />
              <column datatype='real' name='Milk (regular), (1 liter) (USD)' ordinal='10' />
              <column datatype='real' name='Loaf of Fresh White Bread (500g) (USD)' ordinal='11' />
              <column datatype='real' name='Rice (white), (1kg) (USD)' ordinal='12' />
              <column datatype='real' name='Eggs (regular) (12) (USD)' ordinal='13' />
              <column datatype='real' name='Local Cheese (1kg) (USD)' ordinal='14' />
              <column datatype='real' name='Chicken Fillets (1kg) (USD)' ordinal='15' />
              <column datatype='real' name='Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)' ordinal='16' />
              <column datatype='real' name='Apples (1kg) (USD)' ordinal='17' />
              <column datatype='real' name='Banana (1kg) (USD)' ordinal='18' />
              <column datatype='real' name='Oranges (1kg) (USD)' ordinal='19' />
              <column datatype='real' name='Tomato (1kg) (USD)' ordinal='20' />
              <column datatype='real' name='Potato (1kg) (USD)' ordinal='21' />
              <column datatype='real' name='Onion (1kg) (USD)' ordinal='22' />
              <column datatype='real' name='Lettuce (1 head) (USD)' ordinal='23' />
              <column datatype='real' name='Water (1.5 liter bottle, at the market) (USD)' ordinal='24' />
              <column datatype='real' name='Bottle of Wine (Mid-Range, at the market) (USD)' ordinal='25' />
              <column datatype='real' name='Domestic Beer (0.5 liter bottle, at the market) (USD)' ordinal='26' />
              <column datatype='real' name='Imported Beer (0.33 liter bottle, at the market) (USD)' ordinal='27' />
              <column datatype='real' name='Cigarettes 20 Pack (Marlboro) (USD)' ordinal='28' />
              <column datatype='real' name='One-way Ticket (Local Transport) (USD)' ordinal='29' />
              <column datatype='real' name='Monthly Pass (Regular Price) (USD)' ordinal='30' />
              <column datatype='real' name='Taxi Start (Normal Tariff) (USD)' ordinal='31' />
              <column datatype='real' name='Taxi 1km (Normal Tariff) (USD)' ordinal='32' />
              <column datatype='real' name='Taxi 1hour Waiting (Normal Tariff) (USD)' ordinal='33' />
              <column datatype='real' name='Gasoline (1 liter) (USD)' ordinal='34' />
              <column datatype='real' name='Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)' ordinal='35' />
              <column datatype='real' name='Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)' ordinal='36' />
              <column datatype='real' name='Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)' ordinal='37' />
              <column datatype='real' name='1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)' ordinal='38' />
              <column datatype='real' name='Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)' ordinal='39' />
              <column datatype='real' name='Fitness Club, Monthly Fee for 1 Adult (USD)' ordinal='40' />
              <column datatype='real' name='Tennis Court Rent (1 Hour on Weekend) (USD)' ordinal='41' />
              <column datatype='real' name='Cinema, International Release, 1 Seat (USD)' ordinal='42' />
              <column datatype='real' name='Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)' ordinal='43' />
              <column datatype='real' name='International Primary School, Yearly for 1 Child (USD)' ordinal='44' />
              <column datatype='real' name='1 Pair of Jeans (Levis 501 Or Similar) (USD)' ordinal='45' />
              <column datatype='real' name='1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)' ordinal='46' />
              <column datatype='real' name='1 Pair of Nike Running Shoes (Mid-Range) (USD)' ordinal='47' />
              <column datatype='real' name='1 Pair of Men Leather Business Shoes (USD)' ordinal='48' />
              <column datatype='real' name='Apartment (1 bedroom) in City Centre (USD)' ordinal='49' />
              <column datatype='real' name='Apartment (1 bedroom) Outside of Centre (USD)' ordinal='50' />
              <column datatype='real' name='Apartment (3 bedrooms) in City Centre (USD)' ordinal='51' />
              <column datatype='real' name='Apartment (3 bedrooms) Outside of Centre (USD)' ordinal='52' />
              <column datatype='real' name='Price per Square Meter to Buy Apartment in City Centre (USD)' ordinal='53' />
              <column datatype='real' name='Price per Square Meter to Buy Apartment Outside of Centre (USD)' ordinal='54' />
              <column datatype='real' name='Average Monthly Net Salary (After Tax) (USD)' ordinal='55' />
              <column datatype='real' name='Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate' ordinal='56' />
              <column datatype='integer' name='data_quality' ordinal='57' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[1 Pair of Jeans (Levis 501 Or Similar) (USD)]' value='[cost-of-living_v2].[1 Pair of Jeans (Levis 501 Or Similar) (USD)]' />
          <map key='[1 Pair of Men Leather Business Shoes (USD)]' value='[cost-of-living_v2].[1 Pair of Men Leather Business Shoes (USD)]' />
          <map key='[1 Pair of Nike Running Shoes (Mid-Range) (USD)]' value='[cost-of-living_v2].[1 Pair of Nike Running Shoes (Mid-Range) (USD)]' />
          <map key='[1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)]' value='[cost-of-living_v2].[1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)]' />
          <map key='[1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)]' value='[cost-of-living_v2].[1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)]' />
          <map key='[Apartment (1 bedroom) Outside of Centre (USD)]' value='[cost-of-living_v2].[Apartment (1 bedroom) Outside of Centre (USD)]' />
          <map key='[Apartment (1 bedroom) in City Centre (USD)]' value='[cost-of-living_v2].[Apartment (1 bedroom) in City Centre (USD)]' />
          <map key='[Apartment (3 bedrooms) Outside of Centre (USD)]' value='[cost-of-living_v2].[Apartment (3 bedrooms) Outside of Centre (USD)]' />
          <map key='[Apartment (3 bedrooms) in City Centre (USD)]' value='[cost-of-living_v2].[Apartment (3 bedrooms) in City Centre (USD)]' />
          <map key='[Apples (1kg) (USD)]' value='[cost-of-living_v2].[Apples (1kg) (USD)]' />
          <map key='[Average Monthly Net Salary (After Tax) (USD)]' value='[cost-of-living_v2].[Average Monthly Net Salary (After Tax) (USD)]' />
          <map key='[Banana (1kg) (USD)]' value='[cost-of-living_v2].[Banana (1kg) (USD)]' />
          <map key='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' value='[cost-of-living_v2].[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' />
          <map key='[Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)]' value='[cost-of-living_v2].[Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)]' />
          <map key='[Bottle of Wine (Mid-Range, at the market) (USD)]' value='[cost-of-living_v2].[Bottle of Wine (Mid-Range, at the market) (USD)]' />
          <map key='[Cappuccino (regular, in restaurants) (USD)]' value='[cost-of-living_v2].[Cappuccino (regular, in restaurants) (USD)]' />
          <map key='[Chicken Fillets (1kg) (USD)]' value='[cost-of-living_v2].[Chicken Fillets (1kg) (USD)]' />
          <map key='[Cigarettes 20 Pack (Marlboro) (USD)]' value='[cost-of-living_v2].[Cigarettes 20 Pack (Marlboro) (USD)]' />
          <map key='[Cinema, International Release, 1 Seat (USD)]' value='[cost-of-living_v2].[Cinema, International Release, 1 Seat (USD)]' />
          <map key='[City ID (mapped!City)]' value='[mapped_City].[City ID]' />
          <map key='[City ID]' value='[weather_data].[City ID]' />
          <map key='[Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)]' value='[cost-of-living_v2].[Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)]' />
          <map key='[Date]' value='[weather_data].[Date]' />
          <map key='[Domestic Beer (0.5 liter bottle, at the market) (USD)]' value='[cost-of-living_v2].[Domestic Beer (0.5 liter bottle, at the market) (USD)]' />
          <map key='[Domestic Beer (0.5 liter draught, in restaurants) (USD)]' value='[cost-of-living_v2].[Domestic Beer (0.5 liter draught, in restaurants) (USD)]' />
          <map key='[Eggs (regular) (12) (USD)]' value='[cost-of-living_v2].[Eggs (regular) (12) (USD)]' />
          <map key='[Fitness Club, Monthly Fee for 1 Adult (USD)]' value='[cost-of-living_v2].[Fitness Club, Monthly Fee for 1 Adult (USD)]' />
          <map key='[Gasoline (1 liter) (USD)]' value='[cost-of-living_v2].[Gasoline (1 liter) (USD)]' />
          <map key='[Imported Beer (0.33 liter bottle, at the market) (USD)]' value='[cost-of-living_v2].[Imported Beer (0.33 liter bottle, at the market) (USD)]' />
          <map key='[Imported Beer (0.33 liter bottle, in restaurants) (USD)]' value='[cost-of-living_v2].[Imported Beer (0.33 liter bottle, in restaurants) (USD)]' />
          <map key='[International Primary School, Yearly for 1 Child (USD)]' value='[cost-of-living_v2].[International Primary School, Yearly for 1 Child (USD)]' />
          <map key='[Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)]' value='[cost-of-living_v2].[Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)]' />
          <map key='[Lettuce (1 head) (USD)]' value='[cost-of-living_v2].[Lettuce (1 head) (USD)]' />
          <map key='[Loaf of Fresh White Bread (500g) (USD)]' value='[cost-of-living_v2].[Loaf of Fresh White Bread (500g) (USD)]' />
          <map key='[Local Cheese (1kg) (USD)]' value='[cost-of-living_v2].[Local Cheese (1kg) (USD)]' />
          <map key='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' value='[cost-of-living_v2].[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
          <map key='[Meal for 2 People, Mid-range Restaurant, Three-course (USD)]' value='[cost-of-living_v2].[Meal for 2 People, Mid-range Restaurant, Three-course (USD)]' />
          <map key='[Meal, Inexpensive Restaurant (USD)]' value='[cost-of-living_v2].[Meal, Inexpensive Restaurant (USD)]' />
          <map key='[Milk (regular), (1 liter) (USD)]' value='[cost-of-living_v2].[Milk (regular), (1 liter) (USD)]' />
          <map key='[Monthly Pass (Regular Price) (USD)]' value='[cost-of-living_v2].[Monthly Pass (Regular Price) (USD)]' />
          <map key='[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate]' value='[cost-of-living_v2].[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate]' />
          <map key='[One-way Ticket (Local Transport) (USD)]' value='[cost-of-living_v2].[One-way Ticket (Local Transport) (USD)]' />
          <map key='[Onion (1kg) (USD)]' value='[cost-of-living_v2].[Onion (1kg) (USD)]' />
          <map key='[Oranges (1kg) (USD)]' value='[cost-of-living_v2].[Oranges (1kg) (USD)]' />
          <map key='[Potato (1kg) (USD)]' value='[cost-of-living_v2].[Potato (1kg) (USD)]' />
          <map key='[Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)]' value='[cost-of-living_v2].[Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)]' />
          <map key='[Price per Square Meter to Buy Apartment Outside of Centre (USD)]' value='[cost-of-living_v2].[Price per Square Meter to Buy Apartment Outside of Centre (USD)]' />
          <map key='[Price per Square Meter to Buy Apartment in City Centre (USD)]' value='[cost-of-living_v2].[Price per Square Meter to Buy Apartment in City Centre (USD)]' />
          <map key='[Rice (white), (1kg) (USD)]' value='[cost-of-living_v2].[Rice (white), (1kg) (USD)]' />
          <map key='[Taxi 1hour Waiting (Normal Tariff) (USD)]' value='[cost-of-living_v2].[Taxi 1hour Waiting (Normal Tariff) (USD)]' />
          <map key='[Taxi 1km (Normal Tariff) (USD)]' value='[cost-of-living_v2].[Taxi 1km (Normal Tariff) (USD)]' />
          <map key='[Taxi Start (Normal Tariff) (USD)]' value='[cost-of-living_v2].[Taxi Start (Normal Tariff) (USD)]' />
          <map key='[Temperature (C*)]' value='[weather_data].[Temperature (C*)]' />
          <map key='[Tennis Court Rent (1 Hour on Weekend) (USD)]' value='[cost-of-living_v2].[Tennis Court Rent (1 Hour on Weekend) (USD)]' />
          <map key='[Tomato (1kg) (USD)]' value='[cost-of-living_v2].[Tomato (1kg) (USD)]' />
          <map key='[Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)]' value='[cost-of-living_v2].[Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)]' />
          <map key='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' value='[cost-of-living_v2].[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' />
          <map key='[Water (0.33 liter bottle, in restaurants) (USD)]' value='[cost-of-living_v2].[Water (0.33 liter bottle, in restaurants) (USD)]' />
          <map key='[Water (1.5 liter bottle, at the market) (USD)]' value='[cost-of-living_v2].[Water (1.5 liter bottle, at the market) (USD)]' />
          <map key='[admin_name]' value='[mapped_City].[admin_name]' />
          <map key='[capital]' value='[mapped_City].[capital]' />
          <map key='[city (cost-of-living!v2)]' value='[cost-of-living_v2].[city]' />
          <map key='[city]' value='[mapped_City].[city]' />
          <map key='[city_ascii]' value='[mapped_City].[city_ascii]' />
          <map key='[country (cost-of-living!v2)]' value='[cost-of-living_v2].[country]' />
          <map key='[country]' value='[mapped_City].[country]' />
          <map key='[data_quality]' value='[cost-of-living_v2].[data_quality]' />
          <map key='[iso2]' value='[mapped_City].[iso2]' />
          <map key='[iso3]' value='[mapped_City].[iso3]' />
          <map key='[lat]' value='[mapped_City].[lat]' />
          <map key='[lng]' value='[mapped_City].[lng]' />
          <map key='[population]' value='[mapped_City].[population]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[weather_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K1001:no:A1:K1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BF4957:no:A1:BF4957:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[weather_data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City ID]</local-name>
            <parent-name>[weather_data]</parent-name>
            <remote-alias>City ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature (C*)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature (C*)]</local-name>
            <parent-name>[weather_data]</parent-name>
            <remote-alias>Temperature (C*)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City ID (mapped!City)]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>City ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_ascii</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_ascii]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>city_ascii</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso2]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>iso2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso3]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>iso3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>admin_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[admin_name]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>admin_name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>capital</remote-name>
            <remote-type>130</remote-type>
            <local-name>[capital]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>capital</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[mapped_City]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city (cost-of-living!v2)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (cost-of-living!v2)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meal, Inexpensive Restaurant (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Meal, Inexpensive Restaurant (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Meal, Inexpensive Restaurant (USD)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meal for 2 People, Mid-range Restaurant, Three-course (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Meal for 2 People, Mid-range Restaurant, Three-course (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Meal for 2 People, Mid-range Restaurant, Three-course (USD)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>McMeal at McDonalds (or Equivalent Combo Meal) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>McMeal at McDonalds (or Equivalent Combo Meal) (USD)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic Beer (0.5 liter draught, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic Beer (0.5 liter draught, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Domestic Beer (0.5 liter draught, in restaurants) (USD)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imported Beer (0.33 liter bottle, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imported Beer (0.33 liter bottle, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Imported Beer (0.33 liter bottle, in restaurants) (USD)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cappuccino (regular, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cappuccino (regular, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Cappuccino (regular, in restaurants) (USD)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Water (0.33 liter bottle, in restaurants) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Water (0.33 liter bottle, in restaurants) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Water (0.33 liter bottle, in restaurants) (USD)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Milk (regular), (1 liter) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Milk (regular), (1 liter) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Milk (regular), (1 liter) (USD)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loaf of Fresh White Bread (500g) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Loaf of Fresh White Bread (500g) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Loaf of Fresh White Bread (500g) (USD)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rice (white), (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rice (white), (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Rice (white), (1kg) (USD)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Eggs (regular) (12) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Eggs (regular) (12) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Eggs (regular) (12) (USD)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Cheese (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local Cheese (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Local Cheese (1kg) (USD)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chicken Fillets (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Chicken Fillets (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Chicken Fillets (1kg) (USD)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apples (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apples (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apples (1kg) (USD)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banana (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Banana (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Banana (1kg) (USD)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oranges (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oranges (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Oranges (1kg) (USD)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tomato (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tomato (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Tomato (1kg) (USD)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Potato (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Potato (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Potato (1kg) (USD)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Onion (1kg) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Onion (1kg) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Onion (1kg) (USD)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lettuce (1 head) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lettuce (1 head) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Lettuce (1 head) (USD)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Water (1.5 liter bottle, at the market) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Water (1.5 liter bottle, at the market) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Water (1.5 liter bottle, at the market) (USD)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bottle of Wine (Mid-Range, at the market) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bottle of Wine (Mid-Range, at the market) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Bottle of Wine (Mid-Range, at the market) (USD)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic Beer (0.5 liter bottle, at the market) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic Beer (0.5 liter bottle, at the market) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Domestic Beer (0.5 liter bottle, at the market) (USD)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imported Beer (0.33 liter bottle, at the market) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imported Beer (0.33 liter bottle, at the market) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Imported Beer (0.33 liter bottle, at the market) (USD)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cigarettes 20 Pack (Marlboro) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cigarettes 20 Pack (Marlboro) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Cigarettes 20 Pack (Marlboro) (USD)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One-way Ticket (Local Transport) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[One-way Ticket (Local Transport) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>One-way Ticket (Local Transport) (USD)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly Pass (Regular Price) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Monthly Pass (Regular Price) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Monthly Pass (Regular Price) (USD)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Taxi Start (Normal Tariff) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Taxi Start (Normal Tariff) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Taxi Start (Normal Tariff) (USD)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Taxi 1km (Normal Tariff) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Taxi 1km (Normal Tariff) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Taxi 1km (Normal Tariff) (USD)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Taxi 1hour Waiting (Normal Tariff) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Taxi 1hour Waiting (Normal Tariff) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Taxi 1hour Waiting (Normal Tariff) (USD)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gasoline (1 liter) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gasoline (1 liter) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Gasoline (1 liter) (USD)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fitness Club, Monthly Fee for 1 Adult (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fitness Club, Monthly Fee for 1 Adult (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Fitness Club, Monthly Fee for 1 Adult (USD)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tennis Court Rent (1 Hour on Weekend) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tennis Court Rent (1 Hour on Weekend) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Tennis Court Rent (1 Hour on Weekend) (USD)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cinema, International Release, 1 Seat (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cinema, International Release, 1 Seat (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Cinema, International Release, 1 Seat (USD)</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Primary School, Yearly for 1 Child (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[International Primary School, Yearly for 1 Child (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>International Primary School, Yearly for 1 Child (USD)</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Pair of Jeans (Levis 501 Or Similar) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Pair of Jeans (Levis 501 Or Similar) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 Pair of Jeans (Levis 501 Or Similar) (USD)</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Pair of Nike Running Shoes (Mid-Range) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Pair of Nike Running Shoes (Mid-Range) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 Pair of Nike Running Shoes (Mid-Range) (USD)</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Pair of Men Leather Business Shoes (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Pair of Men Leather Business Shoes (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>1 Pair of Men Leather Business Shoes (USD)</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment (1 bedroom) in City Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment (1 bedroom) in City Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apartment (1 bedroom) in City Centre (USD)</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment (1 bedroom) Outside of Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment (1 bedroom) Outside of Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apartment (1 bedroom) Outside of Centre (USD)</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment (3 bedrooms) in City Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment (3 bedrooms) in City Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apartment (3 bedrooms) in City Centre (USD)</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apartment (3 bedrooms) Outside of Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apartment (3 bedrooms) Outside of Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Apartment (3 bedrooms) Outside of Centre (USD)</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price per Square Meter to Buy Apartment in City Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price per Square Meter to Buy Apartment in City Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Price per Square Meter to Buy Apartment in City Centre (USD)</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price per Square Meter to Buy Apartment Outside of Centre (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price per Square Meter to Buy Apartment Outside of Centre (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Price per Square Meter to Buy Apartment Outside of Centre (USD)</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Monthly Net Salary (After Tax) (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Monthly Net Salary (After Tax) (USD)]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Average Monthly Net Salary (After Tax) (USD)</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_quality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[data_quality]</local-name>
            <parent-name>[cost-of-living_v2]</parent-name>
            <remote-alias>data_quality</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' hidden='true' name='[1 Pair of Jeans (Levis 501 Or Similar) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[1 Pair of Men Leather Business Shoes (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[1 Pair of Nike Running Shoes (Mid-Range) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]&quot;' value='Average Monthly Net Salary' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]&quot;' value='Global Average' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]&quot;' value='Gasoline Cost (1L)' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]&quot;' value='Population' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;' value='City Centre Price' />
          <alias key='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]&quot;' value='Volkswagen Golf 1.4 ' />
        </aliases>
      </column>
      <column datatype='real' hidden='true' name='[Apartment (1 bedroom) Outside of Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apartment (1 bedroom) in City Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apartment (3 bedrooms) Outside of Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apartment (3 bedrooms) in City Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apples (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Banana (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Bottle of Wine (Mid-Range, at the market) (USD)]' role='measure' type='quantitative' />
      <column caption='Chosen Date' datatype='date' name='[Calculation_1667176289102503936]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='min([Date])' />
      </column>
      <column caption='Time to Earn 60mÂ² Apartment Net' datatype='real' name='[Calculation_313563126171381760]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='60*[Calculation_388153994950119424]/12' />
      </column>
      <column caption='Avg. Square Meter Globally' datatype='real' default-format='C1033%' name='[Calculation_313563126179033089]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED : AVG([Price per Square Meter to Buy Apartment in City Centre (USD)])}' />
      </column>
      <column caption='City&amp;Country' datatype='string' name='[Calculation_313563126192717826]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[city (cost-of-living!v2)] + &quot;, &quot; + [country (cost-of-living!v2)]' />
      </column>
      <column caption='City&amp;Country_weather' datatype='string' name='[Calculation_313563126193152003]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[city] + &quot;, &quot; + [country]' />
      </column>
      <column caption='City Center mÂ² / Monthly Income)/' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_388153994950119424]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Average Monthly Net Salary (After Tax) (USD)] &gt; 0 THEN&#13;&#10;    [Price per Square Meter to Buy Apartment in City Centre (USD)] / [Average Monthly Net Salary (After Tax) (USD)]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
      </column>
      <column caption='Estimated Monthly Rent (City Center)' datatype='real' hidden='true' name='[Calculation_388153994955808770]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Price per Square Meter to Buy Apartment in City Centre (USD)]*[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate])/12' />
      </column>
      <column caption='McMeals for Monthly Net Income' datatype='real' name='[Calculation_388153994957811715]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Average Monthly Net Salary (After Tax) (USD)]/[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
      </column>
      <column datatype='real' hidden='true' name='[Cappuccino (regular, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Chicken Fillets (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Cigarettes 20 Pack (Marlboro) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Cinema, International Release, 1 Seat (USD)]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[City ID (mapped!City)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[City ID]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='real' hidden='true' name='[Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Domestic Beer (0.5 liter bottle, at the market) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Domestic Beer (0.5 liter draught, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Eggs (regular) (12) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Fitness Club, Monthly Fee for 1 Adult (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Gasoline (1 liter) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Imported Beer (0.33 liter bottle, at the market) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Imported Beer (0.33 liter bottle, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[International Primary School, Yearly for 1 Child (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Lettuce (1 head) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Loaf of Fresh White Bread (500g) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Local Cheese (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Meal for 2 People, Mid-range Restaurant, Three-course (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Meal, Inexpensive Restaurant (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Milk (regular), (1 liter) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Monthly Pass (Regular Price) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[One-way Ticket (Local Transport) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Onion (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Oranges (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Potato (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Price per Square Meter to Buy Apartment Outside of Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Rice (white), (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Taxi 1hour Waiting (Normal Tariff) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Taxi 1km (Normal Tariff) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Taxi Start (Normal Tariff) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Temperature (C*)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Tennis Court Rent (1 Hour on Weekend) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Tomato (1kg) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Water (0.33 liter bottle, in restaurants) (USD)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Water (1.5 liter bottle, at the market) (USD)]' role='measure' type='quantitative' />
      <column caption='cost_of_living' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]' role='measure' type='quantitative' />
      <column caption='mapped_City' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[mapped!City_B1DA842372674938AE1D0951180381F5]' role='measure' type='quantitative' />
      <column caption='weather_data' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[weather!data_78E86BE0619549388DFACE3ACF90BCC6]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[admin_name]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[capital]' role='dimension' type='nominal' />
      <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[city_ascii]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[data_quality]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[iso2]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[iso3]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' hidden='true' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='real' hidden='true' name='[lng]' role='measure' type='quantitative' />
      <column datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='Sum' name='[sum:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' derivation='Sum' name='[sum:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_313563126171381760]' derivation='Sum' name='[sum:Calculation_313563126171381760:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_313563126179033089]' derivation='Sum' name='[sum:Calculation_313563126179033089:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_388153994950119424]' derivation='Sum' name='[sum:Calculation_388153994950119424:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_388153994957811715]' derivation='Sum' name='[sum:Calculation_388153994957811715:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Chicken Fillets (1kg) (USD)]' derivation='Sum' name='[sum:Chicken Fillets (1kg) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gasoline (1 liter) (USD)]' derivation='Sum' name='[sum:Gasoline (1 liter) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' derivation='Sum' name='[sum:McMeal at McDonalds (or Equivalent Combo Meal) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Meal, Inexpensive Restaurant (USD)]' derivation='Sum' name='[sum:Meal, Inexpensive Restaurant (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='Sum' name='[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temperature (C*)]' derivation='Sum' name='[sum:Temperature (C*):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' derivation='Sum' name='[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <group caption='Action (city (cost-of-living!v2))' hidden='true' name='[Action (city (cost-of-living!v2))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (cost-of-living!v2)]' />
        </groupfilter>
      </group>
      <group caption='Action (city (cost-of-living!v2),country (cost-of-living!v2))' hidden='true' name='[Action (city (cost-of-living!v2),country (cost-of-living!v2))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (cost-of-living!v2)]' />
          <groupfilter function='level-members' level='[country (cost-of-living!v2)]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/MATEUSZ/AppData/Local/Temp/TableauTemp/#TableauTemp_0xo78zd0cybix118ujki30ub2cko.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/24/2025 09:57:43 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='weather!data_78E86BE0619549388DFACE3ACF90BCC6' table='[Extract].[weather!data_78E86BE0619549388DFACE3ACF90BCC6]' type='table' />
            <relation name='mapped!City_B1DA842372674938AE1D0951180381F5' table='[Extract].[mapped!City_B1DA842372674938AE1D0951180381F5]' type='table' />
            <relation name='cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4' table='[Extract].[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]' type='table' />
          </relation>
          <cols>
            <map key='[Average Monthly Net Salary (After Tax) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Average Monthly Net Salary (After Tax) (USD)]' />
            <map key='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' />
            <map key='[Chicken Fillets (1kg) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Chicken Fillets (1kg) (USD)]' />
            <map key='[City ID (mapped!City)]' value='[mapped!City_B1DA842372674938AE1D0951180381F5].[City ID]' />
            <map key='[City ID]' value='[weather!data_78E86BE0619549388DFACE3ACF90BCC6].[City ID]' />
            <map key='[Date]' value='[weather!data_78E86BE0619549388DFACE3ACF90BCC6].[Date]' />
            <map key='[Gasoline (1 liter) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Gasoline (1 liter) (USD)]' />
            <map key='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
            <map key='[Meal, Inexpensive Restaurant (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Meal, Inexpensive Restaurant (USD)]' />
            <map key='[Price per Square Meter to Buy Apartment in City Centre (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Price per Square Meter to Buy Apartment in City Centre (USD)]' />
            <map key='[Temperature (C*)]' value='[weather!data_78E86BE0619549388DFACE3ACF90BCC6].[Temperature (C*)]' />
            <map key='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' />
            <map key='[city (cost-of-living!v2)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[city]' />
            <map key='[city]' value='[mapped!City_B1DA842372674938AE1D0951180381F5].[city]' />
            <map key='[country (cost-of-living!v2)]' value='[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4].[country]' />
            <map key='[country]' value='[mapped!City_B1DA842372674938AE1D0951180381F5].[country]' />
            <map key='[population]' value='[mapped!City_B1DA842372674938AE1D0951180381F5].[population]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>weather_data</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1465</approx-count>
              <contains-null>true</contains-null>
              <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City ID]</local-name>
              <parent-name>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</parent-name>
              <remote-alias>City ID</remote-alias>
              <ordinal>1</ordinal>
              <family>weather_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1457</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temperature (C*)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Temperature (C*)]</local-name>
              <parent-name>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</parent-name>
              <remote-alias>Temperature (C*)</remote-alias>
              <ordinal>2</ordinal>
              <family>weather_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18309</approx-count>
              <contains-null>true</contains-null>
              <object-id>[weather!data_78E86BE0619549388DFACE3ACF90BCC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City ID (mapped!City)]</local-name>
              <parent-name>[mapped!City_B1DA842372674938AE1D0951180381F5]</parent-name>
              <remote-alias>City ID</remote-alias>
              <ordinal>3</ordinal>
              <family>mapped_City</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1000</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[mapped!City_B1DA842372674938AE1D0951180381F5]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>4</ordinal>
              <family>mapped_City</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>990</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[mapped!City_B1DA842372674938AE1D0951180381F5]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>5</ordinal>
              <family>mapped_City</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[mapped!City_B1DA842372674938AE1D0951180381F5]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>6</ordinal>
              <family>mapped_City</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>900</approx-count>
              <contains-null>true</contains-null>
              <object-id>[mapped!City_B1DA842372674938AE1D0951180381F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city (cost-of-living!v2)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>7</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4636</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country (cost-of-living!v2)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>8</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>188</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPL_RPL' />
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Meal, Inexpensive Restaurant (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Meal, Inexpensive Restaurant (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Meal, Inexpensive Restaurant (USD)</remote-alias>
              <ordinal>9</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>667</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>McMeal at McDonalds (or Equivalent Combo Meal) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>McMeal at McDonalds (or Equivalent Combo Meal) (USD)</remote-alias>
              <ordinal>10</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>616</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Chicken Fillets (1kg) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Chicken Fillets (1kg) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Chicken Fillets (1kg) (USD)</remote-alias>
              <ordinal>11</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>954</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gasoline (1 liter) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Gasoline (1 liter) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Gasoline (1 liter) (USD)</remote-alias>
              <ordinal>12</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)</remote-alias>
              <ordinal>13</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1031</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)</remote-alias>
              <ordinal>14</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1756</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price per Square Meter to Buy Apartment in City Centre (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Price per Square Meter to Buy Apartment in City Centre (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Price per Square Meter to Buy Apartment in City Centre (USD)</remote-alias>
              <ordinal>15</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1229</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Monthly Net Salary (After Tax) (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Monthly Net Salary (After Tax) (USD)]</local-name>
              <parent-name>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</parent-name>
              <remote-alias>Average Monthly Net Salary (After Tax) (USD)</remote-alias>
              <ordinal>16</ordinal>
              <family>cost-of-living_v2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1705</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126171381760:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Meal, Inexpensive Restaurant (USD):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:McMeal at McDonalds (or Equivalent Combo Meal) (USD):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Chicken Fillets (1kg) (USD):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Poland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='city (cost-of-living!v2)' />
        <field-sort-custom-order field='country (cost-of-living!v2)' />
        <field-sort-custom-order field='Calculation_313563126192717826' />
        <field-sort-custom-order field='Meal, Inexpensive Restaurant (USD)' />
        <field-sort-custom-order field='Meal for 2 People, Mid-range Restaurant, Three-course (USD)' />
        <field-sort-custom-order field='McMeal at McDonalds (or Equivalent Combo Meal) (USD)' />
        <field-sort-custom-order field='Domestic Beer (0.5 liter draught, in restaurants) (USD)' />
        <field-sort-custom-order field='Imported Beer (0.33 liter bottle, in restaurants) (USD)' />
        <field-sort-custom-order field='Cappuccino (regular, in restaurants) (USD)' />
        <field-sort-custom-order field='Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)' />
        <field-sort-custom-order field='Water (0.33 liter bottle, in restaurants) (USD)' />
        <field-sort-custom-order field='Milk (regular), (1 liter) (USD)' />
        <field-sort-custom-order field='Loaf of Fresh White Bread (500g) (USD)' />
        <field-sort-custom-order field='Rice (white), (1kg) (USD)' />
        <field-sort-custom-order field='Eggs (regular) (12) (USD)' />
        <field-sort-custom-order field='Local Cheese (1kg) (USD)' />
        <field-sort-custom-order field='Chicken Fillets (1kg) (USD)' />
        <field-sort-custom-order field='Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)' />
        <field-sort-custom-order field='Apples (1kg) (USD)' />
        <field-sort-custom-order field='Banana (1kg) (USD)' />
        <field-sort-custom-order field='Oranges (1kg) (USD)' />
        <field-sort-custom-order field='Tomato (1kg) (USD)' />
        <field-sort-custom-order field='Potato (1kg) (USD)' />
        <field-sort-custom-order field='Onion (1kg) (USD)' />
        <field-sort-custom-order field='Lettuce (1 head) (USD)' />
        <field-sort-custom-order field='Water (1.5 liter bottle, at the market) (USD)' />
        <field-sort-custom-order field='Bottle of Wine (Mid-Range, at the market) (USD)' />
        <field-sort-custom-order field='Domestic Beer (0.5 liter bottle, at the market) (USD)' />
        <field-sort-custom-order field='Imported Beer (0.33 liter bottle, at the market) (USD)' />
        <field-sort-custom-order field='Cigarettes 20 Pack (Marlboro) (USD)' />
        <field-sort-custom-order field='One-way Ticket (Local Transport) (USD)' />
        <field-sort-custom-order field='Monthly Pass (Regular Price) (USD)' />
        <field-sort-custom-order field='Taxi Start (Normal Tariff) (USD)' />
        <field-sort-custom-order field='Taxi 1km (Normal Tariff) (USD)' />
        <field-sort-custom-order field='Taxi 1hour Waiting (Normal Tariff) (USD)' />
        <field-sort-custom-order field='Gasoline (1 liter) (USD)' />
        <field-sort-custom-order field='Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)' />
        <field-sort-custom-order field='Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)' />
        <field-sort-custom-order field='Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)' />
        <field-sort-custom-order field='1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)' />
        <field-sort-custom-order field='Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)' />
        <field-sort-custom-order field='Fitness Club, Monthly Fee for 1 Adult (USD)' />
        <field-sort-custom-order field='Tennis Court Rent (1 Hour on Weekend) (USD)' />
        <field-sort-custom-order field='Cinema, International Release, 1 Seat (USD)' />
        <field-sort-custom-order field='Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)' />
        <field-sort-custom-order field='International Primary School, Yearly for 1 Child (USD)' />
        <field-sort-custom-order field='1 Pair of Jeans (Levis 501 Or Similar) (USD)' />
        <field-sort-custom-order field='1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)' />
        <field-sort-custom-order field='1 Pair of Nike Running Shoes (Mid-Range) (USD)' />
        <field-sort-custom-order field='1 Pair of Men Leather Business Shoes (USD)' />
        <field-sort-custom-order field='Apartment (1 bedroom) in City Centre (USD)' />
        <field-sort-custom-order field='Apartment (1 bedroom) Outside of Centre (USD)' />
        <field-sort-custom-order field='Apartment (3 bedrooms) in City Centre (USD)' />
        <field-sort-custom-order field='Apartment (3 bedrooms) Outside of Centre (USD)' />
        <field-sort-custom-order field='Price per Square Meter to Buy Apartment in City Centre (USD)' />
        <field-sort-custom-order field='Price per Square Meter to Buy Apartment Outside of Centre (USD)' />
        <field-sort-custom-order field='Average Monthly Net Salary (After Tax) (USD)' />
        <field-sort-custom-order field='Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate' />
        <field-sort-custom-order field='data_quality' />
        <field-sort-custom-order field='Calculation_313563126171381760' />
        <field-sort-custom-order field='Calculation_388153994950119424' />
        <field-sort-custom-order field='Calculation_388153994955808770' />
        <field-sort-custom-order field='Calculation_388153994957811715' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='cost_of_living' id='cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4'>
            <properties context=''>
              <relation connection='excel-direct.16ixxtn0o6z9i31gcgx9v1bibrod' name='cost-of-living_v2' table='[&apos;cost-of-living_v2$&apos;]' type='table'>
                <columns gridOrigin='A1:BF4957:no:A1:BF4957:0' header='yes' outcome='6'>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='real' name='Meal, Inexpensive Restaurant (USD)' ordinal='2' />
                  <column datatype='real' name='Meal for 2 People, Mid-range Restaurant, Three-course (USD)' ordinal='3' />
                  <column datatype='real' name='McMeal at McDonalds (or Equivalent Combo Meal) (USD)' ordinal='4' />
                  <column datatype='real' name='Domestic Beer (0.5 liter draught, in restaurants) (USD)' ordinal='5' />
                  <column datatype='real' name='Imported Beer (0.33 liter bottle, in restaurants) (USD)' ordinal='6' />
                  <column datatype='real' name='Cappuccino (regular, in restaurants) (USD)' ordinal='7' />
                  <column datatype='real' name='Coke/Pepsi (0.33 liter bottle, in restaurants) (USD)' ordinal='8' />
                  <column datatype='real' name='Water (0.33 liter bottle, in restaurants) (USD)' ordinal='9' />
                  <column datatype='real' name='Milk (regular), (1 liter) (USD)' ordinal='10' />
                  <column datatype='real' name='Loaf of Fresh White Bread (500g) (USD)' ordinal='11' />
                  <column datatype='real' name='Rice (white), (1kg) (USD)' ordinal='12' />
                  <column datatype='real' name='Eggs (regular) (12) (USD)' ordinal='13' />
                  <column datatype='real' name='Local Cheese (1kg) (USD)' ordinal='14' />
                  <column datatype='real' name='Chicken Fillets (1kg) (USD)' ordinal='15' />
                  <column datatype='real' name='Beef Round (1kg) (or Equivalent Back Leg Red Meat) (USD)' ordinal='16' />
                  <column datatype='real' name='Apples (1kg) (USD)' ordinal='17' />
                  <column datatype='real' name='Banana (1kg) (USD)' ordinal='18' />
                  <column datatype='real' name='Oranges (1kg) (USD)' ordinal='19' />
                  <column datatype='real' name='Tomato (1kg) (USD)' ordinal='20' />
                  <column datatype='real' name='Potato (1kg) (USD)' ordinal='21' />
                  <column datatype='real' name='Onion (1kg) (USD)' ordinal='22' />
                  <column datatype='real' name='Lettuce (1 head) (USD)' ordinal='23' />
                  <column datatype='real' name='Water (1.5 liter bottle, at the market) (USD)' ordinal='24' />
                  <column datatype='real' name='Bottle of Wine (Mid-Range, at the market) (USD)' ordinal='25' />
                  <column datatype='real' name='Domestic Beer (0.5 liter bottle, at the market) (USD)' ordinal='26' />
                  <column datatype='real' name='Imported Beer (0.33 liter bottle, at the market) (USD)' ordinal='27' />
                  <column datatype='real' name='Cigarettes 20 Pack (Marlboro) (USD)' ordinal='28' />
                  <column datatype='real' name='One-way Ticket (Local Transport) (USD)' ordinal='29' />
                  <column datatype='real' name='Monthly Pass (Regular Price) (USD)' ordinal='30' />
                  <column datatype='real' name='Taxi Start (Normal Tariff) (USD)' ordinal='31' />
                  <column datatype='real' name='Taxi 1km (Normal Tariff) (USD)' ordinal='32' />
                  <column datatype='real' name='Taxi 1hour Waiting (Normal Tariff) (USD)' ordinal='33' />
                  <column datatype='real' name='Gasoline (1 liter) (USD)' ordinal='34' />
                  <column datatype='real' name='Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)' ordinal='35' />
                  <column datatype='real' name='Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car) (USD)' ordinal='36' />
                  <column datatype='real' name='Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)' ordinal='37' />
                  <column datatype='real' name='1 min. of Prepaid Mobile Tariff Local (No Discounts or Plans) (USD)' ordinal='38' />
                  <column datatype='real' name='Internet (60 Mbps or More, Unlimited Data, Cable/ADSL) (USD)' ordinal='39' />
                  <column datatype='real' name='Fitness Club, Monthly Fee for 1 Adult (USD)' ordinal='40' />
                  <column datatype='real' name='Tennis Court Rent (1 Hour on Weekend) (USD)' ordinal='41' />
                  <column datatype='real' name='Cinema, International Release, 1 Seat (USD)' ordinal='42' />
                  <column datatype='real' name='Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child (USD)' ordinal='43' />
                  <column datatype='real' name='International Primary School, Yearly for 1 Child (USD)' ordinal='44' />
                  <column datatype='real' name='1 Pair of Jeans (Levis 501 Or Similar) (USD)' ordinal='45' />
                  <column datatype='real' name='1 Summer Dress in a Chain Store (Zara, H&amp;M, â€¦) (USD)' ordinal='46' />
                  <column datatype='real' name='1 Pair of Nike Running Shoes (Mid-Range) (USD)' ordinal='47' />
                  <column datatype='real' name='1 Pair of Men Leather Business Shoes (USD)' ordinal='48' />
                  <column datatype='real' name='Apartment (1 bedroom) in City Centre (USD)' ordinal='49' />
                  <column datatype='real' name='Apartment (1 bedroom) Outside of Centre (USD)' ordinal='50' />
                  <column datatype='real' name='Apartment (3 bedrooms) in City Centre (USD)' ordinal='51' />
                  <column datatype='real' name='Apartment (3 bedrooms) Outside of Centre (USD)' ordinal='52' />
                  <column datatype='real' name='Price per Square Meter to Buy Apartment in City Centre (USD)' ordinal='53' />
                  <column datatype='real' name='Price per Square Meter to Buy Apartment Outside of Centre (USD)' ordinal='54' />
                  <column datatype='real' name='Average Monthly Net Salary (After Tax) (USD)' ordinal='55' />
                  <column datatype='real' name='Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate' ordinal='56' />
                  <column datatype='integer' name='data_quality' ordinal='57' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4' table='[Extract].[cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4]' type='table' />
            </properties>
          </object>
          <object caption='mapped_City' id='mapped!City_B1DA842372674938AE1D0951180381F5'>
            <properties context=''>
              <relation connection='excel-direct.0gpe1hi1kl4hok1c7zj7q0kdo56n' name='mapped_City' table='[mapped_City$]' type='table'>
                <columns gridOrigin='A1:K1001:no:A1:K1001:0' header='yes' outcome='2'>
                  <column datatype='string' name='City ID' ordinal='0' />
                  <column datatype='string' name='city' ordinal='1' />
                  <column datatype='string' name='city_ascii' ordinal='2' />
                  <column datatype='real' name='lat' ordinal='3' />
                  <column datatype='real' name='lng' ordinal='4' />
                  <column datatype='string' name='country' ordinal='5' />
                  <column datatype='string' name='iso2' ordinal='6' />
                  <column datatype='string' name='iso3' ordinal='7' />
                  <column datatype='string' name='admin_name' ordinal='8' />
                  <column datatype='string' name='capital' ordinal='9' />
                  <column datatype='integer' name='population' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='mapped!City_B1DA842372674938AE1D0951180381F5' table='[Extract].[mapped!City_B1DA842372674938AE1D0951180381F5]' type='table' />
            </properties>
          </object>
          <object caption='weather_data' id='weather!data_78E86BE0619549388DFACE3ACF90BCC6'>
            <properties context=''>
              <relation connection='excel-direct.1ov0foy0fb2fo713vw3ln0ror18p' name='weather_data' table='[weather_data$]' type='table'>
                <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='2'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='City ID' ordinal='1' />
                  <column datatype='real' name='Temperature (C*)' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='weather!data_78E86BE0619549388DFACE3ACF90BCC6' table='[Extract].[weather!data_78E86BE0619549388DFACE3ACF90BCC6]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[city]' />
              <expression op='[city (cost-of-living!v2)]' />
            </expression>
            <first-end-point object-id='mapped!City_B1DA842372674938AE1D0951180381F5' />
            <second-end-point object-id='cost-of-living!v2_64011B72966A4E34B2D6BD953F6C64E4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[City ID]' />
              <expression op='[City ID (mapped!City)]' />
            </expression>
            <first-end-point object-id='weather!data_78E86BE0619549388DFACE3ACF90BCC6' />
            <second-end-point object-id='mapped!City_B1DA842372674938AE1D0951180381F5' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Map to KPI Board' name='[Action1_9D4CF5713080478AA4FAED77D9E976FA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <link caption='Map to KPI Board' delimiter=',' escape='\' expression='tsl:Dashboard%202?%5Bfederated.0ozwx0m1oqiyhn15e4as60gmjqda%5D.%5Bcity%20%28cost-of-living%21v2%29%5D~s0=&lt;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[city]~na&gt;&amp;%5Bfederated.0ozwx0m1oqiyhn15e4as60gmjqda%5D.%5Bcountry%20%28cost-of-living%21v2%29%5D~s0=&lt;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[country]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='on-empty' value='none' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <datasources>
      <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
    </datasources>
    <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
      <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Country Income Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
            <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='Avg' name='[avg:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='None' name='[none:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]' field-type='quantitative' max='11688770.211016156' min='-3761883.4405220263' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]' field-type='quantitative' max='9728209.5200120881' min='-3914587.1326266937' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' value='C1033%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' palette='red_blue_white_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Regular' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' id='legend-color' value='#ffffff' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' id='legend-color' value='#ffffff' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' value='Avg. Monthly Net Salary'>
              <formatted-text>
                <run>Avg. Monthly Net Salary</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' />
              <text column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' />
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' />
              <geometry column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Avg. Monthly Net Salary :&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{83C9CC5B-2976-40A0-A17F-82F398C69FEE}' />
    </worksheet>
    <worksheet name='KPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b'>&lt;Sheet Name&gt; for &lt;</run>
            <run bold='true' fontcolor='#1b1b1b'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[city (cost-of-living!v2)]</run>
            <run bold='true' fontcolor='#1b1b1b'>&gt;, &lt;</run>
            <run bold='true' fontcolor='#1b1b1b'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</run>
            <run bold='true' fontcolor='#1b1b1b'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
            <column caption='Time to Earn 60mÂ² Apartment Net' datatype='real' name='[Calculation_313563126171381760]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='60*[Calculation_388153994950119424]/12' />
            </column>
            <column caption='City&amp;Country' datatype='string' name='[Calculation_313563126192717826]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[city (cost-of-living!v2)] + &quot;, &quot; + [country (cost-of-living!v2)]' />
            </column>
            <column caption='City Center mÂ² / Monthly Income)/' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_388153994950119424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Average Monthly Net Salary (After Tax) (USD)] &gt; 0 THEN&#13;&#10;    [Price per Square Meter to Buy Apartment in City Centre (USD)] / [Average Monthly Net Salary (After Tax) (USD)]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
            </column>
            <column caption='McMeals for Monthly Net Income' datatype='real' name='[Calculation_388153994957811715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Average Monthly Net Salary (After Tax) (USD)]/[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
            </column>
            <column datatype='real' name='[Gasoline (1 liter) (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' role='measure' type='quantitative' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_313563126192717826]' derivation='None' name='[none:Calculation_313563126192717826:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='None' name='[none:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='None' name='[none:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='Sum' name='[sum:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_313563126171381760]' derivation='Sum' name='[sum:Calculation_313563126171381760:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388153994957811715]' derivation='Sum' name='[sum:Calculation_388153994957811715:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gasoline (1 liter) (USD)]' derivation='Sum' name='[sum:Gasoline (1 liter) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='Sum' name='[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD)]' derivation='Sum' name='[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126171381760:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126171381760:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9D4CF5713080478AA4FAED77D9E976FA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='empty-level' member='[city (cost-of-living!v2)]' />
              <groupfilter function='empty-level' member='[country (cost-of-living!v2)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:city (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' value='179' />
            <format attr='width' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='147' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='left' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Average Monthly Net Salary (After Tax) (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car) (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Gasoline (1 liter) (USD):qk]' value='C1033%' />
            <format attr='font-size' value='15' />
            <format attr='font-family' value='Tableau Medium' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126171381760:qk]' value='n0.00&quot; years&quot;;-0.00&quot; years&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' value='328' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='center' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='false' />
            <format attr='display' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' value='false' />
            <format attr='vertical-align' scope='cols' value='center' />
            <format attr='vertical-align' scope='rows' value='center' />
            <format attr='text-align' value='left' />
            <format attr='font-size' scope='rows' value='14' />
            <format attr='font-weight' scope='rows' value='normal' />
            <format attr='font-family' scope='rows' value='Tableau Light' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]' />
              <text column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Monthly McBudget:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'>~</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]> Meals]]></run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</cols>
      </table>
      <simple-id uuid='{8A4983C5-382A-4C2D-8FD8-94DF0DA77F2B}' />
    </worksheet>
    <worksheet name='Scatter Plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'><![CDATA[<Sheet Name> Apartment Affordability]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
            <column caption='City Center mÂ² / Monthly Income)/' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_388153994950119424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Average Monthly Net Salary (After Tax) (USD)] &gt; 0 THEN&#13;&#10;    [Price per Square Meter to Buy Apartment in City Centre (USD)] / [Average Monthly Net Salary (After Tax) (USD)]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='Attribute' name='[attr:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='Attribute' name='[attr:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='None' name='[none:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='None' name='[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='None' name='[none:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='None' name='[none:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_388153994950119424]' derivation='Sum' name='[sum:Calculation_388153994950119424:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:city (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:country (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='title' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Average Monthly Net Salary (After Tax) (USD):qk]' scope='cols' value='Average Monthly Net Salary' />
            <format attr='title' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' scope='rows' value='Price per Square Meter to Buy Apartment in City Centre' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Average Monthly Net Salary (After Tax) (USD):qk]' value='C1033%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='5.5683418079999996' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#333333' />
            <format attr='band-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#000000' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#5555554b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' />
              <size column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:city (cost-of-living!v2):nk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country (cost-of-living!v2):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Average Monthly Net Salary:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Average Monthly Net Salary (After Tax) (USD):qk]> ]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Price per Square Meter to Buy Apartment in City Centre:	</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]> ]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:city (cost-of-living!v2):nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country (cost-of-living!v2):nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>City Center mÂ² / Monthly Income:	</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='1.4172928333282471' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Price per Square Meter to Buy Apartment in City Centre (USD):qk]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Average Monthly Net Salary (After Tax) (USD):qk]</cols>
      </table>
      <simple-id uuid='{70E89193-1CFA-49C4-808B-A8C55147A1CA}' />
    </worksheet>
    <worksheet name='Square Meter Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column caption='Avg. Square Meter Globally' datatype='real' default-format='C1033%' name='[Calculation_313563126179033089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED : AVG([Price per Square Meter to Buy Apartment in City Centre (USD)])}' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='Attribute' name='[attr:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='None' name='[none:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_313563126179033089]' derivation='Sum' name='[sum:Calculation_313563126179033089:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='Sum' name='[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9D4CF5713080478AA4FAED77D9E976FA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='empty-level' member='[city (cost-of-living!v2)]' />
              <groupfilter function='empty-level' member='[country (cost-of-living!v2)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:city (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' scope='rows' value='mÂ² Price ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' value='C1045%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='#1b1b1b' />
            <format attr='font-weight' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='bold' />
            <format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' value='#333333' />
            <format attr='text-orientation' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' value='C1033%' />
            <format attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country (cost-of-living!v2):nk]' />
            </encodings>
            <reference-line axis-column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline0' label-type='automatic' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country (cost-of-living!v2):nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>City Centre mÂ² Price :&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Price per Square Meter to Buy Apartment in City Centre (USD):qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Global mÂ² Average:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_313563126179033089:qk]>]]></run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Multiple Values]</rows>
        <cols>([federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk] / [federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{EF214CCB-2255-4724-A79E-7D45DB3FB394}' />
    </worksheet>
    <worksheet name='Static Weather Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; for &lt;</run>
            <run bold='true'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='real' name='[Average Monthly Net Salary (After Tax) (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' role='measure' type='quantitative' />
            <column caption='Chosen Date' datatype='date' name='[Calculation_1667176289102503936]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='min([Date])' />
            </column>
            <column caption='City&amp;Country' datatype='string' name='[Calculation_313563126192717826]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[city (cost-of-living!v2)] + &quot;, &quot; + [country (cost-of-living!v2)]' />
            </column>
            <column caption='City Center mÂ² / Monthly Income)/' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_388153994950119424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Average Monthly Net Salary (After Tax) (USD)] &gt; 0 THEN&#13;&#10;    [Price per Square Meter to Buy Apartment in City Centre (USD)] / [Average Monthly Net Salary (After Tax) (USD)]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
            </column>
            <column caption='McMeals for Monthly Net Income' datatype='real' name='[Calculation_388153994957811715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Average Monthly Net Salary (After Tax) (USD)]/[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' />
            </column>
            <column datatype='real' name='[Chicken Fillets (1kg) (USD)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[McMeal at McDonalds (or Equivalent Combo Meal) (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Meal, Inexpensive Restaurant (USD)]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Price per Square Meter to Buy Apartment in City Centre (USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Temperature (C*)]' role='measure' type='quantitative' />
            <column-instance column='[Average Monthly Net Salary (After Tax) (USD)]' derivation='Avg' name='[avg:Average Monthly Net Salary (After Tax) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD)]' derivation='Avg' name='[avg:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Chicken Fillets (1kg) (USD)]' derivation='Avg' name='[avg:Chicken Fillets (1kg) (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Meal, Inexpensive Restaurant (USD)]' derivation='Avg' name='[avg:Meal, Inexpensive Restaurant (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price per Square Meter to Buy Apartment in City Centre (USD)]' derivation='Avg' name='[avg:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temperature (C*)]' derivation='Avg' name='[avg:Temperature (C*):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_313563126192717826]' derivation='None' name='[none:Calculation_313563126192717826:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_388153994950119424]' derivation='Sum' name='[sum:Calculation_388153994950119424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388153994957811715]' derivation='Sum' name='[sum:Calculation_388153994957811715:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1667176289102503936]' derivation='User' name='[usr:Calculation_1667176289102503936:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-01#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]' field-type='quantitative' max='19779028.88178299' min='-14134125.730647068' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]' field-type='quantitative' max='16570200.842953231' min='-12532296.156321129' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-street-low' value='false' />
            <format attr='enabled' id='tunnel-street_limited-low' value='false' />
            <format attr='enabled' id='tunnel-track-case' value='false' />
            <format attr='enabled' id='tunnel-service-link-case' value='false' />
            <format attr='enabled' id='tunnel-street_limited-case' value='false' />
            <format attr='enabled' id='tunnel-street-case' value='false' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='tunnel-primary-case' value='false' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='false' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='false' />
            <format attr='enabled' id='tunnel-trunk-case' value='false' />
            <format attr='enabled' id='tunnel-motorway-case' value='false' />
            <format attr='enabled' id='tunnel-construction' value='false' />
            <format attr='enabled' id='tunnel-path' value='false' />
            <format attr='enabled' id='tunnel-cycleway-piste' value='false' />
            <format attr='enabled' id='tunnel-steps' value='false' />
            <format attr='enabled' id='tunnel-trunk_link' value='false' />
            <format attr='enabled' id='tunnel-motorway_link' value='false' />
            <format attr='enabled' id='tunnel-pedestrian' value='false' />
            <format attr='enabled' id='tunnel-track' value='false' />
            <format attr='enabled' id='tunnel-service-link' value='false' />
            <format attr='enabled' id='tunnel-street_limited' value='false' />
            <format attr='enabled' id='tunnel-street' value='false' />
            <format attr='enabled' id='tunnel-secondary-tertiary' value='false' />
            <format attr='enabled' id='tunnel-primary' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='tunnel-trunk' value='false' />
            <format attr='enabled' id='tunnel-motorway' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-white' value='false' />
            <format attr='enabled' id='ferry' value='false' />
            <format attr='enabled' id='ferry-auto' value='false' />
            <format attr='enabled' id='road-path-bg' value='false' />
            <format attr='enabled' id='road-piste-bg' value='false' />
            <format attr='enabled' id='road-sidewalk-corridor-bg' value='false' />
            <format attr='enabled' id='road-steps-bg' value='false' />
            <format attr='enabled' id='road-pedestrian-case' value='false' />
            <format attr='enabled' id='road-street-low' value='false' />
            <format attr='enabled' id='road-street_limited-low' value='false' />
            <format attr='enabled' id='road-track-case' value='false' />
            <format attr='enabled' id='road-service-link-case' value='false' />
            <format attr='enabled' id='road-street_limited-case' value='false' />
            <format attr='enabled' id='road-street-case' value='false' />
            <format attr='enabled' id='road-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='road-primary-case' value='false' />
            <format attr='enabled' id='road-motorway_link-case' value='false' />
            <format attr='enabled' id='road-trunk_link-case' value='false' />
            <format attr='enabled' id='road-trunk-case' value='false' />
            <format attr='enabled' id='road-motorway-case' value='false' />
            <format attr='enabled' id='road-construction' value='false' />
            <format attr='enabled' id='road-sidewalk-corridor' value='false' />
            <format attr='enabled' id='road-path-smooth' value='false' />
            <format attr='enabled' id='road-path-rough' value='false' />
            <format attr='enabled' id='road-cycleway-piste' value='false' />
            <format attr='enabled' id='road-steps' value='false' />
            <format attr='enabled' id='road-trunk_link' value='false' />
            <format attr='enabled' id='road-motorway_link' value='false' />
            <format attr='enabled' id='road-pedestrian' value='false' />
            <format attr='enabled' id='road-pedestrian-polygon-fill' value='false' />
            <format attr='enabled' id='road-pedestrian-polygon-pattern' value='false' />
            <format attr='enabled' id='road-polygon' value='false' />
            <format attr='enabled' id='road-track' value='false' />
            <format attr='enabled' id='road-service-link' value='false' />
            <format attr='enabled' id='road-street_limited' value='false' />
            <format attr='enabled' id='road-street' value='false' />
            <format attr='enabled' id='road-secondary-tertiary' value='false' />
            <format attr='enabled' id='road-primary' value='false' />
            <format attr='enabled' id='road-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='road-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='road-trunk' value='false' />
            <format attr='enabled' id='road-motorway' value='false' />
            <format attr='enabled' id='road-rail' value='false' />
            <format attr='enabled' id='road-rail-tracks' value='false' />
            <format attr='enabled' id='level-crossing' value='false' />
            <format attr='enabled' id='road-oneway-arrows-white' value='false' />
            <format attr='enabled' id='bridge-path-bg' value='false' />
            <format attr='enabled' id='bridge-piste-bg' value='false' />
            <format attr='enabled' id='bridge-steps-bg' value='false' />
            <format attr='enabled' id='bridge-pedestrian-case' value='false' />
            <format attr='enabled' id='bridge-street-low' value='false' />
            <format attr='enabled' id='bridge-street_limited-low' value='false' />
            <format attr='enabled' id='bridge-track-case' value='false' />
            <format attr='enabled' id='bridge-service-link-case' value='false' />
            <format attr='enabled' id='bridge-street_limited-case' value='false' />
            <format attr='enabled' id='bridge-street-case' value='false' />
            <format attr='enabled' id='bridge-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='bridge-primary-case' value='false' />
            <format attr='enabled' id='bridge-trunk_link-case' value='false' />
            <format attr='enabled' id='bridge-motorway_link-case' value='false' />
            <format attr='enabled' id='bridge-trunk-case' value='false' />
            <format attr='enabled' id='bridge-motorway-case' value='false' />
            <format attr='enabled' id='bridge-construction' value='false' />
            <format attr='enabled' id='bridge-path' value='false' />
            <format attr='enabled' id='bridge-cycleway-piste' value='false' />
            <format attr='enabled' id='bridge-steps' value='false' />
            <format attr='enabled' id='bridge-trunk_link' value='false' />
            <format attr='enabled' id='bridge-motorway_link' value='false' />
            <format attr='enabled' id='bridge-pedestrian' value='false' />
            <format attr='enabled' id='bridge-track' value='false' />
            <format attr='enabled' id='bridge-service-link' value='false' />
            <format attr='enabled' id='bridge-street_limited' value='false' />
            <format attr='enabled' id='bridge-street' value='false' />
            <format attr='enabled' id='bridge-secondary-tertiary' value='false' />
            <format attr='enabled' id='bridge-primary' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='bridge-trunk' value='false' />
            <format attr='enabled' id='bridge-motorway' value='false' />
            <format attr='enabled' id='bridge-rail' value='false' />
            <format attr='enabled' id='bridge-rail-tracks' value='false' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='false' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='false' />
            <format attr='enabled' id='bridge-trunk-2-case' value='false' />
            <format attr='enabled' id='bridge-motorway-2-case' value='false' />
            <format attr='enabled' id='bridge-trunk_link-2' value='false' />
            <format attr='enabled' id='bridge-motorway_link-2' value='false' />
            <format attr='enabled' id='bridge-trunk-2' value='false' />
            <format attr='enabled' id='bridge-motorway-2' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-white' value='false' />
            <format attr='enabled' id='road-label-small' value='false' />
            <format attr='enabled' id='road-label-medium' value='false' />
            <format attr='enabled' id='road-label-large' value='false' />
            <format attr='enabled' id='road-shields-black' value='false' />
            <format attr='enabled' id='road-shields-white' value='false' />
            <format attr='enabled' id='motorway-junction' value='false' />
            <format attr='enabled' id='place-residential' value='false' />
            <format attr='enabled' id='place-neighbourhood' value='false' />
            <format attr='enabled' id='place-suburb' value='false' />
            <format attr='enabled' id='rail-label' value='false' />
            <format attr='enabled' id='building-line' value='false' />
            <format attr='enabled' id='building' value='false' />
            <format attr='enabled' id='housenum-label' value='false' />
            <format attr='enabled' id='poi-relevant-scalerank4-l15' value='false' />
            <format attr='enabled' id='poi-relevant-scalerank4-l1' value='false' />
            <format attr='enabled' id='poi-parks_scalerank4' value='false' />
            <format attr='enabled' id='poi-scalerank3' value='false' />
            <format attr='enabled' id='poi-parks-scalerank3' value='false' />
            <format attr='enabled' id='poi-outdoor-features' value='false' />
            <format attr='enabled' id='poi-outdoor-features-2' value='false' />
            <format attr='enabled' id='mountain-peak-label' value='false' />
            <format attr='enabled' id='mountain-peak-label-with-elevation' value='false' />
            <format attr='enabled' id='poi-scalerank2' value='false' />
            <format attr='enabled' id='poi-parks-scalerank2' value='false' />
            <format attr='enabled' id='poi-parks-scalerank1' value='false' />
            <format attr='enabled' id='poi-scalerank1' value='false' />
            <format attr='enabled' id='airport-label' value='false' />
            <format attr='enabled' id='place-hamlet' value='false' />
            <format attr='enabled' id='place-village' value='false' />
            <format attr='enabled' id='place-town' value='false' />
            <format attr='enabled' id='place-city-sm' value='false' />
            <format attr='enabled' id='place-islet-archipelago-aboriginal' value='false' />
            <format attr='enabled' id='place-islet-archipelago-aboriginal-2' value='false' />
            <format attr='enabled' id='place-city-md-s' value='false' />
            <format attr='enabled' id='place-city-md-n' value='false' />
            <format attr='enabled' id='place-city-lg-s' value='false' />
            <format attr='enabled' id='place-city-lg-n' value='false' />
            <format attr='enabled' id='place-island' value='false' />
            <format attr='enabled' id='place-island-2' value='false' />
            <format attr='enabled' id='water-label-sm' value='false' />
            <format attr='enabled' id='water-label' value='false' />
            <format attr='enabled' id='waterway-label' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='false' />
            <format attr='enabled' id='marine-label-sm-pt' value='false' />
            <format attr='enabled' id='marine-label-md-ln' value='false' />
            <format attr='enabled' id='marine-label-md-pt' value='false' />
            <format attr='enabled' id='marine-label-lg-ln' value='false' />
            <format attr='enabled' id='marine-label-lg-pt' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.10999999940395355' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' />
              <size column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]' />
              <text column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Price per Square Meter to Buy Apartment in City Centre (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Chicken Fillets (1kg) (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Meal, Inexpensive Restaurant (USD):qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Avg. Temperature (</run>
                <run fontcolor='#757575' fontname='Benton Sans Book'>Â°</run>
                <run fontcolor='#757575'>C):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]> ]]></run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Benton Sans Book'>Â°</run>
                <run bold='true' fontcolor='#1b1b1b'>C</run>
                <run fontcolor='#757575'>Ã†&#9;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Date:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Population:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:population:qk]>]]></run>
                <run fontcolor='#757575'>Ã†&#9;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Avg. Net Salary:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[$ <[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]> ]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#666666'>Price per mÂ² (City Centre):</run>
                <run fontcolor='#757575'>Ã†&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Price per Square Meter to Buy Apartment in City Centre (USD):qk]> ]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Basic Utilities (85 </run>
                <run fontcolor='#666666'> mÂ²)</run>
                <run fontcolor='#757575'> :&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'>$ </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment (USD):qk]> ]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Meal (Inexpensive Restaurant):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'>$ </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Meal, Inexpensive Restaurant (USD):qk]> ]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#666666'>Months to Afford 1 mÂ²  (City Centre):	</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]> Months]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Monthly McBudget:&#9;</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[~<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994957811715:qk]> Meals 
Click on the city for even more details!]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Latitude (generated)]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{69116C8B-1541-44CA-91A7-CE46176F2DD7}' />
    </worksheet>
    <worksheet name='Temperature Line Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; for &lt;</run>
            <run bold='true'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[city (cost-of-living!v2)]</run>
            <run bold='true'>&gt;, &lt;</run>
            <run bold='true'>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
          </datasources>
          <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Temperature (C*)]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[city (cost-of-living!v2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country (cost-of-living!v2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (cost-of-living!v2)]' derivation='None' name='[none:city (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[country (cost-of-living!v2)]' derivation='None' name='[none:country (cost-of-living!v2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Temperature (C*)]' derivation='Sum' name='[sum:Temperature (C*):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9D4CF5713080478AA4FAED77D9E976FA]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='empty-level' member='[city (cost-of-living!v2)]' />
              <groupfilter function='empty-level' member='[country (cost-of-living!v2)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]'>
            <groupfilter function='level-members' level='[none:city (cost-of-living!v2):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</column>
            <column>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[Action (city (cost-of-living!v2),country (cost-of-living!v2))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' value='City'>
              <formatted-text>
                <run>City</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' />
              <lod column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]' />
              <tooltip column='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enable-tooltips='false' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[attr:country:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#757575'>Temperature (C*):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]</rows>
        <cols>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{9918932D-5A8D-4C49-BAD4-F45ECAA9AFB9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='weather_data+ (Multiple Connections)' name='federated.0ozwx0m1oqiyhn15e4as60gmjqda' />
      </datasources>
      <datasource-dependencies datasource='federated.0ozwx0m1oqiyhn15e4as60gmjqda'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='86200' x='800' y='1000'>
              <zone h='98000' id='3' name='Static Weather Map' w='86200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='122' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12200' x='87000' y='1000'>
              <zone h='9375' id='8' mode='slider' name='Static Weather Map' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]' type-v2='filter' w='12200' x='87000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Static Weather Map' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' type-v2='color' w='12200' x='87000' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='26' h='4250' id='31' is-fixed='true' type-v2='dashboard-object' w='12200' x='87000' y='18500'>
                <button action='tabdoc:goto-sheet window-id=&quot;{AA2446B5-A872-4E1B-80FA-E4042A44A5D9}&quot;' button-type='text'>
                  <button-visual-state>
                    <caption>Scatter Plot </caption>
                    <tooltip-text>Go to Apartment Affordability Scatter Plot</tooltip-text>
                    <button-caption-font-style fontsize='9' />
                    <format attr='background-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='border-color' value='#000000' />
                  </button-visual-state>
                </button>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='26' h='4250' id='32' is-fixed='true' type-v2='dashboard-object' w='12200' x='87000' y='22750'>
                <button action='tabdoc:goto-sheet window-id=&quot;{090C8B8E-0274-47F7-ACD5-12C93EC97959}&quot;' button-type='text'>
                  <button-visual-state>
                    <caption>Country Income</caption>
                    <tooltip-text>Go to Country Income Map</tooltip-text>
                    <button-caption-font-style fontsize='9' />
                    <format attr='background-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='border-color' value='#000000' />
                  </button-visual-state>
                </button>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='35' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9375' id='8' mode='slider' name='Static Weather Map' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]' type-v2='filter' w='12200' x='87000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Static Weather Map' w='86200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Static Weather Map' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' type-v2='color' w='12200' x='87000' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='26' h='4250' id='31' type-v2='dashboard-object' w='12200' x='87000' y='18500'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{AA2446B5-A872-4E1B-80FA-E4042A44A5D9}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Scatter Plot </caption>
                      <tooltip-text>Go to Apartment Affordability Scatter Plot</tooltip-text>
                      <button-caption-font-style fontsize='9' />
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='26' h='4250' id='32' type-v2='dashboard-object' w='12200' x='87000' y='22750'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{090C8B8E-0274-47F7-ACD5-12C93EC97959}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Country Income</caption>
                      <tooltip-text>Go to Country Income Map</tooltip-text>
                      <button-caption-font-style fontsize='9' />
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EB110BBF-7179-4970-A771-945B48386CA1}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='85100' x='800' y='1000'>
              <zone h='98000' id='5' type-v2='layout-basic' w='85100' x='800' y='1000'>
                <zone h='39376' id='23' param='vert' type-v2='layout-flow' w='85100' x='800' y='59624'>
                  <zone h='39376' id='13' name='Temperature Line Chart' w='85100' x='800' y='59624'>
                    <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='58624' id='31' param='vert' type-v2='layout-flow' w='57610' x='800' y='1000'>
                  <zone h='27375' id='3' name='KPI' w='57610' x='800' y='1000'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='31249' id='25' is-scaled='1' param='C:/Users/MATEUSZ/Desktop/ezgif-164029b99a342b.png' type-v2='bitmap' w='57610' x='800' y='28375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='58624' id='32' param='horz' type-v2='layout-flow' w='22544' x='58410' y='1000'>
                  <zone h='58624' id='28' name='Square Meter Comparison' w='22544' x='58410' y='1000'>
                    <layout-cache cell-count-w='2' minheight='290' non-cell-size-w='96' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='58624' id='33' type-v2='empty' w='4946' x='80954' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='133' h='98000' id='14' is-fixed='true' param='vert' type-v2='layout-flow' w='13300' x='85900' y='1000'>
              <zone h='8125' id='17' name='Temperature Line Chart' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' type-v2='color' w='13300' x='85900' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='30' name='Square Meter Comparison' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' type-v2='color' w='13300' x='85900' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='10' type-v2='dashboard-object' w='9000' x='90300' y='96125'>
          <button action='tabdoc:goto-sheet window-id=&quot;{D3A0D495-7357-40A9-BC39-B75F509D06EC}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back</caption>
              <tooltip-text>Go back to the Weather Map</tooltip-text>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#ffffff' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='42' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='211' h='27375' id='3' is-fixed='true' name='KPI' w='57610' x='800' y='1000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58624' id='28' is-fixed='true' name='Square Meter Comparison' w='22544' x='58410' y='1000'>
                  <layout-cache cell-count-w='2' minheight='290' non-cell-size-w='96' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='30' name='Square Meter Comparison' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' type-v2='color' w='13300' x='85900' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='31249' id='25' is-fixed='true' is-scaled='1' param='C:/Users/MATEUSZ/Desktop/ezgif-164029b99a342b.png' type-v2='bitmap' w='57610' x='800' y='28375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39376' id='13' is-fixed='true' name='Temperature Line Chart' w='85100' x='800' y='59624'>
                  <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='17' name='Temperature Line Chart' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' type-v2='color' w='13300' x='85900' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='10' type-v2='dashboard-object' w='9000' x='90300' y='96125'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D3A0D495-7357-40A9-BC39-B75F509D06EC}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back</caption>
                      <tooltip-text>Go back to the Weather Map</tooltip-text>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6B4BC8D1-2637-4031-9670-2A8AFCBDF71E}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Scatter Plot' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='8' type-v2='dashboard-object' w='9000' x='90500' y='96250'>
          <button action='tabdoc:goto-sheet window-id=&quot;{D3A0D495-7357-40A9-BC39-B75F509D06EC}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back</caption>
              <tooltip-text>Go back to the Weather Map</tooltip-text>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#ffffff' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='11' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Scatter Plot' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='8' type-v2='dashboard-object' w='9000' x='90500' y='96250'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D3A0D495-7357-40A9-BC39-B75F509D06EC}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back</caption>
                      <tooltip-text>Go back to the Weather Map</tooltip-text>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D35C3B13-E8D1-4D6D-B096-26F228DAF2D0}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#333333' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='83800' x='800' y='1000'>
              <zone h='98000' id='3' name='Country Income Map' w='83800' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='146' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='14600' x='84600' y='1000'>
              <zone h='8125' id='8' name='Country Income Map' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' type-v2='color' w='14600' x='84600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='9' type-v2='dashboard-object' w='9000' x='89800' y='95125'>
          <button action='tabdoc:goto-sheet window-id=&quot;{D3A0D495-7357-40A9-BC39-B75F509D06EC}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back</caption>
              <tooltip-text>Go back to the Weather Map</tooltip-text>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#ffffff' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Country Income Map' w='83800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Country Income Map' pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' type-v2='color' w='14600' x='84600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='9' type-v2='dashboard-object' w='9000' x='89800' y='95125'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D3A0D495-7357-40A9-BC39-B75F509D06EC}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back</caption>
                      <tooltip-text>Go back to the Weather Map</tooltip-text>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5C7B84A6-4A49-4CD0-A0E1-E15EFC95D5A4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Static Weather Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='slider' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Temperature (C*):qk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:ok]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Date:qk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[usr:Calculation_1667176289102503936:ok]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{7A368D73-9016-4EFF-8E1A-1E6701FD7827}' />
    </window>
    <window class='worksheet' name='KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:Calculation_313563126192717826:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F65CE28-34A7-439D-96D6-15CA869E87BE}' />
    </window>
    <window class='worksheet' name='Temperature Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Temperature (C*):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country:nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3074F377-BFC3-4867-83B9-AFFF13025E74}' />
    </window>
    <window class='worksheet' name='Square Meter Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[:Measure Names]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F378A2B4-D2D7-4A66-81B2-A8886FD3E8E3}' />
    </window>
    <window class='worksheet' name='Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[sum:Calculation_388153994950119424:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93879B93-6660-4619-8CE0-60F50E484EAF}' />
    </window>
    <window class='worksheet' name='Country Income Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[avg:Average Monthly Net Salary (After Tax) (USD):qk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:city (cost-of-living!v2):nk]</field>
            <field>[federated.0ozwx0m1oqiyhn15e4as60gmjqda].[none:country (cost-of-living!v2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79C24B06-EB42-4268-85E5-AD0D8B687972}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Static Weather Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D3A0D495-7357-40A9-BC39-B75F509D06EC}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='KPI' />
        <viewpoint name='Square Meter Comparison'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Temperature Line Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{A8E7BFCB-D877-4685-8C74-AB8355BDC618}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Scatter Plot'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <device-preview selected='Desktop' />
      <simple-id uuid='{AA2446B5-A872-4E1B-80FA-E4042A44A5D9}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Country Income Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{090C8B8E-0274-47F7-ACD5-12C93EC97959}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country Income Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aZBc13Xn+btvzT2rKmtDFdbCvhILQYKLSMncZJK2JdGSLallOzra7g+e
      D+6ZiImYmZgJ90w7HLNE27Lb7bbbpq19oURKIkWKO0ESJABiB7ESO2oBqipryf1t986Hl5lV
      WVXYUQAl8c8IFurlq/du3nfOvef8z/KEUkrxCT7Brym02z2AT/AJbic+UYBP8GuNTxTgE/xa
      4xMF+AS/1vhEAT7BrzUaFGDw/Ame/ud/Ys/hUwz1D+BPOTl7YQBXwrnj+zk3VGj4bM/u3Ujg
      tZdewlWwd8+eS960f2AAgFdefe2KA3zt+WfoHy3jF4b41jPPX/bcoDzKf/mbv2GoMHXkIVTg
      8Oz3v832fUdRMmDH1lcavseZo/v4xre/T8EJOLR7G//89L9ycbQIgFMY44ff/Sa/eGtHw3Uu
      dfwT/HJA//M///M/r/3yrX/9Jz771FdpTdj8/V/+HxwcKrOgSef7P/oJ8Uw33/u7/8SuM+Os
      WtKFEc9waMer7Dx8npVLF3F0+2vItkVs/dG/kl66mb3vb6OrJcIPf/Ii83qWc/D913jtnV20
      pSP8n3/xl0Sb53Di4E6OHT1GZu5iTh94nze2f8jKpV3s2LGH070XWTCvi3fefJkLYwGVwdPs
      OH6WLasX8Z3vfp9CYOOP9fH6W28zUhbM72rnzZ9+i10nR9mwZhk/+/EzaIlWsr1nOXniAHbL
      Ag5tfZb48s9w4M3nWbh4AR/u3kGQ7mF+WwKQfOu7z/DFJ+/l2V/spadnHpuXt/PcW4fZuGYx
      +bERFq7cwNYXf4JX6CVVvc68ZUtZsmr68dWb78YUt+/BfoKrQ8MO8NWv/SFbf/4MP39rJ6tW
      beYPvvZFSiWX1WtW8eovXmT1qvV85WtfZuj0Yc6dOcqBfsmTD98PwPoNq3nn+R+z/vEvcfj1
      Z0l2r+CHP3yWxfMzPPez11BGhBZtjGMjJps2b+bh+zahW3Ge/PQG3tq5g5++8C762EfsOPAR
      L7+5i7s3bwDAiHcgy0P0FwLmpS2ccpn5i1fw7luvcfrwQTY/8jn279wKwKZNm/jMb36eba+9
      yG996Su8/crPOLxnB1bbEtoSBiMjeebO7aAjGUWlu1jRM3fSt/eJRpM0d8wlyI+gVUb5wav7
      +L3f+Q0AmjKtvPaT77H+gUcpTLqOmZ75+CU2oU/wMUODAuzY9jZFR6IJ6OpO8vTTP+Tg/l0c
      OXoCKaCzO8M3n/42PmAkWin0fsgPn38FgOYFq3n/9TfYsHEzR3a/y9r1a1i0oIsjH/Wxds1i
      tm19nb6LIygl8ccv8vp7e4gmEkRsE6lMOjIWOZJ0Z2IsXr4S25gY2py4TsVIAnDuxIfsOXgU
      xwuAgJ98/xsEZqrhSy1d0Mk3/+VpzGQHGDFWLV8EwMYtW/jW3/1nPioKvN7DPPfSm7z03Hc5
      feoUh08NE6XAX/3nv2PVPffwD//9v4NX4sCh47y3bRu73/wJe08Pc2TPHlZPus7Zd2c+3mrN
      4lP7BDcN4pc5Evz6j77F6ie/Rmfkdo/kE/yy4pdaAT7BJ7hRfEKDfoJfaxiTf3Ec53aN4xN8
      gtuCBgX49pkyF3z95t9FwV0Jh30lC1fCF9uGaDV8NBXBwyJqTAwjCFx830WvDkOJAF1Fw89k
      wNmKTncEXhuPcso1aTckX+5wb/6Yq8j5IZeZMhQy8Dla0hkOTB5o8sn5gpQRWpBKBpwoCV4c
      j83aWGYTSU2S0iRZX6fCLeBvFdyK21wJt8gEUlRUwKeS4wgFjtQ4Vo7y0liUSuASBD5SSpRS
      +LKIMFykcFFCoosYCIECNE2nJwZv52xOOwZPNjtIJoR0NpAyFClDoZQEJTnlmNyd8uufASgl
      ybmS13PRWRvHrEBN/BSALwWmFh5MaxKAlK5oNYKbcrseywMgqSuebHZIVu9xO2Fc+ZQbxxea
      S3RGSlSUjxpP814uxWebRxnxTJKmQgkHqQKcQPHmeBNdpsf6uELTDIQ2sSPJwGfnuM5Rx+bB
      lMuiSEDaAFu7FX684Ixj8WCTjz1l2Rh0FM+NJHDUx2BJuwooBXPtgD4nnFtbKB5IVlBA1tPY
      XrRpsxRJGfBIs8/z2asTkzY9YCi4tAVxyjVJa5I/6qzt2A4vjN3eRWPWFSCpBQz60InE1hTd
      tkOfG2FXIUHG8JE4HCtGsQXsLyUQCu5I+GhaBCFCSZMyXCl6HcGOcpQey+OOZIAQGq3WrSGx
      hBD0xMN/K6UQQrB1VEcAQ57xSyH83abPXMtnf8liSzLgsK44UjZwFOwo2CT1iR3u7qTHv1y0
      eSFrMuxfhaGguKzw12BNulTKEKE2its3d7OuAJ4U3BF30EWCgBJPZvp4abibfsfmaDnOu7k0
      AmgzXVZEAnoiHroWRUyaFCEEFd9nZ84iqSseafEbPr/VqN17fkRx0VH0evas3q9VD8hJjXYj
      oM/VUdf53Yd8nSFfZ000YF9R52RFxxKKlCEZ8jQqSrDE8uh1dPK+ST7QyF/txa9ySA80TYTI
      c4G4rcIPs6gASU2SlxoZU3KsZLIqAbqIE6gyS2J5jpVSLIuV6bEr7C/FWRXxmGtrCM1sEG6l
      FCrw2JGz6AtsbKGI6AJHMs0UuZU4WRIM+YKTziyQBpMQRXJf0kMJQUUJ5tqKlB5wqGTQ51Uf
      n4IFps9Z//KP01WClCZxFPRWwslrMwL6XAMEPJwu8eZYhDGl0TcL7qElFDlf4Jiwv2BQDm5/
      CGp2FEDBHD0gLzW6rRJzbBeIIYSGSQvLYlksASNeglZTcn9qnF+MZJgXbVzZc67E0hQWMFTd
      hh0l+Jtem25b8VTb7LE/l0NfRZAywJUBw755cy+uQKBQCDYkPAZdjQUxhasafZ2kEfDjmm0u
      uKLw15CTGofK4VxGhAyVqDrlz43GUUAcSWkWFKDDkKR0xeGixuakhxDhPJ6s6PS5t2c1m527
      Cjjuhg/kpBMlJ8NjSik0YaCpCJYGR8o2Z8sxLE2xLFak6FdCtoWQWUEI3h4z+Uk2Qr8/kVyj
      hGDIu31bp6XBsaLO9vzNTfhZH/f593PK9Ng+rabkgaYAhOBv+yK8OmLiVEkTR8LO/I2vXRU1
      /fELuHbhv8qF/Lyr8UFOx5m08m9IBsyzbg7LdD24aQrQqgfYYtJMVFfyrGfiSI2DRYdRr4Tn
      lzBEgm4r4A/axjjvhSbE8mgJWwsAwWBFsn1M41BRo9czOO9PF7T1ids3aW2WYnfRICdv7vpR
      9AURXbA6rphnS/oqgseaXZQQpHTFkWI4V3vzBufd2TW9ZgVCcM7T6fOMxp0+COdR3IasnJtm
      Av1WU4mKUvx4NIE7eWUR8IuxFhbaZdqMEqkq9ysQDPsapysW96VDx1JXEZQMSGiSvIzgBoL8
      JCFTQJPm02JKNiZuH4fsSGg15dWxI9eAC54g58OimCRpKBSQNKDbCp1WJQTvjBvI2+w4TsM1
      DqfX0RlyfdqqDF4ugG5LMteSnCwLhq+CTbpZuGlP8IWxGIFw+DftQ9Q3gkkafVeiSJsJuh5D
      KcWgIzhQjNBteWwbTyGUgdAMNN0gouusi3kMysaJWGxX+Gr7CE9mnAY67Vbjexcthr2bP4C8
      1LCqk5cxgrqA/G6bx+JIqPAfO+G/Hgj47pDNdy+YnK+EJuWWlM+WtM9TbW59Dm4FruspLrY8
      fr+l0BDJqyjBBSeJrQX8245BAD7fUmKu4YOCbbkUjtIAQUV5HC6nuSc9ykNNRe5L59CwEEKE
      foKu0xHRmGuF1+82PX6nZZjHWkbQhIkmbrLjeY0Yl9qshPE1qehzNNxA8fOsxrgXfv+tYwaW
      RqOJ+SuAoUDn2WyEfkdjrh1+14gu6DA+xgoQEZKMGQZMJiOtSxSS48U4UWFiCUXW0/h8plSl
      2iz6HZ3essc741HGJESFCdJAkxEE4Wpfsw2HPY1T5fDY51tLzLctDFLo2u2NHGbdcHyzsUpJ
      TfDqmMWegs6Y1Bn1ywDsKxp4VbPrVxFdZpgF0FsR7MjpDM5iastUXJMP0FalNh3lYQtJPrDq
      K2GvZ9Bb5aVdWWF9zGVHMcKKqBdGSQW8ODapckvB3w3Y/H6mQNuUB9vraPRVBE714sfKUVbF
      Px4Pv1wdhjtLkV9HCfocxUPpMdpNi75KeJ+SVDzV6vBPA9FZoShvJ3JS4+mLkcY5vUXJctc0
      k0qE5s+96VyYNFVdrZOarFNhrXrAO/kIOws2jhJ8L5tgRdSj22wskv1s8wh3JvO4MryGUhOs
      zmsjBtsLEzvMq2MWe8cVSkryXrhS3C44SvDlTIn5ZtDg49xMjAc6hwppPOx6ikU+0EAI7kzd
      PvZrtjDsa6HwK2g1vJANukWP+Io7gCUUEaFYGXHZUYqQCzSaCwmOlSfqEB0lWBl1OVKxQg9+
      0uAdJehz9TrV9Zl4mTeLUc5VYtyTGueVkSYszUeKgJKjQNMpT11dFbxdiHLS8UnpirlWALep
      DLLNCBh0Qzpvth6SQOOutEdEF7yfCx9RPhB8d9DmY5FDPEv4TNMoK6IVTpQSvJpL3pJ7XlYB
      hFJ8OZMnZcC+YsjFu0rwbr6xCN1Vgl535ksJBX2uXt8tdpdtbCFpMV0ims5vt+WReOEOouLs
      KmrTzQsBDyZdFsXCSCJKAreHB08akNB8vpwp8b3h2KzIY05qHCkbdAeqTrUqIRiejVqNa8AN
      WSVT/7i2eVaPdVkVlsXGqEjBoXLTLTOBLqsAmxMV4maZMd9ECQ2UwtJUnefvMl36vVAx8lKb
      GPSkwT/RVKLbDngnZ7OvHCaNPd5UoNtSaCIGVHPtEXRGFA+aAfmsVk99qOGUo2PpEIlKbO32
      CUJvGV4cjYcO6Sw+oO05kwfTtyfVYyY8mnaxNXh+9Dqj31PnasrvXVYJhMTS4bda+9k+3k6v
      G8HWJHlfJy9nJ2vnklftsTzWxxxG3QgXfXgnF2ddvMjBYgIEJHWfuxPjPDfaBoAlJIsjZU5V
      ovREy3y6aZzns638fDzGH7XmWRH16LF9TjsGR8oR8oFLwnAY9UxOVJpBKe5JSQ6Vpgs/wHlX
      J6FJlkwigYZcQURTJG9JVUOIfs/A1Gq72izeSMDW3Megt4qCLUmPlQnJvvzsLDzLozmWxSbn
      neq0mA6bkjlMzcFRgpeG53DRv/l27yVF51PJClnP5NVclIoSbE7m2ZwosSTi8dpYinxgEAiB
      JSSCsMprQcTBl4KlsTIImGO79HoW/zAYmkx/2JanWwW8MBbjaGX6w315LCAvL1NQ4Rg05eFQ
      SSeqwWggcKVgQ8JvSLOdTdydDuixPb6b/eUsfbwaRIRiQ9xnfTKoBxz35XXeHjduXOkVdFll
      1iVy/GK0g3tSQ3RbFeJGGYWOUCYaFitiLmFaoIWtOTzQNMRPs92NWQbXgR67RK8boc0IEwEv
      qQDfyCaxhSKp+0QUpPQAXdl0mQF3JQq8nktT9HW+1DpI0pD8fX8XHxSS3J3I0W271e86ueZO
      cKRscXfCoc2YqBxKaZKVMR+Exr7C5VcYRwner7JDuRorKmBv0aAi4dGW2VcCKSUJ3Sep+bO2
      Ld9OpHTJV9pc7OqjOFzU2JGr5j3doPBbImBhtMhnmoeQ+PxxdJSavSwwEAhElZgMZcdHET7o
      FsslpfsMz5AXdlVQipTu80hmgDPlOAmtmUNF9/I+gKMEjm+S1HwSekCghYK9LO4SNzxsTZI0
      QhstqfuMeAYvjrbQVXL5XEuOEdemlYDfbi3xzGi8Xmf6SLqMLwUDvs7KmE/UNADJ+oTPP/RH
      rmuij5QNHgw8bH12PSchBFIFZEwPx9VueEX6OCGpSZ5q9bB1GHLh+azVkIt1tZha5JXUPbak
      LrIoWkKgV4V7wocSSkdUf1HCQ1Kp/uWEQgAMe9YNKKEgqYc1yQsjJWyR4pwjry4Qlg8Mto+n
      MDRF0gjQleLB5nEOFtKcrkgG3HBgZtVBzgc6u/IJhnyDlTGXuKFI6bK+H2Sqga8OO0BoOkqG
      P/PejfG/W3MWjzZ713+Bq0AQeLyXi5H1dH6VMhOSmuR3Wx1ShkApySuj9nUJPzQKf5dV4cHm
      fhKGg1JUV/Spz1kh8RGI8PPaxCpQ1RNPFtM3tgMJGPJt8r6BQGdY6iyxr7AD1NkcAYOBBT58
      tekiEQ1+Npyh7xKlgPnAYGcxvPTOYgQHQS7Q2FG0ycvQbt+ccLA1yFYUFwOdtCkYdG9s9T5S
      0mkzJBuSsxcs0nWDTakc57MtOL9CEVmBImkoch5sHTdvCuXaY5e5Jz1IzHBqN6nKvg5KoAhA
      qGr5j47Cp2FVEYBSfFRs5q2xjhs2wVyl8/JIJ47SKAQmYE9XAFtIHmseodX0OFOOcLQSw5Ea
      Wd8EAd8ZbA9HdrWDEbC/ZNe3xR3F0JPfW56lOlo1uykTA5UKrtKwBVdfL/tLgBVRHxAcKjIt
      z+t6caoSYUNKUacL1IStXz+E32DmTMVHxRbeGmvnzuQouwotNzymrG+DAksLcJU+XQEcpZHS
      fWxNsTxeZnm8jC7jPDcSr5bPXVny2/WAFtNDqIAjTpxHkmVWxDz6HJ19JYtTrglK0WZIhvyb
      SyeedwUbrrZE6SohpcTxJeCRND3eGEvd0pz12cZCu8z6uIdSgqPlm5dsaGmSgm/SYpara6Ze
      NXOCCT8AUGJm8uJ4sYnj5STr4jl25VtuqpwkdR9HzeQDKACfepqQCl2RTyUrfD+bmHEQW2IV
      TA3eKURAKR5vKpEwfA6X4YgTZ2m8AMqm2w7YWRRYQvHFliJxXfLcSJz7U2VMrcLJUooFMcmw
      K3g7f307RCHQUMqvt1S5Ufi+B0py3lHkJLSavzpmTw0aobAeLhnkrsBsWSJAAypq5gXgrsQw
      7ZEStvBpsRpbbSrhX/XSdLzYxPvj7SyMFLi7uZ+7m8Lg2PxoAaEEx0tNHC9PZCQ82dTLBT9G
      1rPoc6O4lxgfAAIWRoqsTYxPV4BWM2R4IBRAXUU5UjapKJfHmwq8ngsLp22hyEuNh5Nlum2f
      nYXwfFvAq7kon28p4CpBUvNReCgM+hyLXs/ggUSZFlPy4miUe9NjdFoeCMmxkkeX5dJtmgx6
      YsZYwZUw5OkcK2isuImpJFJJ5kfKnHNtXhrL/EoxP5aQbErmKamAd3MdVzzfFhJLk1R8vTFd
      QYXuartdZI5duuFxFX2dL7SfJmlUSQ0BW5oGJ8atBeQDg4Jvkg8M4obPxtgwAp28b/Ddi/Mv
      a63sLrSwJ988XQEWRSogwuxOoXR2FaLEDJe18SJ53+LBhM4cy+fFsRjrExXyQViv2lfNBdoQ
      c2g1JQKNtYkCp5wIuUDnYNHmdCW0/xfZ4ZY34Orcq4nwfoCtBfxdfxP3JwoNduK1QABNZh6l
      4jdlFzAME88NeGskxX2Z/K9cKtodsQKtps+ufKJasHQZKMVT7b0IFG+OdnDGidOk+YwFOhpV
      4+EmVaxtSGcv+3nGqvBk29naTQGFEqHMWlqopJfbBe5MjJCvjrsBCyMVqE5E1o2wt2TToVd7
      YeqSZTGXpOHzRFOJVVE3tOGh3j/yUMWayHNStUxGnTOVSJ1Wq/XUbDYlfa5AKB1NWSR1yWeb
      R1ifVDzc7LE6cu2UZq1/jpI3HhRTSiFl2IFuY5POrnwK61dJA1S4oiskfc6Vd9tW08XWwlY1
      tWy2JtPB0iSfbzvHxuQIr2a76XduYZRcEDJH1eci8Sj4Ou5lKNzlkXE2pAZ5oKV/ugJ8WEji
      SgtdRjlWjhAVkkz9bW8CKRwCrUzSUFgarIyGQtoTCQUuLzVezUXJ+4KiH8GVBp7Uwi5gU7DU
      9kgaQV0BVkR9FkYdfFFCKY/NSfe6cu6TesCgExD4NxYTUEri+2H/mozhsSJa/KVogXi1mGOX
      WZ0cReGRsSpXdX4tut/vRtmcyCJQPNbSj6V7bEwPsiU9yEfF9GwP/dIQiuFJZE1Sq8qAajyn
      Rrc2vCVyb7bCGdeiEpicdmyOOxZFpTHsGXSZOlGho4SPpiwEGgpJsxHSWI6ibrMHCHo9g93F
      CBERcG9TjlZDcqIykcyU0iXzbI8KPlHDC3lhIavmUDi4iNBYH3NZE3XZfw206QXHYmcxzspo
      GBm+/jaKAk3T8H2PnXlYHC/g+FEuXGUTqo87CoHJgBtlYbSArckGp3IqWo0Kj2R6gQBHanxY
      bOb+pkEGvQinKwnm2EViekDGqrAwUrytZQsZ02HEjTHmW3y58zQthsODzQPcncqyKTlCxipj
      VbMSZtwnjlaiHKlY9bz8FVEvzMMHSl50Em+r6rW8CcNpWK2HfR1XhX1BgQlnBjjpaIwHEikc
      WquVYlJzptBhNb8gdNR6LO+q+8YM+hZdlsdzIzGUun5TSAiB5zqAZFe5iVwAiyK3//WPKyIV
      uk2XTyUqN1wo3+9GeH8sQ5flsDx66chGt1WumxqW7rEsluPDYpoHWvp5su1stadTCA3zqptl
      zQoEPNjcz6ZkFkvzWBIfw9IDlAhQwicxSRavail7cSy06drMAEso7ohVWBgtogjQVdgyOaG7
      fLV9kF2FFMcmcclDnslSoNX0WBcrcaAUI+sZFAOTAUcwx66gkGEkUHicKdsk9IAOwwIhEELD
      Vj5PNJc5XTF4NRe9CjNEsdAq0mJKJNUHch2QQYAQcKocdlZ+eWROXeFvORSsixe5Nz1G1lMk
      dQ1LC+iyo/xgOHNDzuexSorTFxIIIKF7eFLDmeJADvqNO7AnRT1NASBhTCwMqqEw5PbA0n02
      pgeveN6MkWBHCtpMn6Fq30tLU3ylpUCy6rxKPKQINT6gSnkJRcoI6LFLnCzZ+EIjqckwa7M6
      H31uVRCF4NVcDFso2vRQubrsgN5q/YetSZ5oqlB9KwZC01BSsiji8ylV4bUrvIjizmSBZdES
      L49liBtlOq8z6KzpOpoyWZ42WCF8ekuS58ducUsWBfelxvCkxqZkAYlLsxUKW0DA4UoSAWQM
      h2H/+qPrNWpXScWK2DjHS+kGrj+lN/pTOd9ibWJmpkbhzWwC1Rauj1ESVYMCLLILLNbCTsTr
      4iUGnARvjCXJS4O9JYueiE/GrGBqE5PhKuhzbBZFKzhSsL+UwK/Sj7/XOsS2XJJvD3bwpbZB
      7k+Nc6CY5HTFBhFmm25MjdFt+fxouIXxwAgfhFK8nQ+4L51DSCP0OYSGlAGnK1eOVB4rRUlq
      Hq7UqNxgWpBhmCiluFiRPD8awb2Fxm1S93ms+QIZ00PDDuMpwifAQROhcG5pGmBL+gIDTpw9
      +VYGnMgV26cnNZ+M6XHGmT6XrtI5WGjm9ztPYAlFvxtn62gn/W6cC5U4nZFieKIQl9516rGB
      iX+HjGB1V1DhB5eKAN9KNPgAq5NZVidHWJMYReHSZZf5YtsF7k2FNtQ7eSsMeFV5+5yv8+54
      ml2FBNvGUxwvxepdHnrsMlJIFkQqOCpsZjvHruBKjcebsyT1UDKLvolA8Lttw3Xhr01sn2Oh
      hI8UoR+haTon3CuvwHlp8GauhWxgkTKuzG7MBCkDfN/D91xO5H2eHYni3sLkt26zglCKjOWA
      kASiQCDKKOEjRJg/qQiQhHZtZ2ScJ1rP8EdzTrMsmrvstS1N4VVpQksEWGIif6rLKqOAUS+C
      pQcsjOZ4svUslgh4b7y9fl6rWeKVkbm8OjyXt0bm4MxAOwqMOqUeRoFreT83bxEJ5+D6FWma
      CaREtd2H0FEqwNIkaxNZhDJZFInwk2wrw37Y8DbrmdyfGmVTKsvefBPv5ifor1OVCGs8g9NO
      BFcKHBV2O9iUHKfbdtlZCNA0waqoQKkIr41PmEcAx8ox+lybdfECK6KVarqsxiOpMu/kI1f0
      AzSp+ELHOVLGtXHSSoU1yk4AR0oGews6BW59aWJC99iSHgrHhAyfSx0aIOvFInWDQmgYmsOD
      zf20mhXeG2+rz2e3WWR+tMB7uY4wsVEp5tkFlsZyDHkxEnqFjOWSMcp8WGxhXrRQv1vGcnii
      7Qx7c631Y1vSg5wtJ3mktZcz5QRZL0LXlAhwPfW5Pj6FxK19eEMIM0hFfQ6uFw0KUGd3RPjC
      Olm11RQBQihOVpK4UjDq6iyJFXFVHFEtNLg7Pcz8SIkDxZBKazUC8oEgqXl8pqnEooiDUDG6
      LQ+URi4w2BKvrc5yGsPzbzsv8J2L7ezKJ1lihauWEj4roxoRoTjv6pelRlclx2k2y/hKoavE
      VVOhgxXJs6OxWWt8dbXwlUHaqAn4xEOeqLLT6ollE5/5IAwE4W6eMcu8PDIXV+loQpHUPTSl
      MDXJo5nzzImEnecWq/GGRXljanjaeGxNNqQiXHBi5IJwYZhjl7BneuGduIxw3vD0SmR9Xq5/
      Z56yA0walajZalpVMRSbUlnuTI3UT1nrj4VRQaGwhWJhtMDCaKGaQBdB4TDgxEjqAqHsavwg
      FNpPJfO0mopAOCgkaxIeRyrx+rU/yCepqLDiqtcTLLF1ai+1XxTx6bZ8Rnyd897MRFZPpASo
      qvl0dT02lFJsHzdvu/CjYHV8DFME1QKRyQoQUKOfJwv/5M9F9bF2RkpkzAoDbjiv28fbUULw
      WMt5OqvCD1yXMB4sZOiyQ39gRuGfZahJW8jl0qmvhAbpCScPRlybY6U0ZypJ7kyMkDQ8Ou1i
      9UYTzEDSmMH2quZmKFEBJeiygzCvZ0qeyaqooEgJJRRuYPDmWKbh812FMJttkV2upmfEGvKD
      LA0+my5xrGLydmG6M3e0lKDTLlX/5ur225Ln01+te7idWBcvMCdSqtr5jXMcCr6sByJr3+1c
      OU3Bt1idGGlcx2o/leDhTB8jnkVH9doT1wumnn3JXKyCH+GjYpJ8YPBgc/8Vv0tNUK83t+tS
      15vcWOhar117ySFMUwDFjtF2+t04I56NAnbnM7SZFTrtYnWitMveUBAJB6eChsFphHW/UgTV
      GlCd3bkW+lyNpOHPWIFkCclnmsYabMdjxTg5qbE5Xiaia5x3Ztb+lK7Q6wlxlxsUaa4AACAA
      SURBVJ8g33M47Ri8k4viikuHRjKGR0r3OV2JktR95toV5kfy7Mq3hIUWNwG2kGxKjk4Iv2gU
      ovC/UAk0DCQBIJkfHWfveAffGlhBi1mh1ayQD0zihsdT6TOMeCYZq0LGqlSvXTOvJvJ6JkMh
      qs9s6vEwl//Tzf3T0p2nnxv2ewrlRr9JSjAxduC64jKTzeEpPoBgS/MgjtT4Vv8yNGBhNFd1
      bq7CjFA1TRdMtcuE0qvHAvaVTFZGPbK+IGn4DLj2tOsgwK062l22G74/AA1Xwc6iTVqTJAzJ
      GXfmQumz5SjrEyUsBEKbWUmklGzP6YDN0bJF/grZkPPMCp12iRazzLp4EVtTKCRz7AG+f3He
      JXPkrwVr4zlMvdJAEQoEkoAXhxahEKyIjbIknqt+Vpsugzl2mT0FnQE3zoAbZ45V5KHMGQBa
      LLPuODZi5t1xcneGyX+TNDw2pqf7CFMhmd3a7BpqQdTrxXQWCMWIZ7M0NoaGYkNqGFtIwlK2
      GQRE1Qs9q3/vQbXsLfy3BmhIUW2VIgLWxatvJlSS32jKsTvXxL6SXb/GI+kiS2MFHCXr2ZdS
      eOjKZkXU46Rj8nYhgi3UJTnvocDicMlkbbyAyfQcFykD9uY0Pihe/cp9pBJncXycBdECuoqj
      y1j4oPUxTCFvWAFsIZljF5mq0QqFUBr9VVs+Kry6AtR2h8n+wByrSMG3GqjJkCpUlxD3RtSe
      c41eFFeXMDBpvNN9gnrXh/qOI2Y4fnlTKawennptWVXR6/MDZnCCFR12jg47h0BDoFdNlplv
      ILCqgi6r27UPykehTThvSqszSkJpuFJwsBgjY/lYWsC96XEsLcnOYmjL97omY0GSQqDTZXks
      i+fqW6+tCb7QUuLno9GwtPIyGHAirI3nUCpAiEbhVFLV269fLRyl8cqu43x5y0LCrV2hpMb2
      XBt5eeMR4mWxPJ12HjUpUlp76EU/nJsOo8wDLRfqn9eLyVF0RvJkjAqeFDzednLKM7t63nGq
      kE0W2ksKqArJEok3hbINMcHVN45DTfLRwpV8omSyRr5MrPAzO9s1Uwuu3deYRoNOUEuifmNV
      zaiZ6eKh8CtQevhT1Pq9TBqskCgcUIKPSq28nkuBgjviBRwp+NFQC+viRbosjX7X5kjFgir3
      frRsIZAsjRcYCyroMkrKCF8WceoKrTOHPRuNCDPRZFIFXHCvvf51NL6I3YU0m5JjXHQNto0l
      GZY3FicQStFiutyTHmoQ/hAKN9B4e6yTtObym63nMausi6wyQlBbtTU+1/ER+8bbSejeTUo5
      qK3QQbggKmuSXARVE6QmRjLM6J0RlxrLZGUPaKR1g+r9a77Epa8Rjk9U5bemDFf2O4RSEwT8
      YPYQSiuE0UZ0hNIQGOHvVce1hn4nQsZ0sDWFUHZ1EP5lud+8b/LySCfZSd29bCGnVyJNcTdS
      muTftA8Bgp9mW1gV8RgPNHaWrmy+3J8ssDGpNVSH+b7H+ZLkZ/lL562f3budOSvWYUUnAmlu
      uYgVjU87tzQ+imHZDedeC+5NDVej7/40f8aRGj8fWkjWs3ii7VxDsGnC/Kmtrjc/AW3CFwgF
      S1d2w8IYKkDo80mcGVf/2w9xSWWYZtzVtlSFCtM9lIYirOo6VMiwMTnKoUKKIc9iS9MgFhJR
      09zLrDhuYPHsUNc0O9lRGiujRU5WovWErEURh6wXlrYJYMi3+NZgGz2REo+kSrw0FmPsKrsy
      HCnbbEhUGhQg8D22ly5ftBFJpOg/vA+EIN6cIZJMkxscIJFpp5IbpTQ2SmbBYoSmURrNUhob
      Ye66OzHtq2/gagnJfakhlsWKgNZgDtTwwtACRnwbHUmXXSIIAjzPJxKxJ9nPNYS28EzxgevF
      ZJZo6iIo6jGiqjM6aY4nd324/aguzlNassA0BZhI3RT1I+FL7hSKPifCgcJClsXyPJLpI2xq
      VHNDLi+QW8cyl3QSj5TDVdUSCk0puqwKj7UUUDhoRHhjrIlj5Rj7Swn2F8Nimqtd7LK+yY6c
      w5b0hB+g6waGpricnJzZvY2uVRv48JXnWPvY5xm/0IdbKmBGooz2nePk9rfY8DtfQUlJ4Hlk
      z51kzop1EwowQVNfEj2RIstiJUp5l727nkO5/Qi7g7WbHyWRTDI+nuPM6TPYTR3E4mkO7Xuf
      kd7XsQwHaS5l84NfIdBMBpwk86P56k1vdr7SpC8iFFK5CMxJylejJWtxBa3+teXHRgFqmM5k
      NphAA9ndaHqtsa2sbhsaCsWeXBsDToIF0XHWxseZ3NuRavCr5jRPRd43+O7ggqse5n2pLGvi
      44TTaVPwIrybT3CmYl4x03EmJDWfr7WPMOYoWuwIMoC/H0xd9bXyQxfQTYtYUwu5wQFMO0I0
      3XzN45iKe1NZlugD7H3rr1m3eBxNE0ip2H8yhZlai1V8j1RCcjFnsm1wLb+7Zhf5gsPQsMPK
      ZUlOj9yJueHfsSffwZZUH6uTWS4VIb5e1FZ9VX3eQoU098TKH0xiAFX1/1NygD4mqMnzZMxA
      gzaG3WuTuTE1iOAS/K8Iz1ZqZk72TGW63Xw5ODJcbYQKmZWULvlsc5afjrTQ74R0qSXkVbcn
      yUuD/3qhHaEUv9MyFqYWX4MiJds66/9Otc+5pu/SgCkLkCsFhz78gFULxtCqsQpNE6xaMM6B
      D1/kjg3NgE53m6RSeIP+AY2O1ggb1zZx8EgOTz/IIgb4kAwX3ASryd5U4Z9Y1AwEEqF0JG41
      s3NyHpJWPU8w2WT6uKEWQZ+MaYGwS/9xMGlXuFQeeG2LnLAVFerK7TamIBeEgq+Ei1IgtQrh
      pDbXBei3Mxf4Wbbzmnr0KCF4aSzdkP57SzFl2vrcKG1OHtNs/MAyBZo2hS6U4LqKjrbQxFq+
      OMkPXspRShzm0Ts8Oppno9WkQgoPUV/YaukXU+dcVmlLg4kUjVoGgH5Tg2IT17++v50KrfEX
      uxqxvRSmOzaSIKwQY6KBkRIBUrhI4aIIaDVc7GtgB+5Lj04eNbVa1IwZmmdzrDKtZsBi+9pz
      /R2l3fK+/uoStcwDbpTWuavpH2ycm96BMnPaGp3pTNrC9ydfR9HcvpbPfnrNFOEXaJhX9Mku
      55wEQUAQTKIjRUhHhgU5kyPDk6+h6vy9hoGGjlZvhX5zMHlhvR5MtGQER+o8e3HRdCdYwyKg
      tuLOdJHGFN3QPhSXHpgI81Q+jeLl0aszH3bl0tzbNN3cuid9kYxRYGG0DFhsTOY5Wo5el18w
      61Dg7/8h3eX3UMBJ+1MkNz417Zxyx1rOXvxdhk/+lPakw7m+Cr2j3fzG+rGGU5ubYrywJ87C
      eRVaWyyOnk3zxa9+eeYbE6qB53kYZhifkYFE0yfWOw0D3/fZu3s7QgjaO+YjdDh75iinz7wF
      wKJFn+He+x4kNP7lJBt/4h6NvH3NGdZnxQ+oUS61dwyI+rGJQNrE75dK8RCgBN+/sHh6c9xw
      0LU+7ZcefKOfIGdMmmqEZI5dvsI5EzhYSrMuMV6v3q8zDUKyNDGOpiyUCkgaLpsSY+wq3rhD
      erPhb/9r/nDZe9jVdww57g/4xvvnMe75s4mTBLyfa4eFX+HM0TksOfl17lgUZX5mjHd3OSzu
      0WhJKS6Mm7x+cQtfvO9tvIpk/4Fx/EgPhmExNVv0yMEP6TuzFYAz50z+6I//mB3vPEOlcJxI
      YhlbHvgiphHuGNvffYnO5t0o4PiRNcyZt5ZC6X2Wrwwp4uzwe5w5tYRFPQsaaM3GezbuAuH/
      b64fMjUKHfobkz+tBcImjl/S7FLw9khnvWvcDBVhjXnW09NPJ0OrD+CyETcBpu7wx91H8KTG
      gUKGPblLdDKoOor9ToRldQVoDBBJ3Cqlqd+kaOfNxXj/Gb7U9ha2NWHG2JbG421v8Uz/50l3
      NTJilpPnjsK/svnOifM7mjWePvkITvOD2D3t+PIQXW3vYZoWC+fG+eDoOFOfycnjJ/Hzz7B2
      RSjgHS0OP/3RD7lr3UdE5mtUnOMc2LebTXfei0DHKQ8RmVOlLVWe3HiBdJOFlIrBiyWiMYPB
      CyMs6llQD4pOZHfWnnw1EFZ9Pq7nsGPnfubN7WT+gsvt+GFV2+UxPSO1Jo9SSjSttgNNxCNq
      5wiMulLUFFJgcKjQwrFKU8MoJv1hmII7scXpVXvO4MLAEC///Nv85Jmv8/KL3+bCwGDdzbkW
      p8TQAjamBvlC+2kyM9TrJnUJStERyU+wUFP1ZFKK8LJYnjnW1e8utwJjvafQBLy3J8vA4MR3
      nNsRofCL/4hTaKzZHTqxj4WZQsOxaESnVZwnNW85drKZOzbdwTt7dVxPcq6vhFvope/sWSZP
      zvkzB2hvm/AH2tttes8daLiupkzOne7j9Ef9rFj1GIeORHjnvXHO9p2hv38fJ4557D8wyrhn
      cfijCp2d7WHnvqpfIdAYGyny9W9+m69/8zuMj5TRsELGTmn87bee4a2Lx/nH13/BocMnq3cV
      aMpmQtyuLnlNIBh2TKRsTI+Q+FXhlw0yW6uTDn/30apOeTh2g4+KzWybVNcMUzrD5cv9CG1q
      fxe4MHCRfR/8IwsWlGltlaRTBY4e3kkitZxEMlp9CFdORgoHGSZuxXTJqvgYtghot8oMODEQ
      AlsEfLrlAu12ickt7KoXmPS8w6CPpQW0mRUGXZuiNC+3D90ymGdeZmXkI9YsSTGe8/hg/yh9
      A2WOn87z0BqfgZOnGBrxqJz5gAsfHSa16y9Z2GXSnG7MKdo5vAjZdQ+2UMyxHKzeFxgeGsM2
      NcoVh/NnjpNuW0kykUagc/58L5lUb8M19NgWCqUkfb3DlLxV3Hn3Y7Sk55BMJWhqSbNg4YMc
      /uhtVq2N09RcIjc2j5xToGt+kubWGPnhCEsWLWMi30fw7CuvMBTJ40Ukw2ezrFu+EoFOuVzh
      R9veJN4UR2iCo3tPcrb/AjqCzraO0LSukyFXXjTzrsGxcitz7SJC1MzyyT5oIykw1faf8FcD
      jufTvD3WFcrH5eoBGhHaVvv2vMTceQaDgyVAkMnYLFxoc2Dvq3TO+Sq1IoWpFWNTEV5frw8M
      AWuSIeNzrpxi2LfZlMqyIDK9Q5lQk16upibKNJXwabZ8Pt9xht3jrewptF3y/rcCuRO7+MO5
      r5BpChPt5nVGidoaY+M+S+bHee39QZZFd/DlOce4OOwwKl02/H437x0YYU5bhGgknL/jp/O0
      6or5w89z/EIRyxym6BTZsrmZHftGuGtTC6DYvfdZun7zPyDxufveT/PaCwdZvTzcYQ4da+bR
      Jx/HtAyQej3W8M1//jrdnb1I1cFd9/4JQpt47pnWFmKJJsayh3GKBk88uBGBPckCh4WdCzh6
      6hygWNizAK1a5hqLxpmfauPYsYsYERuvXEaJNEfef5emeJoF8+cjlLxMOxSB73vouo4QgsPF
      VtLm5AX52n2LmqwtiI1zqNSKqwwsETDih++ymOID1KqnJrx8gc5A/wBjo2M0Z6KA4tChMbq7
      Y5SLI9WtDepv/hABAp2tI6H992DLwJSv2Giv1WBqPiibfifC0vgUu17VxuY1HKxNSG2nWp0c
      ZsSzOOPcvuassewuMisaV/LWZptTZ4uI+XGEguaEye4PRzk3UGZhV4yT54voQnD8RAHHD1AK
      FnfF2Rxs58h5j88076O9WWfvuM+Fwalmo6o7fLZt88Tn/hf27znKwYOH2LjxDmwrCkpHCB2l
      XPzAp7uzl7UrFYEc4PCh7djaJt7ftpX29qV87rc/S9Rs4uy5szQ3tZBuSjB561VI7tl8B+lE
      HAGsWb2iPhKBxV2L72C85SgAA0fPARBJxznf18/C+QuqcjIZNetBsvW9A7ywdx+t0Si/97kv
      cNZJ8aXmj9Dqi+qV8l9q1XLBtPMsLeCRzFlsDWxN8Up2Ll6gNUpiTTDLpQpBEAYzyuUysXjA
      itUZOjpjdHTGWbE6w8CFMqbZhqYsdBVDU7HqzUMssrJ8eDZLdmS8fv1aTnhNK2XVxpf4LIzk
      sLSAgZlSlGt1BoI6G6RE0GAOKXwszWdNYmT6399COPrMyqdpgovDDtv2jNDdFuFTG1v56hPz
      WLU4ydmBEqM5l00rm9iyuoWIodM3WKG7zeKjXS/Wu1xvXNHE4aMBND3BzmPz2X28jcV3fAEl
      q9y/0tGFje+c5aG7ttNs/AMfbHsRDYvTJz/itZ//Je+88T38oI1AKoazkjNnzxBvPcTGuzrQ
      TQcdG03TWLhwPqmmCEq4MMmUeH3ba/zfT/8/bN33Op1dLdXXmpZReAgEmzeuhwslRs4NkjGj
      DJ6+QCIXsPmu1fiiiBSN7IxAR1M6ga94Ye8+zM5mxpIWL7x7jM91nGCyIGvVOEBo08/Uh6j2
      pmFj2jlCCBKGi6m5KCRzrALL42ONO0DfuV5OHHyamH4R19chcRdmYi6LFk83axb2pPFLKxDV
      vH2BQFNh7v1wdoBjO77NHdERDlwQJJrv584tD1FjECZ6R8r6XrMmOUa/G6foTy8sUfU888mM
      VNUEqppeQhmMeDZnK7exNTeQWvMEb+3/BZ9eMVEvu+fQGGuWpNh3dJyNK9M0pyZ2iOaURbEc
      0JGxcVzJ9v0j3LM2fBncq+8NsqDTIpf32X3oAo8/0Elzc4q7HvpNhCY5fGAHx7f/FccRdCz5
      PVavfYAPDx6h78ybLLsvfLS5U/uApzhx9PusW5UnCA5z9MyTnB3waGntJpraRjIVnmtH8wxc
      6GfBgnkNvpcSHkr5XLh4kZ2n3iM9N4pSZV5++zW+8rkv1hcohU8iGeEv/uR/oOhkicYsiuU8
      sVgclKhvJBPvCZMIFTqphiZojcQYkxKvUOZTK0ysasNdWXVoUSGTE6bc13aOxuIhCKvnwnFf
      utxzxIuwIDrlFUly/AXuWl0EEgD4wQGe/vFOHnhsOs9umhqe8Bv8BoGBpmDPjp+wtCePEKEw
      Dw69w5lTi1nYs4hal4ZwEmpUWLiNP5w5Q6gkjYG1mSuUatRWeP+3R7vpd2Osjd/eHSCIpNi/
      9P/j1IH/xoLiWwSBZPPqZmJRg3I5oOxMt2OLJZ/ulU185+fn+XefW0jFCdh9ZIxkzGRw3GFl
      TxLb0njmlQuseeBr6JpBIH2GTvyIu+4IaxB27v8BhfEx5ra8TiZdoFBIoIB0yyYANKObIBij
      b0CyfNUSuro7QAlypWGGxs8ST+i45TSdnW0zU8vi6mK6Ch+pu0TjoZLHY9V3VclQcFVVdkVV
      fmurtCY0/vRLv8U7O/Yxd0U7d6xZVjXtqsE3FaARCeVGybpBFuCEeWPVRRAUGmaDGTTRBSKU
      t6xrcLzczJL4SKMCtGUs1KQqK0MXrF5UZmgwQntHY7FHNuuzYsmiaRMglY/nDDRQ/JkWgwv9
      51jU0xPOZZ0xmsmiU9RijWEeSbWtSnWiCr7g2cFluEonY5TJupHwOprgwaYBRrxb38VtKuIt
      bchP/e9kt46wKnKMo6cL2GaJ8byH40pGc259FxjNuTieJNNkcaa/VBf+e9eHbWIujlTY9eEo
      TSkTmjczkgvwPImh2TTwwwpyI7tJzDO4Y00TP33ZY9M9f8pd965m/9630ORhnvvZOA8/+R9C
      4QcQik0bt3D4cIqRkSEee2gjduTSOUVzOtu5a/E97Di8g1Q0zWOPPzz9JFHtWaQm+hcJdCQS
      JQW6PsmaUBP+G2ikEymeeOj+KuM0seOHu4TN5EAY9b8ykbhoKkzjmVqQUyk7fPunLzJSyPPw
      nXezcf1yKmqCjr1iUkwqoXO+f4xIxCBVpelyOQ9L38iChfORlEMnq8a5ChvLnotSvXUlyI74
      dHbPr18z75scKjSzIDJO56QeNZOhpArzyTVZ3Tk1zpWTHCy0sCw2Qt63uOAmsPTwXVBCKZbF
      xkEoFkTybB3rIh/cXmUY2vQf2bPvr1llf0DvQJ7O5gh+k+SNHUO0Z0JBu5h1WLcszZ7DY6zq
      SfLCOxd46uHu+jU6WiIcPpnn3GCFOz/7AIsWL8EUNkpq+Oan2PbB65imxZwlf0ChMESh+CpK
      wco1j7Jm7Wp832fk4k9Zv1qydmWS431nYPnS+vWFEKxevfqqv9Nv3PcAn77nfoS49ItHZiI6
      NE1DSolQJhIfUasRb6DPQ2XZf/g4bx/cz/3rVnDHyhVMfbfwtHspHU1FCXyJZkAgKtT8lpfe
      2MZIpAwRg2fefpW1qxfXx3ayMMNL8qaiVAq4e3WS/RfXUCyGwZoF8zayZs2GiSicCJ1ZpQQC
      k813fYUPdvwj8dggFUcj2fwAC3rmERZ3W2wd7WLAjXG6kuTO5CCLJ5ktnhvw/ruvks0eAASZ
      1lVsue9RLCtMYHq87SSO1Hgju7Chh32L6TDgREkaLnPsCmvi47yfu72UqJ1IYT/4v9IaGaR9
      6CMqh/4LnU2SZ9/sx/Ek6aTJ8JjLmp4Um1Y043qSbzx/dtp1ohGdh9c3cSKbRVu6lIASJz7c
      xbKmHQzSwrwNf0axWKQ50sqLb1xgUU8PnZ3teJ6PYej4soNA9jM0LGlpvYF07iq0S7SZuRRC
      atMIkwIFVRNl5oLuIAj43jtboS3BD97ezrplq9D0mYW/lgLRe26Eb77wtxTdPBt67uSp33kI
      z/WwjRS6ikw6P8T2sTC9fdSLNirA/g/H6en2ScTDw4eP5ZjfFQUhWLlqNYuW9BBG9UwmuH+o
      c/9CoZRLc2uShx75nxkcHCQWj5BsCW2ygUqEHx9UaH3fQwYVhq0eYpvvqSuAW/F5/dUf0dV1
      jkwmnGTfO8SzPzzPXff8JksWh7exNYk5uV2ggqwf4YVsmGKQ0jyWxj4e73HPBwYv9mosO/YK
      iVyZsVGXjWua2LAyDMcHgWL7vhE+Olcgm3PZsr6Fi9kKHZmJB+criaHXfCcNScBg727uXmIy
      p03y8uHDPPqZR7E1xYKFi8jKBMfPD/Dcj77Dl778h9zzwJ+yf/+btLTOYfmKNUBYa7w710zS
      8FmbGJ9p6DeMmu1tGGa4+gvqFWWXWNDRNI15TRlO5EZZ0pS5grKFJtYLW1+keUGEVGBxrnyc
      p/9lDMswWTy3h8c/8xDDL3yf4fwYX3rwNzjttJL1o8jA567MYGNF2PkDf8aBAzspV0LBXroo
      TlPa4uAJg9UP/k9EoibT8jPUzJVgQoXh55DBcZB47PvgVdLeG6QSGrm8RyJmcLC3mYH5/yPJ
      898gJfchhGK0KOhckCEWM8hmHSoVwR0b/oTOrnBFF2hk3Ri95RQHik0sj45zoNTYWvHjAqeQ
      o2fP/8bnV4wgBLieZOeRETasa8I0wof78raLpJMmd69tpvdimeOnC8QjBpoQfHB4lEULYsQj
      JqllTzFnwVJO7/g+lUIfC+eZnBtPsnf+f6K9s5svtg3xzFA7Fw+/xSPq79EFqJbfY80d94Wm
      qgibjZ0tx9hfbCLr2yQ1n6faz0/091QhmyeFw2Wb214BSoGQIaVaezGGkopAughdhblcopar
      UyU1qkrheT7n+waY1z0H07xy6vpf/NX/S0XLousC11P0nsvz9T//v+g728eqNWtQerUbnoJ/
      fi8PvT8hqi5SFh2NO8CHvTFWL0uhTYoMDo/K/5+69w6z877qfT9v273N7Om9j6ZJo95ly73E
      PSGBBJyEBEg4wIHzwAP3wqUdONwTDgmcGyAB4hTiNMdxbMe2LEtWr6Mymt57L7vXt90/9mik
      sST3OD7f59Ejae/3/b1lr/X7rd9a37UW7uL7sNmvRgNF0qk0FqsFXdcRBAFRyCxG1yvG1dVB
      QATTxmBPD7nmISbnEwSWRXwehYnpBE49hqXti9x+Vx5wzYX5+ulFKtYVEAqm8PrsJFMJQGA5
      bWMgnk2RJU61M4iJwZXYh1P4Y7MjVJ/9IzZVqOiGnTODAVSLQdpucLp7mV1N2ciSiKoaCKbA
      gRPzKLJIjs9CU42HI1cWefJXypiaS5IK6oy1v0BPm5X7NoO32s3JKzG61/0p9rxyInqmubRV
      0PEHj1HbnJmQ2obOw4bdZOo3pTm75ORKzItsseIRNR7KWcAqCAhmZrISTRuy6URHQheib/GE
      MDU1TW9fBw3r1lNUXIyaSmZkQpLRjTSyICNhQzJtGKaOIrnQjUyTD9OUM114BBETlatF1qwS
      1Jb5MIQ0giGuKOPNfVA9vf14S1VKfNeafCfDGkPDI7zwwvPsnBlj975d2B1WXro4T1X8KYoa
      rq4qs2tXgK9dHmeu/busl45jkTRSpp/cijupa1yPicn546+QWjyJaEYxBBfWnL1s3XMP6CKi
      JK5VAlNCvK6u/rFXvoKUaqex1rNKEQa40hOiqMaOyymj6xkbURIFolGN8/0GVdVe+ruXKCp7
      gOW6TzOddpInJyizR2mL/GJt/FvBMDIzp+/EX/JYUQ8TSwkCqkr1BieWlWdPpw162yPkOq3Y
      ZZGJ+QSyJLKjJZsfHpxmYlHj858sRFEyx794aIa9m3PwuhW6+sNU5DmIJASecf8druKaNdeP
      9x3iDv1fkQUDch6nqWUPgiAxNtbNWOe/kDZE2gv/O483Z1Nhi2bckaYV2XCuRPMNTNQ3FbyF
      hXlOn3ye5fg45dVWpsYM7t3/W2Rl+Va9O20XO9A1jdKSIirKqhBNeyatUjcQBQlRfOvkFhMd
      VQyuWY1mZ+dpu3SMLG8+s0uLRO2ja84Z7Z1HiKTZd2dmYpwatbPpI3/M0Rf/kT0Ns2uOXbMC
      yHYP0pb/wpb83aiqhsPmXN3ptx17nnX+NiwFEldn6lT6BG3Hk2zZ8yjRSBKny36dbXc9PwhC
      wXny3eIa4QdIpPTVPcf4ZByLIlJcZMflkolEoowNB1FScaqdhzh1uR5P413Ma3bmI++8qNUH
      geSVl9g69+9YRZNQXMVX72VwKkpc0VaFH8BiEUmik+VUKPDb6BmNUpizEgQ0TCLOdUzOzeNz
      SwwOxcBglSzXVOfh3IUA40EHevMicE0BFvrbQcjhReN3SE9c5OGyfMKxL2XgvgAAIABJREFU
      OTraDjA50s49uyQsFpGuywc5XfoFwKDCHl+pvSphCGl0Ib7C77nmqNY1jfaLZwCBmnXruXzx
      Z3g9vaiKDUEQcLg04vEk2dkSkixhmgbbt25EVVX0pIKaAKsiohkqupnGIrne8l2a6CxHZ7jY
      fhq/P5d19fV0dvTw8mvfZdMuNyG1l4MHx9n5cMOa82RB547tGlNzEXLy3YRjkxyey8Vlzt1w
      jZuV/0WWZRTZsup6WloMYE+dwmJZm6ZntYgsDr/GuaU2LGKCtOHAWnAvm3bs51p/gQxiKQ++
      4huDVHWVLvr6I9TXuaksv5Y839sfwS+rtFbYEAUfkzNxauPfZY6b+J4/JAhOjbFr7J+4c2um
      k8qJ9kWSaZ311V6OTN6Y4WazSvi9FmaXkrT3hTANk3BE5eF9+XzMEuPrz81TWGDnI3sLCIZV
      eocirKt2E47pXBmW2VSdwNP3F/Twl7jcHpT5S3wu7xkA2nrS3LHXweDEGQ5fqcPBKZrrrbx6
      LEpOtoPlQBwhEOAUOaTMAE22q3kB4kpkN+PHv0oxPnfyBeqzz9E9EOaHJ75GQoWWzflMjySI
      hmVyfRvIzS6gp3MYu91GSWk+wWAEi+wgx5eDtDLbS6JCMJTG7n3z2d/EJJ4O8PzBf8ZflKR9
      IMFod5pNzRpPfgTOd04hZBdQ12BnrHuavDI/dpeVSDDBprI0c7MJSgpgNqAQlhrwWa3EhXzg
      TVaAzAtY0XhDRRIzStDXO8TG8hsDJO1dIfZs8OGwy0Am4hdPHODiGdiw9TZG+nsIzE0iWWwU
      VWxidqGXksK1M3eW10J7X4hpd4Kile+mZxJEAiq377hm23f3Rci2TDOVSiK/g+JTHyQic5NY
      1/oHuDgQRNNM5kMpUk3GtQyxlM5QfwwpLOBwSNyzM49AMM2+jf7VVbe1xsexrigf2btiUlwJ
      MBuxM+e7H09ZN01N42DC2KG/4u49FqaTcS51q2xu8uG2pBAFJzXFBgfPnObRx3KZnopRWPck
      +vJR/mTfRV7smia048uMJtxUWUPYV8orXu3jJZo2TDSGhi6wMHKSbENndDrGnh1ZFBXYOHwu
      l89+5otYFQeaqiOKEqLhxNBEjh9pp7ysFFlK0HH5OMlkCr8/i4X5RcrKSmjdsP5N36VOgqm5
      Mfr7B9lVXIIRCZBXaNDdq+JxK9y21c1/PjeKxyoSXlhkYC6A3WXltiaB1iY3mm5DkUUOvuDC
      98D/zUz3JWYG7LgXJ8jNtpJWFCrrbhIHMAWB+aSLHDmCKRgIgoTb7SIa03G7rtvkmiaBJZUe
      PYKumWT5LFSVOnHYJZIjr3DhpQ5KbJPU51lQNZOhgMDhAZGWdTpWyzXtT6V1fA4FOSHwwvPT
      SLLAxiYf0nUb8XBExetRCMQkJOUXH+m9FdwOCUSTk1eWMIGEqnPHxsw+Zbtu8ONXp/HkKdit
      ErPTBjOu/bgsMdBMUvZ6BqJj1M32oigio9NxukbjpO7+J/657yzrvCDmjLNgSizLpTTWyzhs
      U6iaQXNlmsI8JwW5Hl45F+VIX4ocKZPZNTIlUFKajSQKFBU5mVlUkC1W4FoS0V53DKtoYJhp
      RN2GIFgwBRXRdKDqCeZ7f8y9u6w8e2CacNxJd18Mw5CorN5GX88A1VW1ZPn8iKaVhYVO8vPz
      aFrXzMzMLKl0iNqaagRgamaGeDKBqmmAkCmmYKpIgoW11BcTU9QoKMinqqoK00gzPR5ib3MO
      62rcLAXSDI3EqCmR2bQps9p+9d+H2VJnQ1M1RkZjVFVmTKxyfwRv1+/zscolXJ+Q6B+yMzgU
      Y2uLjRePxm5iAgkwnvRQ4EkzMtjP4vgwhmlweizF3Xul1dmpqy9Ctl+hoc6DIgsEgiptXQEa
      q9woxEgudLPoUpiej+FyyDRXewiGMrEGh1PG61EIhVU01WBDgxdNM6itcJFM6ZQVO3A5Zc5e
      XMY0wOWSaa738L2O1lvW+v8wwLnUzr7WHAwjs4q+eHoWwzARRYFITKPB78EmSny/TcHY8Rvk
      bLqHOV1DlGRMXWdn/DeZXkjicyvsaM7C6fHxalYW0rovMD52nIcbjpDjlZgPDvDtzg1IHgEt
      vszUUoKcHAsT4wnMBCRNGEpWoDkaiQeG8EoTtF9IsxTJZ/c+PwsLYc60BZiUd2NDoj/holWZ
      5fLpl1Cnfoal+DE27vxIxusnaxjWYo6dv8Rtd+fSN5xD644voEYkiovLmVkcxul0I5kOBETu
      vnP/6vsoLysFQFiJApeVlbJhfQuKnOHsmEIaXYyyFAjScaWD/JwKWho2MzDcAUqaiopytrQ8
      yIEX/hZJT+P1ZPZIPo/C2ER8TWLLlg1etGSKnbuuOUbicY0ab5ANjRqj4yl6+zLBt9oaF6+c
      nKM633nzSPClsJfEqW/SIpxnnS+jmRO5Ni6fC7F+i5fRiRiFeTZysq+ZRdlZFrJ8Chfbgwg6
      tNZ5WQiksXlFJEmgbyzC+moP7VNhqkschCIq1SUOnI7MLXQMRampdpJOG1zpDrG+0cv2jdmr
      4x/r9RKt/wIfzq1vBom8zcwsH6IwW2FiLs7UXJKnfjpOjs9KSM+l1mfSMy/x0HqQje/w6usd
      rLdeoV3YS338JG59GmSB+nIXoiDQUgYvjl3Cnl/JwuIyWWUZ5fe7RfzFFViFFLc1mZy+tExk
      XCNHsuB1G+gi1DWG+M+fHOXXH7dx+kKchbkkPUML6NFv8tkHRK4MymSPPMv84ifQXVYQdGKL
      vZiGytzgT/AWlFJeXYmJwdb9n2awfw/9oz8ju2AjWVk+LN6MeZqbXYJOxkWdycG9zrYXMo5z
      08i4xA1Dx2HP/IKGaaCjgiDw6uHvUlQeZGD6MIaQoq6+ZtXrEwlHaG10UlaYzaFj8zTWexif
      jKOmTVQDVNVgdi6JzSqycds1k1lVDY6fWODRuwu40hmi1G+nbn3GTJ9bTJJM6IxNx9amRF5a
      ShI1RNTLP+EJ92GyXdIq58PrVMhz2PjBcZlQNM7GxhurvQmCgNUqcfL4Evk+G7k+K4YOMwtJ
      RmfitNR4GZ0yCekuSvMzIf5U2qB7zELKcxtdHZOkY1EspsjYRJyp2STTMwmudMfpLf9r3AWl
      76e8vu+w+os4Hark2PkpguN9fOq+MupKnbzWJWD77A/p8d2J4sjigcIB8twmkalO7mi1EB5q
      57YaiCd1ZpbT6JpBTpaF9sE4YxWfRnFlIXryWeo9i1UPc3I6j7mG32B5qgdhvpvWOh9VJU5K
      8u3keq0cubBISjPBlJCFFJpucv8d+WS5JVKJGLFYmpwaOy3rPYR7L7GteRtWFEZnVTbWj1Fd
      bqWnd4Cy+p0Z6oIokpubi8tXjzerDKfdjaGb6IaKItqQBAXNSKMaCTK5uErGxWlmmJxX+xuz
      Qm/OMCIynXtUPUVH98tk+SVkRWCoP4bP46Dzwk+YmZpgw+ZdHDtymtGxOfr6ohRm23HbZba1
      ZDMwECGwkKLAZyEU0ygstKNpBt1XgkRm09hFkYHhKDXFTgpzM4qn6SayJFBd4uLA8bkbVwDD
      0FkXOogj99ry0jEcQjdMmio85GozON9kB5/tU9hY76Ohwr36WUmenbaeANMLCXTRTcu+P6Cv
      +xLJhSVsrmzq9jXhdHq4rMiscx69wVV6rM/BXEHFe5HNDwyemi2EDJPL33yZ7pEeHtlbiGfP
      b5OjJKmMnmDzvnWcOd6MgEBWnZO2gTMUND5En2CjO8fDTPd3ScUWiUZ1uiMF2HZmGLeKK4uR
      TV+iZ3ECe1UpitVGquUznHilj60N12gfdqtEIKxQ5niEukYLwbkfIcsCgyMxUmmDomI/Z3st
      PLwu0+ExPtOFOhdGyS+mrmY9E8PPUVoAgrUIuMqXFBkZHqat87vomkF61oYI5BZXc8fdv4RD
      8WGR7BjmSrBUyFCWr3L+M6UUV7xKwvUN/gxkBeqq76Z/6DVkIYuNG7cyN/gNWmtMVG2Qy+dN
      whErgdk4TbUeFpZSPHBHAaGISkG+jZGxGIokoKzkNPR2hthW48OiXC1HY9DRH6IoL6MAsbjG
      9HyShmo3rfXeGxVASyXJEsNcpR+f6V5CQEBNwNn2IKGIihm9NTNc1Uws8loBXgimSGo6U4tJ
      nGKKzsPfpGL7R8nL37nmuKYte2g70E1r6QI2a2aMgSmDjuzPYrN9mI2fa9DSKW6f/Hv2frGF
      873LHB3389u/WovAPIJ/GwCb7/xlRNOKZDow9E8hShDVBdpefZH/coeCQAEvd2gEtvxXZEMn
      0nkIAFfznbiKrzE5FVcWsdonSKT+A7s1Myklkjr1+QpNDTsoKqng4CvLTI0eoMxjJynIdM/5
      2LKpgMDYecYSUWry3KtlzUuLyoE/o3tygN13toKprsZxZmYmyckTmZmIEJzpp8CvoE/18+q3
      j1C//fdpWr/jmvCjYwjaaovaN/aNeCP7d+uWXWxs3YYkiUxOTmA604CCIgvEQhPU5iXYtLuS
      oakYbV1BfvbKDKGYSkO1G5ddprney5XBMKm0jphiVfgh46oXBAFVM1BkEa9bwevO7CWSKf1G
      BZCtNgKGB4ii6ZkbTcVNttZm7KvB6Shm0lzd3L0Ro2Mx6oqvmUeptM7QTIydrdfTFRY4evAr
      6Lf/FoUlJaufRnAz2vp3tHUcJCvRTVJwkSh7AHth3Y2S9iGFoanoyRjgI21YuOvxjyMaVkTB
      AqaAZNrW2MlX+fFuCVoiJ/AUrPwknlwspRvQzn2b389/GYDvXJolveXJa9fSNaTscr56toRd
      nk4kSUDQ4Yl9ebx05RTllXU88NAXOXlAJZY4Q47XQZ5cTiyeZn7RjqnFqGp+hLzrCv6WFJVR
      WFiAgIlhqOhmElEU2LRpG8eOL2GkpwmFJpCMFFt2F5BM6Zw78FcsDTfTtPeP8Ptz0IUUhpB4
      R1wiURRpP3uYyGIPU9MqpmkyMpYgqFWxt8akMNfG7EKSTz9SxvdfmuSTj5auFhA4dXGJDfUe
      /uTPrvDrT1TcMPbNeHdzi0msFunGxEpRlOj13k08ZSBLIppuri30IJlsr8/i2InFzHew6vWY
      W9QwQgI+9zVX5aX+EFubb8wou229lQPf/w80TUdNq0RTBi8ulhMT3dg3PE5yx5/C9v/6f5zw
      O499mehymh8dmWJeqqCxdiOK6UUy7Cueklubj/aCbYTjGuGYhrNgK6Zp4kuP47SJOG0i6xnm
      Lk+CKqtKrqyjXPomT0b+HGnsDDMzSbSEwZ5mP+NzCULhawzPdZs/zlCggeHROA+UdFKUbGNb
      iUR1y+Ns2vUAupnGMHUMU8tQHQUbkmlHMT3YyOPln77MxdMH2Ny6n48+8SQet4eGCjc1ZS6a
      a71UlzrZWR+i++w3UMUghhB/x0S6K+cOU2U5xK7qWe7bZOfk0RA291YefPxROsdtTM0lGJ2K
      47BJbGzyrgo/ZPKtHXYJ7LnIokAqfe3aqbTO9FyCpeA1+vXsQpKnn59k3tpycy+QvOERvnN+
      nvstr1NV6KR7LMzfP9sLosj+bVnMT2o0OnwcfH4ed56E2yazFBMp3fwpTNtRILY6Vlq/9Ytw
      mvP88N++jhgaxGEVkXM3E2j6PM68klue82FGbHaU+2zdlDTn8WpPmPXbHkbGdctkjjdi876P
      0tGRUfj7W9ZzPxEubniIo5fHUAQo3foIJXaVBnsmsbzNmULUVRrLbbgcMjNLSU50LSFbRBqb
      t66O688poLionO0500iiQHWxE4dNIjRxiJmF9RTklaKpcOLYq+zf9yiSJKGqKhbLSlqjPExr
      xSRtbSN4CvZS5E4zOavRORjGZsmYFbGExuzsCJqeRJLf0JDQNDFNc5XabJomhq4jyRnxMzGJ
      L/fjrMx873bKNFRYaMjt59UfPkWNN8yFzhjTs0niCZ2LnSE2NvsQV9yg/cNRdNOk3G+jusRJ
      Z18o464XMgzUXZty+aeBj5A3l8Q0DWZTeXgeasBT2biWDPcffUFmVxpWm6ZJeOgyet9hjOgi
      mq+Cnds2kHjtf/FwS8b9ebZ/ifXb3NhtEomUQZ92H6lIEH/gMA1VbkRB4EznMls33Lx251M/
      HWNTpY+tDde+bxvROVD9pf8jlcDQVLKPfYnK9CCF25+ket3G92VcfYVcJ70hBqJpGk/9y1/T
      mN3DpXEfBUV5ZDlTWP3b2bP/o2uOPfPi37KzbAJNN2jrCiHooOomhzsj2ESR6gIL3txSClo/
      QUVNCx1X2tix83YAzp99ltD893HlP4aqe9nneoGTgw5O9Kb4yMYARXk2+odi+L1WTvXL1G+9
      m/rWnYSCQWx2GxfPPIVgLJNdcAfrN+0nmY6i6zoOuwdhpdLH5TOHqbG8jtMuEYtrDI3FqCl3
      MTAaXc2dOHVxCatFpK0nyLpaF1aLSFozWVhMEQiq/OruMi5PBtm00bvKwhEEgWd6awjv+CuE
      m5DvbqkAN4Nb1Ki98r/ZQBuKLHCoa5lde9zYrSKJlMHpuW0k+17HKiWYmE9QnGNjOaxSXeFk
      x4bsNWOd7wwQDqncv61gzecnLi7TN+sklddEYPOncRZWvIlofHhgw2CvO0W9PY1hGGtzX98m
      MtTifpqaGijIz1/znaqqLCwuUVR47X2FwmHsNhvtV67Q1NhEn+HGqiVIDLZRXl5NNBKiqKQc
      i8XCq8/+b+6q6uJ8Z5D1Zdd5SVSd013LhKIquT4rfo8DofG3aWjZsnodE52EsYhFdqKqKheP
      /oSxoX58xiDReIp4WsfnVnhkXxFnO5dpLHfztdfi+F1JlLwK7tqbmZFHJzSySj5HVq43U/wK
      EUmSkBULnRfbuHL0WfR0lKpihV2tWXSNy8TiGrubRBJJnbaOALdtzkHTDZ4/Nos/x0IipROP
      GbTke2go8ZBI6bSPB9HkzKTRuZhL6sGvIdlu3qTlHRXKjxgyiU2f4uBZhYX5KI13tHJl+jiE
      BxC960imYGOdQnmBhzPtAXa3+EmkdI5cXOQbryVpLkwgCRCO6cwaRQjRtcSkExeXqXJnsS5L
      BIY4dfLP6H3wX2/amfHDhvt9CUqsmaKx70b4ARLJJKqmcenSFbp7e2ndsB5BEEilUiiKwtLS
      Mh6Pm4uXLnPn/tsJhcPce/ed6NExug88RU/eL5OovZ+NiSVmDj2Fy2Jw7mw+jpoHqBAvc7Yj
      gqCLa70kioTLJpPtsjA+k0SNJ0jOfBUt8Ws0b70dQRDQdI3JiXHKympRFIXKlj0Upk9TU5SL
      aZo8c3SarqEwuV4rFknA61LYXqKytyWfH14YATKTn5pOk1KT2GwFyLKCpmdSJTvPn6DKPETr
      fS5CUSv/9mKa7gU7hQV5ZOv9/OjlZdo6Qvi9FgzdxGaVuGtLHjZFZGYpSX9/jIaSTDN0u1Vi
      R61/dV9qGAIXxVuL+TvuFNGTzmXz3o8TTPiYlzRqrQIlZY9hszj42z/9Ox58xEYiZeBYccvZ
      rRJOm8Rs2WeZz61Gm+lCKPThrt+J5/T/BIZWx46GTCxZ136c7YUmR7ouULZl3zu9zQ8U1RZ1
      RfjfG7KyfNhsNkqKi3C7XdTV1iCIAs88+1PW1dVy1523Mzs7h81mRZJEykpXAoPJKTZV68Sn
      LnFpeSPixAsEg2Em4zoeV4yJk//II7tziCYkTnfcyMg1TJOFJZXbG/NXqS6LIz/ghOTBUr+L
      pWNP05B8ncsDO9l030MrjU+uQTAE7tmcR0WJk2//bByXQ8a/UvWizGHle88EKcs1WY7m88Su
      YmRFRk2nkWQJSZSJTrbhqc+4Jr0uheZqieWkjWLaqa928/W2GPtbs8nPttI9FuGROwrxuTLH
      VxY5mZtL8UbczEN5M7yrVimjSQ/rnSFOhXMYXCjhM2UagUCA7U0eXr/YS1m+nbH5OKYJgUia
      lOTFXr0Va1Y+lF/jbi80fZ62oT9kc0XG2yS9oSbWcjSNozCfDzMsgsle9zvvVHMz+LOzuX3f
      HgBqqqtWP//Cb/z6mmOaWMt/b9z1q5xvP8HG3XtYHl/k1RNjtJb4EASJxXmdYCpzfy67zORi
      gpSqY1UyE1RK1Rmbi7OpNGdNlYccl8RrnSdJleyHlEydKTCcsrDJFLDIHg5cgamZDMX7jtY8
      nDaJF07O8Kk7yvlpv5etuXP87MQchy/O47LJfGZ9LaAzMDCORUuweO41AHK3341o8QLX+h+n
      Q3NUe4NEohqHzyxwe2sOe1szpLftTdn8+Pg0j91ZtHr8zWotXcWwWLtC/rs53pUCLGlWLkYy
      p9rLm3iu/RzK63/Nk/dlA3kMTkTxSlYqfG6ioRBtNV/AlnWjIDvzSjjAl7jQ8Q3mh/rYvK6V
      yzPjtOQLLEfTvCjdTk5V/S3vQ00lkWQF8V2aHO8HNjpSuOVfbI8CjyeL7XsfAkAYOc6ndlVg
      W2HcJtM6XeNBznUF2NaURWOFmzNdyzhtMgiZpPwNlT64Vb1awNj+aX4wtRd/SSUdi3OMPv0P
      jPcPsb+uFFkRVmdjv8dK33iU4opNHLwQoJAIxX4He9f7aR8KMRvUqLxfJXn+JTbnZc7pPfcz
      8u78FU51/AQ5PcNcQERPS0RCOsVOF/3Tc1TlXatJJYkChn5dnklCQ8dkYCpCbbF7zX1fmLGx
      2PBrvBl5/l03y7ra89c0TZYPfpUW77Waj2UFDv75+91EUxqypGAWta5+p0ZDKKFxslxWhueT
      ZNWuJ3Hn/4P7ThgXdDxakMujr9NjqUcpbbnptdOhJeSD/0JFuJ+YaGeq5Qkcm+6+ZZ2anyfW
      2d6/BnC3gmHobyt9EEAOT64K/8BsGJ/Dgqqb9IwL1FdobK738eKZIEW5ToqyJHTDpG8iQjCU
      IN9nW32HcxGd5Yo7cQKiJOMpq0cF5tIWBgcmqcr20N2VJComiNXqTC4mGZqI8pl7KjnTf5ZK
      m8RtVSXMh5KMBkKsK3dxzHI7NRYnduWaAHsUE1mW2P7475NMpgh88x+IxSap9WYhCgJeq4Wu
      4QhbGrKQxAypMpnOFA8LRg1GpmKsq8njudR+coeXqTIHgMzMv9jwa9jyKt78fb3jX+MNMHQN
      M7ZEebWD0ek4Rbk2Tl9e5vc/VkMgqjI8lKTk4P/F4uP/jCCK2Jf68F7+LkpRPa7mJ9eMlTQl
      4niZDtlwjv+IpK8QQbFjLI2jdx3L9Cfc80k8L/1P7rZPI/gFIMFC/7d41ebC3bTrvT7OO0Ii
      uMRrrz9NZXkFG3fe9r6Pb5jGdWX93h5s2cXMjrcxuRzHbpFwWmUUSaBx768znVNMMBhk/2ca
      CQUW6ZkYZGF+Fsk6hZorc2ZZg8Q0UewMVz2Bo37HDeO/9oPv8Idb84imNAZmwkyOp1mwV+PL
      yiFq7eV45xILho96bwJJFCjMsvPacJLT/vvJv//zzFtDWOXXydEWMIEZOZ/tpUWoqsbs1Cy6
      ruOzW/C7rfjdFirynZzsWeDP/rUHp13C45LZ3JDF6ITKwPa/x357He0WK3ZRJApcTGf2A7LF
      +qYz/1W8ZwWQZAVp3V0EowcIxzS+/dw4f/ypdfSNR2gq9zAzqZJtzDKTSpJamOKOtq9Q6ZMw
      gqf40WtheOiP14wXP/I0j4cOYBgmPz3/En5tAXf/a2wrzVApvvpCnI8ZEwjCtVvPdUi4ew/D
      B6wA7lf/ga2OcUIXTtLl9tPU3PyuxrnaVvSNATNREG9ZP+dWyPU7ic0muOf2bCJxlVfOzOLK
      28TWvZnixFfh9Xopq6hec25PXOGVRQFRVrDdwqxUR9oZJ4Yh6+xan01zrYdnT56nriIPZypO
      wKzgns9/jjPf/BolRpyluE7qtt+hYOO9AAylfTTd9wf0974EgsDmbRsRJZGz33uagugYibiV
      kYCLLI9JjifzRvY25rFrXS7Pn5+gssRBSZaLdteduCvXk6OoLKnXHCdvZu/fDO9Lv1DLbV/k
      +LlczLlutEaZ4/29lLpl+hZk0p4SPI3b+WLlJM+88q9UruQXiKJA5ewJhnV9jQ1vj85hkzMF
      VWyROQJ1uwhGk3j1TEKzraQOfeQ8AINzYQbnwhRnO0jmGG9L498LTMNYk5CTEix0TQbRTZP8
      VAxjTbWzqwV+zev+f2Myz1XGpMiNVbHfKUYGe/HNfZ+mdZnAotuh8LE7ijk0mmSs62Wc/iZy
      Ctb2JwtrENYFzkVtTGkK8lvIj1y9GUF+ncaSTGEEr0PhM3dXcOrKMqU5Dk4NjHDi4gSdG36X
      C7NDSFXFuOs2rxljWcxhe30LqmLDalMwdDBDS+R5ZXJ1Kw/+3l/wkxfPo8weId9hkDREehN+
      ilsLSFrc/IANSK33IfSdYoO1n/O+fUSyqm92u2+J90UBRNmCc9cngUxd6SuJGOcWp6go8lPk
      SDFjeJl85iukx9sIVxfhsWd+7Olgig3OWfpS17r26fs/xzNHvwkIsP9J7O4sIs48Llw5hOrK
      IW/HvZwPDuFPnCMYT7G/MZ+eqRDSVDfRnnO4Gra9H490A5KnfkDL4NN01H4S285fIth+nJrp
      y9SWZKKUg699kx57gtqW6+psmpmm4nMz0/Rf7MTty2X9js0ogn2ll3ISEJCMN49zXN8a6PoG
      5FdXjLGxMc49/ecYuRV8tOnGlFG/NkZBfImOgVfJeuh/IUlSJtKvwXNBN2Hj7WfZSeUbqBcu
      3PB5KJXiYn+AvVWFnOqewfPQo1B18xVxSbVxytzAbNrOvbGj9P/kOcIBlSOOOm776H1YFTv7
      d9dwamkfh5Y0ZIcHR34pUyumoAWIH/oWH4scRJEE/IGjLD76Zayed94t9KYJMe8VkmLB6vWT
      EB3M624ihgXx8g9o8CaJqmkOX54nmtLQTRVPjovC0lJm0hkhkKx2xLrtpLLKMDSV5OIsu17/
      S/ZJU6yP9dLd04/0kd/j0qLJZOdFBDXFxvIcmvwy3tEzDHqbsPhy3vMzvBGuC09zZ1GK0YUk
      4dxmthz5GyrcAiOLEfI9dnJsItNX2nGs24AoiizMzuP2uhgfGmL4PCorAAAgAElEQVTw21+n
      NDwOo10cO3WBmdFeCupqERUTBANDSKELyUwhKERMQV9RkAylWBfDGGICQ0hgCBqCKay0GTIx
      hDR2p8JiSsPltVNunb3h3vun4kgWgZBURW7VdvpiIodDNk7HnaTeoY0lygoFwy/hdaydOwfG
      49yzrpS4qnF5cBLPviduuXfREYhhQRBFpr//r2xjkRIrBNPQuH83BipOl4McKUJn1I+rsPyG
      seQrr9AkLQCgqmmGina/KwX4wFqmz67/LaYPfYWybAv91gQ11nnK3U6mzl1Bqf3Y6nF6OoX5
      3D9SN9nGwEII0+agojnj3hJFgcrxk3R+dZQ6a4IZJcP1uBr0KHUJpEY7cJXf2nX6brG853f4
      RscrmHvuR73wCnU+iZGFOKFkapUaXuFV6DhxFCMcQRwZgM99kb4jr1PvzMzaDotEYWCGue4p
      lpdvo/NyF3c9cDdqWkOxSCDqpM1kZnYOhMjKWUsfyZQrSaOJaUCElXKGohX23n8vgeUgHa+e
      p6Xk2s86H0gxOg6H+2Xy795B20L2NTPuXTjNPAUlHPA+yuPh5/B7MvbS0Y55rIaCKAgU+hw4
      hiaJz0/hzH9rPlfakFbZxrqucurZ51iYmsHpsFK8aTOSpeKm5yVaH+LysV6yxSSvTos4TR2L
      YJA239kE/oEpgLOiBX79PwgAlZrKyb/5Ze7KEXBYAiyqMoaaInHkB6R6zrJdm6F9epGHW8v4
      4YURDMO1KuSabtDCFOv92ZwOwVI0hW6YSKLARNTEuvHmrtP3CkdOIez/DABxNRO0qcx1U5Hj
      om82TCypUp3vwUilKGhuZFYQ8Pl9N4wjyDLVj32MgpIC8osKOPa9p7h0sZMnvvjfKK0qYm56
      lqWFRVLJFJtzsle7nqyczbWevDeybH3ZXiK7PsPx48/g1uZIGTID0xbuqfFzYTzEcPO9SKKI
      W9TIUVQWVYWI8c5FwLrrV/jyf/8ZtfoYc+EEn9xZTUcwiGGazIYStBa5uBJcfFsKkPfQJznx
      8reI6Qrh+j3c1fttXJrG6GiU+flpxMfuuel5joom+rK/TOKZ/8Gn62YYevmPOFT5CYru+vg7
      epafiwn0VhBFCQprWIgkcNbXYFVM5s8e47Hlg+gLM0STGl6HhQKfneVIiq75BPFUiv65EBPL
      MXZW52OYJinNoLXMT+dUgNPxbIZ3fwFXzYaf+/2HwhEali4gSyKD8xHynXYq/G4ujy8xEEiy
      7e69NO7ZhqxIKF4voxcu4VUE4qrOclE1W++/A0EwiccTnPjWUxQqBpOTXdRt24fX5yWvMJ/C
      0qKVNEI9w61f0yIKWFUMY/XfJhpunxvN6icy1k7CXsb2Jz7Ple4hpIZ9bGqsZq8nznaXSp1N
      YyRlJfIuf++prnYe9CUo9tsp8tlRdYNXO6epzHWh2BzMND+CxeV5y3HqckXGah/GXH8ncl4l
      /WdPMDkyRE2eB6ssMVK8a9W0MYy1bmHZaie780Vq7El8DguHz3WTe/tH3+xyN+AXogAAlpxC
      xKY9hAtbKfHJGJcPUWUGWYwm8VgsJFWDw73T+PMk3C2bsdihuUAkFtepzvUiSyLTwTjBRBrd
      nc347f+NhA7u3Pde//6t4CiqpP9KO3XiMoF4GqciY1UkRhYi3FnoYPRsG2l/Lll5uThcTpYt
      Lg6/dp5Ji4/7fvPXOPijn3Hwqe8x1DdIidNCk9/OnKeSxs0bM/Y/BhnBN1fMnhVhFzK90kzB
      WPnu6t+ZPwYGCDr9F86xtzjA7OwiNbsfpWLLZirrSsm2xLEJEhI2ZlMyZ+Pv3m+mWx2smz5F
      Mm0wthhjKZxmfWk2RVkOTlgaUbY88LbiF3JwnOTRH7LU20HanYtUsZ7qYDdui8Al3yYsW+7H
      UFVSr32bnENfxXbhBYJLy4hljYiSTMBVwsi5Y5zvGqHVB9GRHozG2952D4N3RIf+eSI+0kXd
      oS/hMRN0RqzUiAnCQoiHb89jMqASafwoy+3nWV5YRDRlbPEw+PNpePh+CksL+Omf/7/4jTgn
      cvbh9GVh3/+pn2sRLdMwiBz9ITmXfsz42ATr8r00FmbhtWeu2WXY2fWbn+PZbz2Lf2GWGkGl
      Y3aZUclGrZgkGE/jclhI5uRTuL6Z2x66G1G5WovzesG5VaO3TNeUsb4hBo+cxJrjZ/tDdyMq
      oKsml14/Qn55NRV1dat7hasQTQsvLhQzpb57BTAMndnv/A2tc6eRJRGbVaTM7+T0spXok/+E
      4nrrZoXRxVlqv/+HNHszz3thcpkLUYmS8nIWyrdTcNcnMpUjfvoVHohfQJEyQq3qBi85tqA8
      8nsZtuylg9zX8xQOi4xhmvxb5ecpeZsEyg9sD/BWcFQ2MfRLXyYdDpDrFhn87u9h11XGl9Is
      6i6aamtY37opU01MSKNpGvLVjCIzU+rCIcs0TL7OHks2T3VU4t+0/y2u+u4hiCKe/Z8gUNaI
      ++m/YGuFA/m6WceMxbFaLRTlZzPXeYUBSWRjeTbC5BKtpTk83z7Gzpo8rozPEEgkOabrlDZU
      U91cy5v3wl0ZH51wMMbw09+nxiGiLU9w9gWB3Y/dj6jA9nvuRde1G4QfU2A66XhPwh8b6yP3
      la9QlU5yUc9DCC2h+/Kx9izh+ciT2N+G8GOaBI4+hx5Zojsu0ViYxeaSbKY6RtkpWbAuvMzh
      Izpa851sXDi/WvUBQJFEmubPcXlxBmduEYm8WpYvmzgsMB3VcBWWv8mF1+IXZgLdDLLVjijJ
      5L78l2zyJJiPJgmV7mbrwx/H6XKuVBvIJExfz7kXkMlvXU+ssJyyLZsYSYp89MEmZEFada/+
      vGDJziddux1L1xFyVoJIumHSW7iZxcq76FxUWLbnMo+dRCLGVPY6Lg+OkWWTeH1Wp0DWWVgK
      st2SovNEG3nbNmGzXxPOy2cuo1gUHE7HDddemJ0ndekSLouEKAgsmApVmzespgNebwZMTc7S
      c6WXnOISDgeLSRjvfqWXDnyNu5UZKhwmM/563L/9VXx7HsW+9wkspW/PA+eXE5Qd+f+o8VrJ
      ddvomw2R67aT0FWOD8yyqyqX3OUBXu2cYIs4h9u6dq5O6zrDpbux+fzYPD4GnDV0BU3GNv4y
      3sp1t7jqjfjQrABXkQotUW0JUux1MG4pYv8j96FYLGuirJm6M9c2Q6Ig4svy4MvKuEsrGzOl
      Q1o9c/QlfER/zs3yXEUVdNz2B0ye/Da2ZIj5si0o+z9DImXDtX4PrvUZinNQU3FKMkokSCgc
      oDS3kP5DPyK0MMv52bNYS0tusF1btrbc0p4tKi1kqKyS2fERYoJM7aN7EVAyHRqvJqWbMD05
      x9S3vk6RQ+abHYtID//+e3reqK+EU+eP01CYRbysDHNxDk9+EZJ8LZodW17AmX3r/g2zMahK
      xBkJqzQXZzERjLIUy5SFfKC5lMvjSyzHUvyyP85STKXIvTZEPWp6cF5XKM1T1wp1rW+8zFvi
      Q6UAeiqBf/IlemNpZmwltD70ILJFWvGGrMX1G6xMP9mbQDBpdi5zJlxw8+/fRzjrWknXtZIy
      TWy32PxdFRCrJ2vVs5F3/6fwjPUSPpfkro+04vGupfTeLLtMVTUURUaURPZ+9hPMjM0RWI5S
      XpvpExCLxnG6M6uIgMzk6CyFDhlJFHAsj3Fj+sg7Q6yslWFPPmcGe7C6SrDMTzPb34XN7SU4
      M4FssWL3+DAGuhElGYvdQXHT2vxoxeagvXgPG8aP0D65xM7aXFxWhVOD82wsddAzE8Rnt2KR
      JGaCYSQpRH1e5t2MJUyid3wG2WrHKuikTGklBpCh0LyTeMAHrwCmuaao6VUYusb8S1/jIcer
      bLrNS5tWR27Re0+GqXeEmUt5GEndaEL8PPBOKdnjh5+jdLGLexik7/UIJbUVb3nOiYMnuf3+
      fQiCQFf7AOgicwe+zpzlr3D2/gTnUieJnCZ2PPEkAiLe1tt5rmMOb2CExb2fw/2G8UJTowQn
      hvGVVuMtfmv7Oau4nKnAEq6WXWjpFFanm0QwAEBRwwYQIBkOkU7G33QcvWoj8ZHXcFgk/E5r
      pgTnCk1GFkVaVwiQhgmxHXuZtGS+Ezz5ULoZu5GgwR0nbiiMJpyAeKMP4S3wgXuBLIK5oqlr
      ET30bR5dfhUBg65kkJaP/xYllRVvOV44GKbtJ68gAFseuw+370bfs2pYmEu5WExb6Y97CevK
      LyR34FZIjvVQfOm7bLln24oCrBSVvUmw6yp0TefIM8/AyHkm1SwW7v4bdpZZ8Lzw22yo8nJ5
      OETdp/6apOLnhaWiVa7VGxF77p/Yu3icAo+d2XCC47l7cT7yuz+fB30DkoFFGn78B4yNT+Cx
      W7BIIvGV7C7dNNldlY8siQzFdFp/74t4fBnV/e7JKPGyHTja/pPsXY+yqNlJXyUTXqcAHjHF
      3f5xzgazmVQzyuSSVKL6NVPtA98E67dQT+XSi7TIyyiSyJKrjA133f62xjv5vZ9SMz9GdixE
      18QilRtvbPosCToeJUmhLU74ynE8FrDa7ThlldCPvozecwpx3U4MXX/HPXDfD8i+XIyGfdS5
      gwwPjGBVZF7+8UGKSgqwOW7urZkeHqF64QS1hW5GpwOU3vtptufEmB6fZGFqjOGwm+XBSS4K
      NaTcN4+NBI49y+NLB1ddty6rQm1qggsBAXt5w03PeT8h2x3MxnXuVKYp9jkYmAuxuTSXPLed
      pKZxKaLQn91C6YMP4SgoJzIzgcVi4aJlO1o8yr3FYXJ9dkbTWeis7AsBt6zhljSCuhVJMKlw
      RJlPO7jLP8YO3zQ5SgIJk4Bq+/B4geKufLT+M8yrUP/Qg3iy3oYrDRi93EV2LFMFLeD03VQB
      MsjMqv5sNxM/+DeUztfY0pKLfvgnOJfHCXSfI//ij1gw7Fje0HTug4BmCkx99S8oH+vgu98/
      wAPuJAfP99O0Ywuqpt6wFwgvB7DNdaFIIiHRzf7drdglkezydUTdNaTmAqxLztI9uYzQeHOf
      uPfof1BrSWCaJoPzYfwuG5IoMr+4jL7h5hSE9xtSyTr6wiDP9FPqlumZDbKUSDIfSaJnFaE+
      8ocsuGoYSuXQMa0zRwGhpE7OD/8Epf0k42kLjuQcqQP/Ttb5p1EGTzFt+FByStAQSegyYc1K
      tXWeAmbQ1DQuMUGlM0qze/nDowCSw4Nzph2Ly07jnh2IovC2zJScylK6JhYJOH1seex+rLYb
      Ce0iygoX32R+egHj4mnsagJbQwveDRsZWopxjzRLqcMkOtJFbMNHfiGNOJQLz1Ns0Zh1ZDM1
      u0TF7u3IDgtLC0tk52Rx7vh5UimVLL8Pp8dLx0ScjoCNutvvxZudxcjwMGM/+jLhaJR4Qqd9
      cJbYXV9AuUk+NoDU/ipVcqaKn2aYuKwZ02BYc35gCiAIAnJZI7NVe7kQsbBHGqe52EsyrbG/
      xELXj75O8cBBRqQ8PNUtJBU3iYUZmgd/RrFT5lTHMJti7bQ6I5Q7DaqUKEUz5+nSclDyK0ib
      EilDZjydxahWgN8OHjlDOJQE88OjANMd53l46QC5apgDXVM0bmx6WwpgtVmp3NhE5cammwr/
      tZ5XmTXA7XUTtPuQa9ZR1VBLVrYPWZFZar9Ex2SA2XAK+bZf+cD3CIIgMOsoZurw8xSbaXyb
      NnLbxx7A7XWTnZPxGDldTuLxBNk5WYiiSHFtDTMl91GZZ8MiaoSCYWIDF5lcTlOdDlLgsjBU
      eSfWW9DDF0NR1gW7kCVxVfjTms65svs+EBPoesg2B56KdYx2XESfHyfbacNjt7AcTeJz6Gw3
      LjN4+ACunteJFTYx5ShhIGJSpE3R6F/ry3EqEB7pJtRwL6IkIwmZ1h1pU0I3JWpd4ZUV9UOk
      APasHPpf/g6qGsMnpylo3Yp8ky7hx46cR5Iknnv2Newr9nF/3whWm5WR4QlsdivptMrQ4Dhu
      jxNFtq5JNRQEgdziAnKLClaF3OF2c+iHLzIXjFOR7SC46TEk5b1naL1T2F76Kg/kGRS47SiL
      8yxk55OXf62qts1hW1WGq/ArCZbTDnxyGl+2F3fjVpp272ZsMcZ5SzO2DftvuZrZyxvoGJ4i
      e3kIt01hJpTgYNZuPPc+edPjf94QRAmjZjvLXeeRo4scXVQwYmFcbpGUqrLLb6PGlmRusBfp
      wd8l4S+jdfYQXutNnk9NMZS/A4vbt2bf6ZNVFtJ2ci1xUoblwxMHUKw21H2/hjH2MkLdNkQU
      dF2/wfbNL8jhYls3tXUVTE/N09U5QF19BW3nOpianCeVUEmmUyTiSXw+LyXFb96PVtM0Lr90
      kKBgw1VZyejmh3HaPxiX6VvibSxCLlnFJQcBidGInVKniiQq7HziYaKLJYym3vwndj7yuxyZ
      eoTgxBC+smq8RW+fRvDzgMXlgd/6ZybSKdwWK1PHXmAyMI0vOY0cGaTCLRLMqsQmCngcFuLa
      zV9STBeQbDf+jmNJF+CiK5qZWD40ZLirMHQdf3qGh4oCGGISi9WyxhyJxxOkkmlkRWZ2egFv
      lgeP20k0GmdudpHs7CxUTSUcilBfX4vVeusosGmaHP3ZYdxtxzFEiaN3/jneivc/mebtIjY5
      TM6zf407sYh3+1b2ffLRWx67OLeI3WHD6V5RcFPg1Hw26/1hXLKGiAymwL9Nv31awIcd4ZkJ
      wlMjFG/agyCKmYrTz/0tjyg9awOjpsnzWgPOx/+ImC5j3sKctaJ/+BQAYLnvEveUpWkpdaEL
      SQRBRFau5/5k7Leb+clFFAx0eBuJ5pOjk0x/+xvMLIUZqr4L56O/gyj94hfF+31DBAfPkVuQ
      R27+VTqBsNJaKOMnnxydYLizh7oNzeQU5NH2zI+IL81TeNuDNLTUZNiipnhTBRBMk2wlzZL2
      zioofBihRoN4XvkS28xhfDaJYFLnnFBF5L4/ZHuBSZElvlKBGg4sX8s9d0sat/tu0iPsw4Ds
      +o0syBEwJ/j/2zuz2Liu847/zt1mn+FwONxFU7spS7IoW5Yly7Ud1U5tJ24TO3aRBgnSIk1b
      BGgboEXRACn60u2hRVvAAYLkJWlSo4njOFG8JfEiR1Jk7YuphaIWLuI2JGfjrPfe04fLVVws
      a6FmpPkBhKDLWe7l/f7nfOfcbzHUAAf3HyRaH6G2MYxlSwK+4KxEcZgODwZQUGGRRhSThGuq
      OeaLMmYsw/3kV0rC+CNajmZfgbp71iGUKxNgnOvL5/IMvP0qWwIZLr5xmJ61nyCc6CI7muL8
      K/+DYj7L3e33wjxVKAAeDQ8gsXk33nTTr+dmo/urGP+Df+Sn546jjvVSXxdlvGULW6uSbAlk
      keT51S/3MmD66PGtJVTfxPjYCANdB3j+hfbSFABAv+VnIF9N3y9fZEfTOU4ey3P4gAeZGybp
      vp/tjz9BKDK5IJyuqbP7rfd5aOf2WWsHy7LoOPohG+6b3Z3c5/dS98ffoDddg36VldduBuOj
      w1jFIsG6Rjb4nIZ3mqYzGRY9EosTqamauEaNof5eInYCRRi0VikcTqc5Gvfx5F3OiH7sjZ+w
      cv09oMx2/1zCYr0vzipvnNOZ0q+4fbWkR4bweD18cceDGLk4aSOOT7UmnqYrIFWa6iKc7o9z
      trOD5o3309C6Ek3VSlcABSl4PV1PY2oMVREkk2l2bNY5elzwxOoL7H3vB6z71FfRDcdQbCwU
      VLY+snWW8duW5J3X3mHj/Rvn/R5T6FdddvBm0XvyMJn4KM3r72MwNMrRU3tobKpjeGgUl8sg
      VBXA6rCcWJlQgDVrWjmuVFEvx+m8nGbc1Um4aRnYF6Y+c9zUeCfZMvX/RiPD0zXdICQSyVBu
      8c2BcsKbHaFOz3PmQCdutwuvd4CGu52HmQoGO3Y8gNfrofHUWWLtD3Lcqqc6Fkdaeulsgy7E
      oFjGwLlTpL0biA2NkRqNs2aZn5PnRjnTbbJ87YqJ8AXHRZhMkgHnkCJ0lrUuQ9M1dEPn0sVe
      EvEUoVCAyz2XOZSux9Ru7a6Pqun4I7Vk4iNECsME3Ba6prFyVQuRaBjbsjFNx/d3u100NtXh
      a1nDD9/uRGTiPHIXDAdaGcir9CdNLt73FU56tpCV02ugBmOcVm+KrlNnGB0e4oJ7w3XlBJQS
      jbFj+BOX0HUNXdcpFk0aZlQV1ye2tKPRCHcFBHf7cqxv8KGronRngEm8d22g/67/IkiRpyIX
      GI718/2ffo8WI8uabZvQtEVuogCkJDGWIB4fQ3e7SL3yXSTws+AaWoY7ccsIqWf/Gd13ZYzk
      0hGeEYGp6yZP1HRjK4sHLZupBM+ERzl0ocgxq4X2h7fhD/nZPdZCMTO3GkVqIgCs+9gHpE2D
      kceenfOa3NgwuteP6iqPlrRCStZ68ux86L4ZvYcdt1FKCyF1p0exmCh9LQUISVCbDq8veQFM
      4tIUNOGjoamJT/3J1xgeHKS+eXaQl8SeXX5QOuUJw9URju79LelMlhW2jVAE6f4+6kM6xdQY
      vYmRWyqAmfQUNXqy1aROvUXPe79GDUfY/vnncc/zlFtK8FTXsO35LziJ8UB3dv7raDSc0ORH
      X/gCJ5JVDKTnviYfjzlPTktYAIaQtHvzNOkWja4CzvpvIkx65sbHxP6BLZ1qGQIVRbqR0nQG
      F6mgUMJrgCvRhUQTbky7iNvtpq5p4VwBIdUJMTiXd+DN17hn9BACeKnfJpgYxdXgYpe6kcya
      Nfg+Rg7pUvDeqIfaV3/Mhlo3jPdy4PVf8/BnngKcXmHH9hzk5OETvPHmOZ585nfZ9/5Blq9s
      ob4pSo2Wp68416XbEHA6w0hps/eD05itQVze2esAf/O11ddcKgKKzdNVGaL65O7f4i6cxEIK
      E0W6prbEBTqKPe0alo0AFEBVdKTlxxIW+VwcTb9yJ0NMvVqZ+ON0d3XRe2Qvba3OqBYYj9FS
      HSCRG2f8ma/jFaW15gFIWgpV8+RMAOx76WWWDZ5ju2XT9mgjfvMMJ17dT3hFNb0rH8K+70/n
      fV/eVtEVm6LUiOn1JA7vQ1FUws2tpIb7ySYTtNzrtFZNDQ8iVBVvKEwmMYaZy6IaLurXLBRp
      uzQ8EsjNMP6PRqCiysVns9K7+wvgETZCKKiKgVksompzT/3C2Us4z/VsJDa5Qob+X32bLa2S
      D84Ps78zRrJmLYfbnufSU99ElKDxA6i6jv/JP+NkwUuHfxlbntwJgGXZZM6dxaWp+F06Y8ki
      y2p8VHvcXLyYZfDdN7jY8eG8n3k244SXn0hXM3D2JIFoPcVclpHu8yzbuAVlYvOg+9gBEoN9
      JAcvc37/bkYudZFNJeg+un9pLn4RXOLGd+IpmxkgrEts21m8mFaeYsHGPUPcAgU5mQcurFn/
      Nkc9XEpp7Im8QGD9Dvzh2iU992uhbv2D3L29BSmmiwFYlklPIssav4Jp2YSDutNDuKhwb1M1
      H/aPYl04AqvmVsg+lIpyOFmDFIJ7n34egIa102Uk1z7shD+3PfbU/Ce07eaVmLlauvIajTeg
      GeFMSnMInIeg6lj3WKabZCpO1+nzCDTHv5MGApXVa1c7D4skIBUMQ6f28S/ygxMq+5b/BTUP
      fxZXGRg/QFded65LalMLuoO73mS1T9IxFmP3pT50Q6AqCj6/4NClGFlZxHLP3QGaZKGYmHLB
      ivew5ze7OXr0KLZ99a7QYpTHDCAlrb446XwCW8kQCoeI1tUipIrAWfA6RjL5RFhgFk3ef+l/
      kVis+fzfkbWWPsvreugravTlNRrcAlCwbZP0qRNsbAjxekeCT29pIpEp0jWQwpSStsYQ754d
      xH3f07f61G8KuX3/hzf2MqujBpnLJu8djrD+U39JtPb6CieUxQygSomQ45hWBt0wUFUNpDK1
      7SUmkl7ERMCYQHD0yEmqBzrwdHfw+vEkirb08f3Xy3vxGrL5cSx7dtmXprAXj6ERDbp5+9gQ
      akHD59KpD7iR11LzvMRJf/g+z2Uc4wfwujQ2RRKc3PWfH3smmBH7CZTJDGANnuW1fa+hZxPU
      rlrBvQ89QE9XLz5PGI/Px5HDB9l03wb8geldoY3ta/nN6XV0jIdoWLf5Fp79tVFMjpDb+yLH
      zVNYik5o46P429ZT7DlBrc/L/rMjmEXJ8nCA1hpn739YCWJ4b58Yn0nqun5BVe3csPbV/hGO
      nTjMhk1tCJSpHZ/JQMm0qRDQnAFh4HI35w78GCVzCVvx4G7aQfu2J0tfAOnec9S9+jfkcnna
      l9eT3HOGjmAVrS0r0BQ37774r2wKFti9/1fs/Ku/nYr/d2k+1E//PUa2RJJbPga2ZVL7/r/w
      TP3liZ0qi1jXm5zNtZIYGiFsuIkYHg5dHqGtPowtJQd6UsQ++Q0WXgGUL4Y5Pu9xn0vj/PjY
      RHyTRUdG4UJOJ2kLYkUdhCCoWNyTOU3wxL+zrW5yQ6FIrrCLI+8Ml74A4qc+4PdbXHRemtjZ
      YSK3N1BFZjyPa3yEPktFSeR475++Sa+l075zJ8b9n+FMGRo/QLq3i096ZnfCrAlo+M4fYfu9
      UWLJPIWizTLLw488j5DNSta+8CxVDS2LfGr5EgusBg7MOX5+OM/qHU4ZzJ/FIvQVZzwtn/AE
      k7bK0X0/5cuthVnvdRsKNcm9pb8GqGrbyv7uPNEanZeO9TD+wOO0bXAu2ufzEn7ksxwdLLCx
      uZr1UQ9idID4+z9nz3D5+fwfhWQipznkpqnGi8vtYt0ffo0tX/prgrep8QOYD36Jd/tm38+x
      dIG3o5/jx+ZGvtXfONv4ZyClpLF4ft7fNVaXQSiEv3E5D37l63QdO87nnm2jscVJ4piM79j8
      2E7CTS0c//5/k82ME/BqXNbrsQ1f2S4H/c0rOXiyhcZQ36zO7QciT7EivofGKhfZgsWHjU/h
      KoEknpuNKxCi64n/4NJvv0dNqpOC5mNw1dP41+34yPcKIcgIL8xTETWXL9GUyJmkP3iFrz29
      GkWdbIg3UeJEqijSi0Ahl8vx9nf+jer8APsHBeaXvo13kbTP9NUAAAd8SURBVMrE5UAxOYJv
      74ssL5wlLT10LX8O14bHSV44idG1ByvUiP+BZ271aZYFuUM/4c/9L+MxZg+JRzrjpS+A9sAg
      m4NDTpL3FQipI6TGxc5L5N/+FnVBnf5kkV0b/4Fg69LWtblZmPkciqbPaiZ+p9Hx659Tc9dq
      alc5+c2FrLMoHh+NzQolXwjbMnEf/A47xbu0RFSyeYvO3jR1Ve5b7wJJKena9w51q9cRiM4t
      Yz5WcDOzY0oikSIY9NPd3c9dLU3sS0Y5ptXhL/yc+5O9HCw0421YvoRXcHPRXNfeyeV2oZjN
      MtpznpNvvUJL+4PYponh9ZIcGiCbiNO4bvHGiIqqkX/gq/yobyfmYCe5dIrPe16modq49TNA
      MZ9jrOcCtm0zcukcutuLbZlOkSTLxOg7zO890IRtS7KZHD6/F5dhkEg4ubMfyA00bNqOmc+S
      6b+It2F5xWhuM8ZHh9FcbnpPHCK6fA3ecITBzg5CDc0IWLQRx0KIfd/lOfcvb70AwMlScvkC
      pGOD1K5qQ1EUksMDICXLZS/NygANDbWMj2fx+70YhsEvLvoINy5juOi+pj9AhTsbKW2yZ/aW
      hgAWw4XJF5s65xy/mA2ye6ye/AJ17ytUuBpK+zmABF2ZPwa8MxOsGH+F66a0BQAs9yTnHCta
      ChdzpZHDW6G8ueW7QIvhUkzag7FZx0YKLnbFSiuHt0L5UtIzwLbgEC5ldgjrSNG9YL+rChU+
      LiUtgBPjEafCw4yQ7zW+BNuDg7fupCrcVpS0AD5RNYhAoCrTnlreVrmYm9sJskKFa6GkBVCw
      lYmMn+kYjg/TES4XSrdw0+1MjWbR5ip89AvLiJIWQG/BO6tt6UDOP1Xeo8LSEzNVTuUXbjhS
      jpS0ALpzXvKWk+SOVLhc8JKyFti4ktL5qVDhY1DSAsjZKk44vI2CtmBhpJBistaTxVjgoVmF
      CgtR0gJI2Tp9eTcSm0sZL41GbmZg6BQJW+NMzktBlvTlVChBSt5iTo6HEShcyPswFIsN/sSN
      /xIp5xVWhdufkhfA5YKH3WP1bA/FCGgm20MxNnrjN/Q7BNOV5yrcWZR0KMQkp7NBTmeCLHen
      iRVdpOwbm/AuhSBpl2sGcYXroSwEAICAC/nbp69VhdKg5F2gChVuJhUBVLijqQigwh1NRQAV
      7mgqAqhwR1MRQIU7mooAKtzRVARQ4Y6mIoAKdzS3jQACqmS1yyKq2ZXAtgpXTfmEQiyEhM1+
      k7u9FudzKp0plbJtDFBhySlrAbT7TAwFiha8FddJmRXLr/DxKGsXqNlwQpiPjGvEigp5WRFA
      ubDCbdGiT3d9NxbI9rvZlO0M0GTYrPDaBAqSo2m1YvzXgoQmlzOIJC1Bylq6v2FUlzT7bdpM
      CxtBVLc5lVHpyysMmbPH5YBqs8pt82FGpXCt99nprjiH8hSAhGciTnmOqCHZ7DfZl7r9muLd
      VCT8UW2eGsMZefM27BrR6S3cmKp7LiFp81q4FKYGqJAqEUgSRcE6r0VQkzCjt13UMAE4n1Ho
      yimcy6kUbMFzNUWCmqTJZfNBUmOoqEwZs5QgBAgpudtnk7fhfE6lzWtxj8dEIqg1bBKmoCun
      EisKurLT68SyEoBLSJoNm00BC8UuguIYfbzi+38sajSboCYJaNNuh0uBdr9FPikYNq/fM94a
      NGn3Oy5Ou98kbwvH4K+CFV5ndt9UsHApkuCEla702Kz0FBguCI6lVfwarHRbU5/rmjjtXTHY
      7DMnxO38LmrIKYHl7SJdWUcMJd8fYCZRzZmunwrnCGoSRVEZLgh+ODx/i8wKVyAlj4ZMEpbg
      d6rMBV92JK0SKygkLUGNbtOXV65aFEFV8uX6uR0ZS5WymgEmb0LShCrDEWrF9/9omg2bNq/J
      So89NUouhjNyW7OO5W0YLiicyih0ZOeajSEkm/0W67wLC6sUKSsBACDBp07fxVrdRkiJFHe2
      EAwhCWqSWFGZdWxbwGRTwFrknVeHS4Fmtz3hO1u4FcnhtDblSz8aKtLmK7/CAmUhgHs8Ji2G
      zesJA5ciiczweAwFIrokdoeuA0KKzd0+m2aX83M0pbIvpVGQzkLzRhj/TCa/B0BXYH9KI6za
      NLnK8/F7WQggokvW+G3eScz1L5OmIHYDFm1LQbvP5HBaner+vhBbA0WEFPQUFPK2s0UpmOvu
      CSl5OlIkakwb36aAhUeRnMioBNWbb5SPBYtsvMEiW0pKWgC1ms2QqUzd4IerihhX2HpAtWky
      bPoKpS2CTT6T36kyaXI5i8qhokJQldM7GDNcmK1Bx6C2Trw3aTouyFtjOiMFQdSQNBo2Kz32
      vDsra302jS6bwE2+uw8Gy8vfn4+S3gUKKc6WZ5vXwhBywZHzt0mN/anS0fIKt4VbwDqvRdSw
      SZpiar+9nJFy4XtQrpSO1VxBdGKvuiursslvMbnaKuWbEFRt2n1z/e7bwfhvV0rWbxg2FZDw
      eLi46OucBhqlwTqPfcMXnaVEqQ4818MNnwGaDZsmlz3l317Oi2sOUzAUZ/95JlfehJkNNG4V
      QkKjy2ZToPx94juN/wd+b+w31FLPEQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      /g9TgmbdUJzMuwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='KPI' width='192'>
      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
      ERWgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Square Meter Comparison' width='192'>
      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
      4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Static Weather Map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Temperature Line Chart' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
